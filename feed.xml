<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://tech.bedrockstreaming.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tech.bedrockstreaming.com/" rel="alternate" type="text/html" /><updated>2024-04-08T14:24:47+00:00</updated><id>https://tech.bedrockstreaming.com/feed.xml</id><title type="html">Bedrock Tech Blog</title><subtitle>Blog technique de Bedrock</subtitle><entry><title type="html">Au-delà des industries : Le pouvoir de l’état d’esprit #LFT 02/02/24</title><link href="https://tech.bedrockstreaming.com/au-dela-des-industries-le-pouvoir-de-l-etat-d-esprit" rel="alternate" type="text/html" title="Au-delà des industries : Le pouvoir de l’état d’esprit #LFT 02/02/24" /><published>2024-02-02T00:00:00+00:00</published><updated>2024-02-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/au-dela-des-industries-le-pouvoir-de-l-etat-d-esprit</id><content type="html" xml:base="https://tech.bedrockstreaming.com/au-dela-des-industries-le-pouvoir-de-l-etat-d-esprit">&lt;blockquote&gt;
  &lt;p&gt;Je souhaite explorer l’idée selon laquelle le succès n’est pas défini par une industrie, une discipline ou un secteur spécifique, mais repose plutôt sur notre état d’esprit. À travers mes expériences personnelles variées - en cosmétique, marketing, e-commerce, ainsi que dans le domaine des bars, restaurants et de l’industrie - je mets en avant l’idée que les principes du succès sont universels. Cette présentation souligne l’importance de la mentalité, de la persévérance, des stratégies adoptées et d’une méthode, indépendamment du secteur professionnel. 
L’objectif est d’inspirer et de redéfinir la perception du succès, en dépassant les barrières spécifiques à chaque domaine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;En résumé, c’est une approche universelle vers la réussite qui est essentielle, quel que soit le secteur d’activité&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par &lt;strong&gt;Serge Menassa&lt;/strong&gt;&lt;/p&gt;</content><author><name>Serge Menassa</name></author><category term="lft" /><category term="tech" /><summary type="html">Je souhaite explorer l’idée selon laquelle le succès n’est pas défini par une industrie, une discipline ou un secteur spécifique, mais repose plutôt sur notre état d’esprit. À travers mes expériences personnelles variées - en cosmétique, marketing, e-commerce, ainsi que dans le domaine des bars, restaurants et de l’industrie - je mets en avant l’idée que les principes du succès sont universels. Cette présentation souligne l’importance de la mentalité, de la persévérance, des stratégies adoptées et d’une méthode, indépendamment du secteur professionnel. L’objectif est d’inspirer et de redéfinir la perception du succès, en dépassant les barrières spécifiques à chaque domaine.</summary></entry><entry><title type="html">Comment j’ai retrouvé le sens de la vie grâce à WebAssembly #LFT 02/02/24</title><link href="https://tech.bedrockstreaming.com/comment-j-ai-retrouve-le-sens-de-la-vie-grace-a-web-assembly" rel="alternate" type="text/html" title="Comment j’ai retrouvé le sens de la vie grâce à WebAssembly #LFT 02/02/24" /><published>2024-02-02T00:00:00+00:00</published><updated>2024-02-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/comment-j-ai-retrouve-le-sens-de-la-vie-grace-a-web-assembly</id><content type="html" xml:base="https://tech.bedrockstreaming.com/comment-j-ai-retrouve-le-sens-de-la-vie-grace-a-web-assembly">&lt;blockquote&gt;
  &lt;p&gt;Le jeu de la vie est un drôle de jeu qui a la particularité de n’avoir pas de joueur. Il se joue de lui-même et produit des configurations qui semblent évoluer de manière autonome, sans intervention extérieure. A partir de règles très basiques, des structures d’une très grande complexité peuvent émerger d’une manière qui évoque l’apparition de la vie sur Terre à partir d’éléments inertes, d’où le nom mystérieux de jeu de la vie.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Comme ce jeu se joue idéalement sur des plateaux sans limite de taille, la question des performances de l’implémentation est capitale. Pour du développement web, cet exemple permet à la fois de voir les limites de JavaScript pour effectuer un grand nombre de calculs et de présenter une solution complémentaire à la réduction de la complexité algorithmique : une implémentation en WebAssembly qui permet de déléguer la charge de calcul à un langage compilé plus performant, Rust.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par &lt;strong&gt;Théo Gianella&lt;/strong&gt;&lt;/p&gt;</content><author><name>Théo Gianella</name></author><category term="lft" /><category term="tech" /><summary type="html">Le jeu de la vie est un drôle de jeu qui a la particularité de n’avoir pas de joueur. Il se joue de lui-même et produit des configurations qui semblent évoluer de manière autonome, sans intervention extérieure. A partir de règles très basiques, des structures d’une très grande complexité peuvent émerger d’une manière qui évoque l’apparition de la vie sur Terre à partir d’éléments inertes, d’où le nom mystérieux de jeu de la vie.</summary></entry><entry><title type="html">Du code à l’image : Aller et Retour #LFT 02/02/24</title><link href="https://tech.bedrockstreaming.com/du-code-a-l-image-aller-et-retour" rel="alternate" type="text/html" title="Du code à l’image : Aller et Retour #LFT 02/02/24" /><published>2024-02-02T00:00:00+00:00</published><updated>2024-02-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/du-code-a-l-image-aller-et-retour</id><content type="html" xml:base="https://tech.bedrockstreaming.com/du-code-a-l-image-aller-et-retour">&lt;blockquote&gt;
  &lt;p&gt;Pourquoi l’intelligence artificielle doit-elle s’entraîner pour devenir meilleure, et comment fait-elle ? C’est quoi un réseau de neurones ? Comment Dall-E arrive-t-il à dessiner de si belles images ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Depuis peu, l’intelligence artificielle fait énormément parler d’elle. Pourtant, derrière les termes de “Deep learning” et de “Réseau de neurones”, il est rare de comprendre exactement ce qui se passe dans la machine. Et si on explorait ça ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Découvrons ensemble, dans une présentation ne demandant strictement aucune compétence technique, les bases de l’apprentissage de ces intelligences, afin de comprendre un peu plus ce qui se passe derrière les rouages et toute cette magie !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;N’hésitez surtout pas à venir même sans la moindre connaissance technique, le but de cette conférence est que même votre grand-mère puisse y venir, et en ressortir en étant capable d’expliquer ce qu’est une IA !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par &lt;strong&gt;Etienne Doyon&lt;/strong&gt;&lt;/p&gt;</content><author><name>Etienne Doyon</name></author><category term="lft" /><category term="tech" /><summary type="html">Pourquoi l’intelligence artificielle doit-elle s’entraîner pour devenir meilleure, et comment fait-elle ? C’est quoi un réseau de neurones ? Comment Dall-E arrive-t-il à dessiner de si belles images ?</summary></entry><entry><title type="html">Le leader imposteur #LFT 02/02/24</title><link href="https://tech.bedrockstreaming.com/le-leader-imposteur" rel="alternate" type="text/html" title="Le leader imposteur #LFT 02/02/24" /><published>2024-02-02T00:00:00+00:00</published><updated>2024-02-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/le-leader-imposteur</id><content type="html" xml:base="https://tech.bedrockstreaming.com/le-leader-imposteur">&lt;blockquote&gt;
  &lt;p&gt;Je ne suis &lt;strong&gt;pas expert&lt;/strong&gt; de mon métier et ce n’est pas parce que j’en parle facilement que je pense le devenir un jour.
Je n’ai jamais su être un leader, et tous les &lt;strong&gt;leaders m’impressionnent&lt;/strong&gt;.
Je pense que &lt;strong&gt;les autres sont meilleurs&lt;/strong&gt; que moi et que je ne pourrai pas être leur égal.
J’ai été nommé &lt;strong&gt;par chance&lt;/strong&gt; à un poste de &lt;strong&gt;leader&lt;/strong&gt; alors que je n’en avais pas la légitimité.
Et…je n’ai &lt;strong&gt;jamais eu confiance en moi&lt;/strong&gt; (j’aurais peut-être du commencer par ça)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ceci est une histoire, MON histoire, et je vais vous parler de mon syndrome de l’imposteur.
Comment vivre avec, mes conseils, mes craintes et mes peurs…mais surtout comment vous pouvez vous aider et aider ceux qui le possède également.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par &lt;strong&gt;Mathieu Mure&lt;/strong&gt;&lt;/p&gt;</content><author><name>Mathieu Mure</name></author><category term="lft" /><category term="tech" /><summary type="html">Je ne suis pas expert de mon métier et ce n’est pas parce que j’en parle facilement que je pense le devenir un jour. Je n’ai jamais su être un leader, et tous les leaders m’impressionnent. Je pense que les autres sont meilleurs que moi et que je ne pourrai pas être leur égal. J’ai été nommé par chance à un poste de leader alors que je n’en avais pas la légitimité. Et…je n’ai jamais eu confiance en moi (j’aurais peut-être du commencer par ça)</summary></entry><entry><title type="html">Le LFT du LFT - PUB LFT #LFT 02/02/24</title><link href="https://tech.bedrockstreaming.com/le-lft-du-lft" rel="alternate" type="text/html" title="Le LFT du LFT - PUB LFT #LFT 02/02/24" /><published>2024-02-02T00:00:00+00:00</published><updated>2024-02-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/le-lft-du-lft</id><content type="html" xml:base="https://tech.bedrockstreaming.com/le-lft-du-lft">&lt;blockquote&gt;
  &lt;p&gt;Comment aider les LFTs ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par &lt;strong&gt;la LFTeam&lt;/strong&gt;&lt;/p&gt;</content><author><name>LFTeam</name></author><category term="lft" /><category term="tech" /><summary type="html">Comment aider les LFTs ?</summary></entry><entry><title type="html">Mon premier jeu sur BGA #LFT 02/02/24</title><link href="https://tech.bedrockstreaming.com/mon-premier-jeu-sur-bga" rel="alternate" type="text/html" title="Mon premier jeu sur BGA #LFT 02/02/24" /><published>2024-02-02T00:00:00+00:00</published><updated>2024-02-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/mon-premier-jeu-sur-bga</id><content type="html" xml:base="https://tech.bedrockstreaming.com/mon-premier-jeu-sur-bga">&lt;blockquote&gt;
  &lt;p&gt;Introduction au jeu de société Velonimo et à la plateforme de jeux en ligne Board Game Arena, suivie d’un retour d’expérience de l’implémentation de ce jeu sur cette plateforme en tant que développeur Web.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Par &lt;strong&gt;Oliver Thébault&lt;/strong&gt;&lt;/p&gt;</content><author><name>Oliver Thébault</name></author><category term="lft" /><category term="tech" /><summary type="html">Introduction au jeu de société Velonimo et à la plateforme de jeux en ligne Board Game Arena, suivie d’un retour d’expérience de l’implémentation de ce jeu sur cette plateforme en tant que développeur Web.</summary></entry><entry><title type="html">Journal de l’alternant - Comment j’ai perdu mes dépendances pnpm</title><link href="https://tech.bedrockstreaming.com/2024/01/10/journal-de-l-alternant-comment-jai-perdu-mes-dependences-pnpm.html" rel="alternate" type="text/html" title="Journal de l’alternant - Comment j’ai perdu mes dépendances pnpm" /><published>2024-01-10T00:00:00+00:00</published><updated>2024-01-10T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/01/10/journal-de-l-alternant-comment-jai-perdu-mes-dependences-pnpm</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/01/10/journal-de-l-alternant-comment-jai-perdu-mes-dependences-pnpm.html">&lt;p&gt;À Bedrock, on m’a chargé de faire un POC (&lt;a href=&quot;https://fr.wikipedia.org/wiki/Preuve_de_concept&quot;&gt;proof of concept&lt;/a&gt;) pour tester les avantages et les limites d’un double run entre notre app côté web (sur &lt;a href=&quot;https://tech.bedrockstreaming.com/2017/05/17/spa-mode-isomorphism-js.html&quot;&gt;une base maison React Server Side Rendering&lt;/a&gt;) en déléguant des pages progressivement vers une app &lt;a href=&quot;https://nextjs.org/&quot;&gt;Next.js&lt;/a&gt;. Étant tout nouveau dans le dev et encore plus nouveau sur le projet, ma vie ces derniers temps est une suite d’obstacles, d’essais, d’erreurs et de triomphes (pas toujours, mais souvent) bien mérités. Je suis habitué à faire des erreurs plus lunaires les unes que les autres, mais je vais m’attarder dans cet article sur une erreur qui m’a retourné le cerveau. Au menu : erreurs soudaines, dépendances disparues et désespoir… Bonne lecture.&lt;/p&gt;

&lt;p&gt;Je suis alternant depuis un an à Bedrock et je travaille pour la première fois sur notre projet web interne. C’est un projet qui est très complexe, avec lequel vient énormément d’historique (premières briques écrite en 2014) et dont la lecture du code relève parfois autant de l’histoire que du développement.&lt;/p&gt;

&lt;h1 id=&quot;en-route-pour-laventure&quot;&gt;En route pour l’aventure&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;D’ailleurs à Bedrock, si on arrive à maintenir notre application web dans la durée, c’est grâce aux &lt;a href=&quot;https://tech.bedrockstreaming.com/2021/09/06/web-best-practices.html&quot;&gt;bonnes pratiques qu’on essaie de respecter au mieux&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;En bref, je n’ai qu’une connaissance très superficielle du projet et des outils qu’il intègre.&lt;/p&gt;

&lt;p&gt;Dans mes habitudes de code, il peut parfois m’arriver d’oublier de vérifier que le code que j’écris ne vienne pas casser les tests en place dans le code. Heureusement, notre CI qui nous est chère ne manque jamais de me rappeler mon manque de rigueur. Cette fois-là, je casse un test à cause d’une erreur tellement anodine que je ne parviens pas à m’en rappeler. Je peux juste vous dire que j’ai eu le réflexe d’aller dans mon terminal de lancer le runner de test jest à l’aide de notre package manager &lt;a href=&quot;https://pnpm.io/fr/&quot;&gt;pnpm&lt;/a&gt; dans une commande qui ressemble à : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm test TEST_QUI_CASSE&lt;/code&gt;. Le test est rouge pour une raison qui me semble venir d’un problème de dépendances. Ayant beaucoup trituré mes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;, je me dis que repartir sur des bases propres ne devrait pas faire de mal au projet. Je décide donc, sans savoir ce qui m’attend, de lancer l’innocente commande : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;J’observe que pnpm fait son travail, met à jour des dépendances, je devais effectivement avoir joué un peu trop avec mes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Je relance le test et là quelle ne fut pas ma surprise quand mon terminal, sans trembler, m’a affiché &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command: &quot;jest&quot; not found&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Je commence à penser que je ne viens pas seulement de casser un test, mais j’ai également cassé &lt;a href=&quot;https://jestjs.io/fr/&quot;&gt;jest&lt;/a&gt;. À ce moment-là, je venais de ressortir d’une bataille avec des dépendances et donc je venais de me familiariser avec le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pnpm&lt;/code&gt; et autre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bin&lt;/code&gt; . C’est dans ce dernier dossier que je me rends compte qu’effectivement, il y manque l’exécutable jest.&lt;/p&gt;

&lt;p&gt;En fait, il y manque également d’autres outils que je m’attendais à trouver comme &lt;a href=&quot;https://prettier.io/&quot;&gt;prettier&lt;/a&gt; et &lt;a href=&quot;https://eslint.org/&quot;&gt;eslint&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Je me dis que la portée de mon problème vient de s’étendre de jest à mes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt;. 🫠&lt;/p&gt;

&lt;p&gt;Désespéré, je tente une recherche globale des mots clés : &lt;strong&gt;prettier&lt;/strong&gt; et &lt;strong&gt;eslint&lt;/strong&gt;. Je finis par trouver une correspondance intéressante dans le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Voilà à quoi ressemble le fichier à ce moment-là :&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public-hoist-pattern[]=*@testing-library/jest-dom*
public-hoist-pattern[]=*@testing-library/react*
public-hoist-pattern[]=*@testing-library/user-event*
public-hoist-pattern[]=*enzyme*
public-hoist-pattern[]=*jest*
public-hoist-pattern[]=*redux-mock-store*
public-hoist-pattern[]=*eslint*
public-hoist-pattern[]=*prettier*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Je peux sentir qu’il s’agit d’une véritable piste parce que dans ce fichier sont listées toutes les dépendances qui sont cassées sur ma machine.&lt;/p&gt;

&lt;h2 id=&quot;comprendre-la-configuration-de-pnpm&quot;&gt;Comprendre la configuration de pnpm&lt;/h2&gt;
&lt;h3 id=&quot;hoisting-des-dépendances&quot;&gt;Hoisting des dépendances&lt;/h3&gt;
&lt;p&gt;Pour comprendre la configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern&lt;/code&gt; il faut d’abord comprendre comment sont formés les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; par pnpm. Il ne va mettre dans le dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; en racine uniquement les dépendances directes du projet, toutes les sous-dépendances seront placées dans un dossier caché &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pnpm&lt;/code&gt; et un lien symbolique sera créé.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Je vous invite à lire la &lt;a href=&quot;https://pnpm.io/symlinked-node-modules-structure&quot;&gt;documentation écrite par pnpm&lt;/a&gt; afin de comprendre leur système de dépendances.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cela peut parfois poser des problèmes avec des libraries qui utilisent des dépendances fantômes. C’est pourquoi pnpm laisse quand même du contrôle sur ce comportement.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On parle de dépendance fantôme pour désigner toutes les dépendances qui ne sont pas désignées dans le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; root mais qui sont quand même nécessaire pour le bon fonctionnement de l’application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern&lt;/code&gt; permet d’indiquer les dépendances qu’on veut forcer à être dans le dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; racine plutôt que dans&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules/.pnpm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La ligne &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern[]=*jest*&lt;/code&gt; veut donc dire qu’on ajoute jest aux dépendances qui sont accessibles depuis la racine et ainsi l’exécutable dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node_modules/.bin&lt;/code&gt; . Cela permet par exemple de déléguer la configuration et l’import de jest dans un package enfant du repository.&lt;/p&gt;

&lt;h3 id=&quot;retour-à-lhistoire-lets-debug&quot;&gt;Retour à l’histoire… let’s debug&lt;/h3&gt;
&lt;p&gt;A cet instant je suis convaincu que c’est le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmrc&lt;/code&gt; qui est responsable de l’erreur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command: &quot;jest&quot; not found&lt;/code&gt;. Je ne vois rien d’anormal dans ce fichier qui pourrait me mettre la puce à l’oreille, c’est alors que je me dis que peut être pnpm ne lit pas la bonne configuration. En lisant la documentation, je tombe sur la commande parfaite : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pnpm config get&lt;/code&gt;. Cette commande permet d’afficher la configuration que résout pnpm. La sortie de cette commande m’a mis sur une nouvelle piste puisque c’est là que j’ai vu apparaître la ligne problématique : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shamefully-hoist=false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Je tente de chercher dans le projet où est écrite cette ligne. Aucune trace de cette maudite ligne. Je retourne tout le projet à la recherche d’une ligne de code qui pourrait ajouter cette ligne de configuration. Je me mets à lire toute la documentation pnpm pour pouvoir comprendre d’où cette ligne peut venir. Après avoir désinstallé et réinstallé pnpm, node et redémarré mon PC, je tente dans un dernier espoir de créer un dossier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test-a-laide&lt;/code&gt; dans lequel je reclone le projet. Malheureusement, rien n’y fait.&lt;/p&gt;

&lt;p&gt;C’est à ce moment que je me dis que si le problème ne vient pas de mes outils ni de la configuration locale, il faut peut-être que j’aille chercher dans ma configuration globale. En effet, en ouvrant cette dite configuration &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.npmrc&lt;/code&gt;, je m’aperçois que c’est de là que vient la ligne &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shamefully-hoist=false&lt;/code&gt;. C’est un soulagement, j’ai enfin trouvé d’où cette ligne mystique venait.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Je suis encore à la recherche de la réponse à la question : pourquoi diable, ai-je mis cette configuration dans mon &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.npmrc&lt;/code&gt; global. Je pense me souvenir l’avoir fait en me disant que je voulais m’assurer que pnpm se comporte en faisant des symlinks (l’intention n’était pas mauvaise, mais la conséquence pas joyeuse).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On peut lire dans la documentation de pnpm que : &lt;em&gt;Setting shamefully-hoist to true is the same as setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern&lt;/code&gt; to *.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;En d’autres termes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shamefully-hoist&lt;/code&gt; à une influence sur le hoisting de toutes les dépendances du projet.&lt;/p&gt;

&lt;p&gt;J’ai deux problèmes avec la documentation à ce sujet :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tout d’abord, il n’est pas explicité le cas inverse à savoir si on met &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shamefully-hoist=false&lt;/code&gt; alors ça revient à écraser toutes les configurations de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Le comportement, qu’il soit un bug ou un cas à la marge, de la configuration globale de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shamefully-hoist&lt;/code&gt; qui écrase la configuration locale de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern&lt;/code&gt; n’est pas spécifié&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bref, après avoir déduit que c’était cette ligne qui cassait mon hoisting, je retire la ligne et je lance un pnpm install. Bingo ! Je récupère toutes mes dépendances perdues.&lt;/p&gt;

&lt;h2 id=&quot;enseignements&quot;&gt;Enseignements&lt;/h2&gt;
&lt;p&gt;J’essaie a posteriori de déchiffrer pourquoi j’ai eu ce problème et comment faire en sorte que cela n’arrive pas. Je pense être tombé sur un comportement étrange de pnpm. Je ne sais pas s’il s’agit d’un bug ou d’une feature. En effet, intuitivement, j’aurais tendance à dire qu’une configuration globale de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shamefully-hoist&lt;/code&gt; ne devrait pas override la configuration locale de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public-hoist-pattern&lt;/code&gt;. Je suis prêt à entendre que le comportement est attendu et voulu, mais dans ce cas je pense qu’un peu plus de documentation à ce sujet ne peinera personne. À cet égard j’ai ouvert &lt;a href=&quot;https://github.com/pnpm/pnpm/issues/7312&quot;&gt;une issue&lt;/a&gt; sur le Github de pnpm.&lt;/p&gt;

&lt;p&gt;Je retire plusieurs enseignements de cette aventure :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Douter de la configuration qui est lue par les outils&lt;/li&gt;
  &lt;li&gt;La documentation ne contient pas toujours tous les comportements&lt;/li&gt;
  &lt;li&gt;Il faut penser à voir plus loin que son fichier local de config et penser aux potentielles surcharges…&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;j_poissonnet&quot;]</name></author><category term="pnpm" /><category term="hoisting" /><category term="node_modules" /><category term="alternant" /><summary type="html">À Bedrock, on m’a chargé de faire un POC (proof of concept) pour tester les avantages et les limites d’un double run entre notre app côté web (sur une base maison React Server Side Rendering) en déléguant des pages progressivement vers une app Next.js. Étant tout nouveau dans le dev et encore plus nouveau sur le projet, ma vie ces derniers temps est une suite d’obstacles, d’essais, d’erreurs et de triomphes (pas toujours, mais souvent) bien mérités. Je suis habitué à faire des erreurs plus lunaires les unes que les autres, mais je vais m’attarder dans cet article sur une erreur qui m’a retourné le cerveau. Au menu : erreurs soudaines, dépendances disparues et désespoir… Bonne lecture.</summary></entry><entry><title type="html">Bedrock aux API Days Paris (2023)</title><link href="https://tech.bedrockstreaming.com/api-days-paris-2023" rel="alternate" type="text/html" title="Bedrock aux API Days Paris (2023)" /><published>2023-12-20T00:00:00+00:00</published><updated>2023-12-20T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/api-days-paris-2023</id><content type="html" xml:base="https://tech.bedrockstreaming.com/api-days-paris-2023">&lt;p&gt;Cette année Bedrock a envoyé 7 de ses collaborateurs et collaboratrices (i.e. nous, les auteurs de cet article) à l’édition 2023 des conférences “API Days” à Paris.&lt;/p&gt;

&lt;p&gt;L’événement a eu lieu au CNIT à La Défense (juste en face du marché de Noël) et a duré 3 jours, du Mercredi 06/12/23 au Vendredi 08/12/23.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/la-defense.png&quot; alt=&quot;La Défense à Paris&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En plus des 11 paires de chaussettes différentes 🧦 que nous avons réussi à débusquer en parlant aux différents partenaires sur place… En tout, &lt;a href=&quot;https://www.apidays.global/paris/#schedule&quot;&gt;ce sont plus de 100 talks, répartis dans 9 salles, qui nous ont été présentés&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Voici, un résumé de quelques-uns des talks que nous souhaitions mentionner sur ce blog 👇&lt;/p&gt;

&lt;h2 id=&quot;making-the-most-of-your-openapi-spec&quot;&gt;Making the Most of Your OpenAPI Spec&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conférence présentée par Alexander Broadbent (Principal Engineer - SAPI)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cette conférence expliquait, en détail, une technique “design-first” permettant d’éradiquer les erreurs de “désynchronisation” entre la documentation d’une API et son comportement réel, tout en générant une partie du code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/what-we-are-doing.png&quot; alt=&quot;What we are doing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/how-we-are-winning.png&quot; alt=&quot;How we are winning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cette technique peut se résumer en quelques points :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;la documentation OpenAPI est la source de vérité et décrit l’intégralité des endpoints de l’application (celle-ci peut être fragmentée en plusieurs fichiers)&lt;/li&gt;
  &lt;li&gt;un outil (&lt;a href=&quot;https://github.com/Redocly/redoc&quot;&gt;redocly&lt;/a&gt;) regroupe tous les documents OpenAPI dans un même fichier&lt;/li&gt;
  &lt;li&gt;un outil (&lt;a href=&quot;https://github.com/drwpow/openapi-typescript&quot;&gt;openapi-typescript&lt;/a&gt;) génère le typage Typescript correspondant au fichier OpenAPI&lt;/li&gt;
  &lt;li&gt;un outil (&lt;a href=&quot;https://github.com/seriousme/fastify-openapi-glue&quot;&gt;fastify-openapi-glue&lt;/a&gt;) applique le typage Typescript généré sur le code des différents endpoints de l’API &lt;a href=&quot;https://fastify.dev/&quot;&gt;Fastify&lt;/a&gt; afin de s’assurer que le code produit par les développeurs est conforme à la documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et pour les détails d’implémentation, le repository GitHub de la démo d’Alexander est disponible ici : &lt;a href=&quot;https://github.com/AlexBroadbent/openapi-demo&quot;&gt;https://github.com/AlexBroadbent/openapi-demo&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;forget-typescript-choose-rust-to-build-robust-fast-and-cheap-apis&quot;&gt;Forget TypeScript, Choose Rust to build Robust, Fast and Cheap APIs&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conférence présentée par Zacaria Chtatar (Backend Software Engineer - HaveSomeCode)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cette conférence au titre subversif expliquait pourquoi Zacaria, développeur Typescript/NodeJS à ClubMed, en est arrivé à s’intéresser très fortement au langage de programmation Rust… Au point d’en faire la promotion, en anglais (respect), aux API Days.&lt;/p&gt;

&lt;p&gt;La première partie de sa conférence parlait du langage de programmation Typescript, en dressant une liste de ses qualités (fullstack, très largement déployé en entreprise, écosystème riche, …) et de ses défauts (gestion d’erreur optionnelle, typage éphémère, runtime principal peu performant, …). Cette première partie s’est achevée par un message clair : “Typescript is not enough”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/typescript-is-not-enough.png&quot; alt=&quot;Typescript is not enough&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La suite et fin de la présentation, quant à elle, était une introduction à Rust.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/introducing-rust.png&quot; alt=&quot;Introducing Rust&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bien que nous étions surpris de voir que &lt;a href=&quot;https://survey.stackoverflow.co/2023/#section-admired-and-desired-programming-scripting-and-markup-languages&quot;&gt;le langage de programmation préféré des développeurs&lt;/a&gt; de ces 8 dernières années, et sur lequel &lt;a href=&quot;https://foundation.rust-lang.org/members/&quot;&gt;les plus grosses entreprises tech du monde misent aujourd’hui&lt;/a&gt;, avait encore besoin d’être mis en avant en 2023… Zacaria a effectivement eu raison d’en remettre une couche, car encore trop peu d’entreprises françaises ont pris conscience des avantages qu’offre Rust.&lt;/p&gt;

&lt;p&gt;Cependant, cette 2ème partie de conférence avait un goût de déjà vu pour nous car un de nos collaborateurs a déjà donné le même genre de conférence à Bedrock durant &lt;a href=&quot;https://tech.bedrockstreaming.com/lft/&quot;&gt;nos LFT&lt;/a&gt; 2 années auparavant (en partant de PHP plutôt que de Typescript)… Ceci étant, grâce à nos 2 ans d’expérience de Rust en production et pour les raisons évoquées par Zacaria durant son talk, Bedrock est en mesure de témoigner sa satisfaction d’avoir pris le temps de réécrire certaines des API les plus critiques de Bedrock en Rust. Et nous espérons que de nombreuses entreprises oseront suivre notre exemple, afin de permettre aux développeurs soucieux de la qualité de leur travail comme Zacaria, de disposer de ce merveilleux langage de programmation.&lt;/p&gt;

&lt;p&gt;Et si vous ne comprenez toujours pas l’intérêt de Rust, &lt;a href=&quot;https://www.youtube.com/watch?v=eSo3e3ugn5g&quot;&gt;le talk de Zacaria est disponible en replay sur Youtube&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;real-life-rest-api-versioning-strategies-and-best-practices&quot;&gt;Real-Life REST API Versioning: Strategies and Best Practices&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conférence présentée par Alexandre Touret (Senior Software Architect - Worldline)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;La gestion des versions dans le contexte des API au sein d’une entreprise peut souvent s’avérer être un défi complexe et délicat. En effet, les interfaces de programmation applicative (API) constituent le cœur des interactions entre différents services et applications au sein d’un écosystème numérique. La nécessité de versionner ces API devient impérative pour garantir une évolution harmonieuse tout en préservant la compatibilité avec les systèmes existants.&lt;/p&gt;

&lt;p&gt;Worldline fait partie des entreprises avec une architecture technique complexe, exposant à des clients finaux un modèle métier en constante évolution.
Ce problème fait très fortement écho avec le business model de Bedrock.&lt;/p&gt;

&lt;p&gt;Dans sa conférence, Alexandre a présenté son retour d’expérience sur comment versionner une API. Et comment l’exercice est loin d’être un long fleuve tranquille. Voici les points clés que nous avons retenus :&lt;/p&gt;

&lt;h4 id=&quot;toutes-les-apis-ne-nécessitent-pas-dêtre-versionnées&quot;&gt;Toutes les APIs ne nécessitent pas d’être versionnées&lt;/h4&gt;

&lt;p&gt;Le versioning c’est compliqué. C’est un fait. Autant l’appliquer sur des APIs où ce principe est vraiment utile. Il est effectivement peut-être moins utile de versionner une API interne, non exposée sur internet ou avec un périmètre fonctionnel très limité ou stable.
Voici les questions proposées par Alexandre qui peuvent nous aider dans notre décision : ai-je besoin de versionner ? Combien de versions dois-je gérer en parallèle ? Est-ce que ma plateforme est compatible ? Quels sont les impacts sur ma configuration, mon modèle de données, &lt;strong&gt;mon système d’authentification&lt;/strong&gt; (Alexandre a bien insisté sur ce point. Il ne faut pas négliger l’authentification dans la problématique du versioning) ?&lt;/p&gt;

&lt;h4 id=&quot;le-versioning-sapplique-aussi-sur-une-architecture-en-micro-service&quot;&gt;Le versioning s’applique aussi sur une architecture en micro service&lt;/h4&gt;

&lt;p&gt;On a tendance à croire que seules “les grosses API” sont concernées par le versioning mais Alexandre nous a montré qu’il n’en est rien. Un micro service, aussi micro (voir macro) qu’il soit, gère à lui tout seul un périmètre fonctionnel. Il est donc légitime qu’il puisse évoluer au fil des versions.&lt;/p&gt;

&lt;h4 id=&quot;comment-gérer-le-versioning&quot;&gt;Comment gérer le versioning&lt;/h4&gt;

&lt;p&gt;Plusieurs solutions, directement dans l’URL, via header (plus facile avec une API existante)
Alexandre a fortement déconseillé d’utiliser le versioning par content type. À la fois peu lisible et difficilement maintenable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/api-versioning.png&quot; alt=&quot;Comment gérer le versionning&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;limpact-du-versioning&quot;&gt;L’impact du versioning&lt;/h4&gt;

&lt;p&gt;Versionner une API change en profondeur nos manières de travailler. Et ce à plusieurs niveaux :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Le code source, la technique. Il est indéniable que le code source ainsi que l’architecture technique de vos projets s’en verra impactés. L’impact ne s’arrête pas au code en lui-même, mais sur tout ce qui gravite autour. Nos bases de données, nos scripts, nos configurations serveur ou nos images docker par exemple&lt;/li&gt;
  &lt;li&gt;Le produit. Nos API exposent le métier de notre produit. L’impact n’est donc pas que technique, mais aussi fonctionnel / produit. Une évolution de version technique entraine des breaking change et inversement. Il est donc très important, les équipes et produit travaillent de pair pour évoluer ensemble&lt;/li&gt;
  &lt;li&gt;La livraison. Avoir plusieurs versions d’un API complexifie la mise en production de cette dernière. Il faudra très certainement revoir nos pipelines d’intégration et de déploiement. Ce point est, lui aussi, à ne pas négliger et nécessitera un travail commun au sein des équipes techniques&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;lobservabilité&quot;&gt;L’observabilité&lt;/h4&gt;

&lt;p&gt;Alexandre nous a aussi parlé de l’importance d’avoir de la visibilité sur ce qu’il se passe en production, et tout particulièrement à la maille des différentes versions de nos API.&lt;/p&gt;

&lt;p&gt;L’observabilité est quelque chose de plus en plus répandu dans notre métier. Mais le versioning porte le concept encore un cran au-dessus.&lt;/p&gt;

&lt;p&gt;Il est primordial d’être capable d’assurer une bonne observabilité de nos APIs à la maille :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;De la version&lt;/li&gt;
  &lt;li&gt;Des clients (via des API Keys dédiées)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Une bonne observabilité est la clé pour définir une bonne stratégie et être capable d’anticiper le dé commissionnement de versions obsolètes. Ce point est selon moi très important.&lt;/p&gt;

&lt;p&gt;Il est très (très) compliqué de maintenir un nombre trop élevé de versions pour une même API. Sans parler d’obsolescence programmée, il faut trouver le bon niveau de maintenance pour éviter de tomber dans le piège de la dette technique. Pas facile comme sujet !&lt;/p&gt;

&lt;p&gt;Pour finir, je tiens à remercier Alexandre pour sa conférence vraiment intéressante. Bourrée d’exemples concrets. J’ai vraiment senti une vraie maîtrise du sujet. Bravo ! Cette conférence est mon coup de cœur de l’API Days Paris 2023.&lt;/p&gt;

&lt;h2 id=&quot;our-ongoing-journey-from-rest-to-graphql-on-android&quot;&gt;Our Ongoing Journey From REST To GraphQL On Android&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conférence présentée par Julien Salvi (Lead Android Engineer - Aircall)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Durant cette présentation, Julien Salvi, Lead Android Engineer chez Aircall nous fait un retour d’expérience sur la migration de l’équipe Android d’une API REST à une API GraphQL. Ce choix a été motivé par plusieurs raisons :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une problématique globale sur le scaling de leur API REST&lt;/li&gt;
  &lt;li&gt;L’efficacité et l’agrégation des données des API GraphQL&lt;/li&gt;
  &lt;li&gt;La recherche d’une alternative Serverless&lt;/li&gt;
  &lt;li&gt;L’objectif de limiter les perturbations pour les clients&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leur aventure débute mi 2020 et est toujours en cours.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/graphql-api-journey.png&quot; alt=&quot;GraphQL API journey&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour répondre à ces demandes, les équipes ont dirigé leur choix vers GraphQL pour créer leur nouvelles API, qui a plusieurs avantages selon Julien notamment:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;La possibilité pour les clients de récupérer seulement les données dont ils ont besoin, cela évite l’over-fetching et l’under-fetching&lt;/li&gt;
  &lt;li&gt;Les clients peuvent récupérer de multiples ressources dans une seule requête&lt;/li&gt;
  &lt;li&gt;GraphQL propose un moyen d’établir une connection constante entre le client et le serveur, ce qui augmente la scalabilité en temps réel&lt;/li&gt;
  &lt;li&gt;Le fort typage de GraphQL permet une communication claire, réduisant ainsi les erreurs&lt;/li&gt;
  &lt;li&gt;L’amélioration de la performance globale grâce au batching des requêtes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;L’équipe Android utilise le service &lt;a href=&quot;https://aws.amazon.com/fr/appsync/&quot;&gt;AppSync d’AWS&lt;/a&gt;, facilitant le filtrage, permetttant de faire du realtime, assurer une scalabilité et une bonne intégration avec ElasticSearch et DynamoDB.&lt;/p&gt;

&lt;p&gt;Après les premières migrations vers les API GraphQL, le conférencier insiste sur l’importance du monitoring, qui chez eux est présent que ce soit pour les queries ou les mutations.&lt;/p&gt;

&lt;p&gt;Voici les points à retenir de leur expérience&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/key-takeaways.png&quot; alt=&quot;Key takeaways&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour finir, revenons sur un de leur point à surveiller, Julien nous évoque l’importance de la collaboration entre les équipes front et backend qui est également selon nous très importante, notamment pour optimiser l’efficacité des API. On peut citer comme actions par exemple, se mettre d’accord sur les meilleurs timeout à adopter sur les API ou aussi créer les schémas OpenApi ensemble.&lt;/p&gt;

&lt;h2 id=&quot;why-api-contracts-matters&quot;&gt;Why API Contracts matters&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conférence présentée par Stéve Sfartz (Principal Architect - Cisco)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cette présentation par le Principal Architect de Cisco nous explique pourquoi, dans une stratégie API First, le besoin d’avoir des contrats ainsi qu’un cycle de vie de l’API est primordial pour la cohérence du système.&lt;/p&gt;

&lt;p&gt;Ils formalisent leur contrats d’API via OpenAPI Spécification, un standard pour les contrats d’API REST, en complément de documents OpenAPI, pour former la définition de l’API. A côté de cette définition, on trouve la gestion du cycle de vie (lifecycle) de l’API, pour informer des deprecated, du changelog et des Breaking Changes lors des versions majeures (semantic versionning).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/api-contract-definition-and-lifecycle.png&quot; alt=&quot;Definition and Lifecycle for an API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lors de la mise en place de ces contrats pour les API à cisco, une qualité (qu’ils appellent aussi Health Contract) y a été associée pour avoir une vue d’ensemble de la documentation des API. Ayant environ 2000 API, cette qualité ne peut pas être évaluée à la main au cas par cas, et passe donc par des outils d’analyse tels qu’un linter Spectral, pour éviter les erreurs et automatiser la génération de ce statut.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/api-contract-quality.png&quot; alt=&quot;API Contract Quality&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vient ensuite la gestion du drift entre la documentation et le code (par exemple si une annotation est oubliée, une route non documentée) : la vérification du drift doit être faite lors de la CI/CD.&lt;/p&gt;

&lt;p&gt;La conférence se conclut sur une question simple : “Quelle est la source de vérité pour vos API ?”. La réponse est bien évidemment le code, mais une documentation générée automatiquement permet justement de s’en rapprocher grandement. A Bedrock, nos API GraphQL ont leur documentation (schéma) généré automatiquement à partir du code lors du merge d’une PR, ce qui permet d’éviter les oublis de mise à jour.&lt;/p&gt;

&lt;h2 id=&quot;lets-bring-science-into-api-docs&quot;&gt;Let’s bring science into API docs&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Conférence présentée par Lana Novikova (Technical Writer - JetBrains)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Au cours de cette conférence, Lana Novikova explore comment fusionner les principes scientifiques avec une communication technique efficace dans la documentation des API. 
Elle partage également ses connaissances sur la façon dont les développeurs et développeuses consomment l’information en ligne, en mettant en lumière les liens avec différents styles cognitifs, le tout appuyé par des articles scientifiques. Elle explique de manière concrète comment ces principes peuvent être appliqués dans la documentation des API et comment ils peuvent contribuer à améliorer l’expérience des développeurs et développeuses.
&lt;a href=&quot;https://www.youtube.com/watch?v=9SdGWU867bs&quot;&gt;Sa conférence est une extension d’un précédent talk qu’elle a donné en 2022 à la “Write The Docs Australia”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La première étude que nous présente Lana s’intitule &lt;a href=&quot;https://www.cs.mcgill.ca/~martin/papers/tse2013a.pdf&quot;&gt;“Patterns of Knowledge in API Reference Documentation”&lt;/a&gt;. 
Elle parle de la nature et de l’organisation des connaissances contenues dans la documentation de référence de centaines d’API au sein de deux plateformes technologiques : Java SDK 6 et .NET 4.0. L’étude a, entre autres, consisté à élaborer une taxonomie des types de connaissances et a pu dresser la liste de 12 types de connaissances distinctes dans la documentation de l’API :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/taxonomy-of-knowledge-types.png&quot; alt=&quot;Taxonomy of Knowledge Types&quot; /&gt;&lt;/p&gt;

&lt;p&gt;À travers cette étude, nous pouvons donc évaluer le contenu de la documentation de notre API en fonction des types de connaissances et ainsi développer des modèles de documentation adaptés aux connaissances communément associées aux différents types de composants de l’api. De plus, aujourd’hui, des projets comme &lt;a href=&quot;https://thegooddocsproject.dev/&quot;&gt;the good docs project&lt;/a&gt; existent et proposent des templates de documentation basés sur ces données scientifiques.&lt;/p&gt;

&lt;p&gt;La deuxième étude exposée dans cette conférence a comme titre &lt;a href=&quot;http://sigdoc.acm.org/wp-content/uploads/2019/01/CDQ18002_Meng_Steinhardt_Schubert.pdf&quot;&gt;“How Developers Use API Documentation: An Observation Study”&lt;/a&gt;. Sa méthodologie consiste à l’observation active, via des screencasts et des protocoles verbaux, des activités des personnes participantes pendant le test. Les chercheurs et chercheuses ont évalué le taux de réussite, le temps passé sur les tâches et l’utilisation de la documentation et des catégories de contenu. L’objectif principal est d’observer comment les développeurs et développeuses abordent les tâches avec une API qu’elles ne connaissent pas. Il s’agit également d’analyser comment les développeurs et développeuses utilisent les ressources d’information proposées par la documentation de l’API. Cela permet de caractériser les stratégies adoptées par les développeurs et développeuses lorsqu’elles commencent à travailler avec une nouvelle API. La conclusion que Lana nous partage est qu’en moyenne, les personnes participantes ont utilisé la documentation de l’API environ 49 % du temps (Min : 31 %, Max : 68 %). La catégorie de contenu à laquelle il est fait référence le plus souvent est “API reference”, suivie de “Recipes page”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/content-categories-of-the-api-documentation.png&quot; alt=&quot;Content categories of the API documentation used for the test&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/proportion-of-time-spent-on-individual-content-categories.png&quot; alt=&quot;Proportion of time spent on individual content categories&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il se dégage que le temps que les personnes participantes consacrent aux différentes catégories de contenu varie considérablement d’une personne à l’autre. Sur la base de ces données, les chercheurs et chercheuses ont défini trois types de personnages de développeurs logiciels à la recherche d’informations ainsi que leurs approches lorsqu’ils opèrent celles-ci: Systematic learners, Opportunistic learners et Pragmatic learners. Pour les personnes curieuses d’approfondir le sujet, ces personae sont basés sur une autre étude intitulée &lt;a href=&quot;https://www.researchgate.net/publication/30815675_What_is_an_End_User_Software_Engineer&quot;&gt;“What is an end user software engineer?”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lana Novikova conclut en mettant l’accent sur le fait qu’il faut respecter les différentes stratégies adoptées par les développeurs et les développeuses lorsqu’elles abordent une nouvelle API et nous propose d’appliquer ces conseils :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pour les “opportunistic learners”, donner des exemples de code complets et exhaustifs en donnant la possibilité de masquer tout le reste et de relier le texte au code.&lt;/li&gt;
  &lt;li&gt;Pour les “systematic learners”, fournir des informations importantes de manière redondante et donner des connaissances de base pertinentes.&lt;/li&gt;
  &lt;li&gt;Pour les “pragmatic learners” (et les autres), donner un moyen technique pour commencer à utiliser une API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Je tiens personnellement à souligner qu’il est rare d’assister à une conférence aussi complète se basant sur autant de données scientifiques. Je ressors de cette conférence agréablement surpris de la qualité de tout ce qui a été proposé et des ressources mises à disposition. Je vous laisse avec &lt;a href=&quot;https://speakerdeck.com/lananovikova10/lets-bring-science-into-api-docs-c9bd5a57-df28-4fa3-9388-d2d9d9a044bd&quot;&gt;un lien contenant toutes les slides de la présentation de Lana Novikova&lt;/a&gt; qui expliquera bien mieux le propos que mon résumé. Bravo à elle et à son travail, en espérant voir de plus en plus de conférences de ce genre à l’avenir.&lt;/p&gt;

&lt;h2 id=&quot;le-mot-de-la-fin&quot;&gt;Le mot de la fin&lt;/h2&gt;

&lt;p&gt;Si on vous a donné envie d’en savoir plus :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;le &lt;a href=&quot;https://www.apidays.global/paris/&quot;&gt;site officiel de la conférence&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;la majorité des &lt;a href=&quot;https://www.youtube.com/watch?v=NdlhxIVlSEM&amp;amp;list=PLmEaqnTJ40OryW56Qo3c-C7hXcaR89xii&quot;&gt;talks sont disponibles sur Youtube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;certains speakers ont mis à disposition &lt;a href=&quot;https://fr.slideshare.net/APIdays_official/presentations&quot;&gt;les slides de leur talk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bonnes fêtes de fin d’année !&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/api-days-paris-2023/team.jpg&quot; alt=&quot;Team API Days Paris 2023&quot; /&gt;&lt;/p&gt;</content><author><name>[&quot;g_bouyge&quot;, &quot;j_hardeman&quot;, &quot;k_phan&quot;, &quot;n_alscher&quot;, &quot;o_thebault&quot;, &quot;o_weber&quot;, &quot;t_geindre&quot;]</name></author><category term="conference" /><category term="paris" /><category term="tech" /><category term="api" /><category term="eda" /><summary type="html">Cette année Bedrock a envoyé 7 de ses collaborateurs et collaboratrices (i.e. nous, les auteurs de cet article) à l’édition 2023 des conférences “API Days” à Paris.</summary></entry><entry><title type="html">Bedrock at 2023 AWS re:Invent Las Vegas</title><link href="https://tech.bedrockstreaming.com/2023/12/18/aws-reinvent-lasvegas-2023.html" rel="alternate" type="text/html" title="Bedrock at 2023 AWS re:Invent Las Vegas" /><published>2023-12-18T00:00:00+00:00</published><updated>2023-12-18T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/12/18/aws-reinvent-lasvegas-2023</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/12/18/aws-reinvent-lasvegas-2023.html">&lt;p&gt;AWS re:Invent 2023 was a showcase for GenAI. It was the announcement of Amazon Q, Amazon’s new AI assistant, that attracted the most interest, designed to meet the specific needs of businesses.&lt;/p&gt;

&lt;p&gt;Alongside these announcements, we had the opportunity to attend talks by some of the major players in streaming, such as Prime Video, Peacock, Netflix and Spotify. Their presentations offered valuable insights into their challenges, successes and lessons learned, enriching our own understanding of the sector.&lt;/p&gt;

&lt;h2 id=&quot;how-amazon-scales-resilience-to-new-heights&quot;&gt;How Amazon scales resilience to new heights&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-12-18-aws-reinvent-lasvegas-2023/aws-reinvent-2023-resilience.jpg&quot; alt=&quot;Practice like you play&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Olga Hall, Director of Live Events Availability &amp;amp; Resilience at Amazon Prime Video, and Lauren Domb, Chief Technologist, WWP Federal Financial Services, WW Chaos Engineering Lead at AWS, &lt;a href=&quot;https://www.youtube.com/watch?v=r3J0fEgNCLQ&quot;&gt;discussed the importance of resilience in the streaming industry&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;They highlighted the high cost of downtime and the impact on companies’ ability to serve their customers. We’re talking about an average of $300,000 per hour across the industry.&lt;/p&gt;

&lt;p&gt;In their view, preparing engineering teams for peak loads and streaming is very similar to preparing sports teams for major events. So they created a “resilience playbook”, a series of strategies and tactics inspired by the most successful sports teams, to help their teams become resilient in the face of the unpredictable.&lt;/p&gt;

&lt;p&gt;They also shared their experience of broadcasting Thursday night soccer matches on Prime Video, highlighting how they had to manage unpredictable conditions, such as weather-related match delays, which extended the duration of the peak workload.&lt;/p&gt;

&lt;p&gt;Availability is considered the number 1 feature at Amazon Prime Video. All projects and workflows are listed, budgeted and included in the list of expected features, with availability always at the top of the list.
To guarantee the availability of their services, they run load tests three times a week in each region, scaled for peak usage. This enables them to detect bugs before they affect users, and ensure that their systems are ready to handle the highest loads.&lt;/p&gt;

&lt;p&gt;At Bedrock Streaming, we share this focus on resilience. Our applications incorporate circuit breakers, we run load tests very regularly and practice chaos engineering. 
These practices at Amazon Prime Video offer an interesting perspective on how we might further improve our resilience at Bedrock Streaming. We were particularly impressed by the resilience score per application approach. This is definitely something we’ll be exploring in conjunction with a feature flipping by service approach.&lt;/p&gt;

&lt;h2 id=&quot;surviving-overloads-how-amazon-prime-day-avoids-congestion-collapse&quot;&gt;Surviving overloads: How Amazon Prime Day avoids congestion collapse&lt;/h2&gt;

&lt;p&gt;Jim Roskind, Distinguished Engineer at Amazon.com, and Ankit Chadha Solution Architect at AWS &lt;a href=&quot;https://www.youtube.com/watch?v=fOYOvp6X10g&quot;&gt;shared their experiences and knowledge at the conference&lt;/a&gt;. Formerly of Google, where he oversaw Google Chrome metrics and performance, Jim now works for Amazon with a singular mission: to buy less of AWS products. This approach, aimed at reducing IT costs, is supported by AWS, which wants to teach all its customers how to optimize their spending.&lt;/p&gt;

&lt;p&gt;However, this quest for efficiency and cost reduction is not without risks. One of Jim’s main concerns is congestion collapse, a phenomenon that can lead to a drop in productivity and even paralyze a system. To help us understand this phenomenon, Jim presented a series of pragmatic examples and theories on congestion collapse.&lt;/p&gt;

&lt;p&gt;What is congestion collapse?&lt;/p&gt;

&lt;p&gt;Congestion collapse occurs when demand exceeds a system’s capacity. This leads to the build-up of queues, reduced productivity and, in extreme cases, the complete cessation of productive work. This phenomenon is not uncommon and can occur in a variety of situations, from highways to web servers.&lt;/p&gt;

&lt;p&gt;Jim shared some examples to illustrate this phenomenon, the main one was about 
Amazon Prime Day 2018. Even giants like Amazon aren’t immune to congestion collapse. 
He hadn’t anticipated customer interest in a particular product. They had a massive demand for a product display and the service ended up being unavailable. At this point, traffic increased again sharply as customers began reloading the page. Above all, it highlights the fact that, as their services are slow to respond, the answers are no longer relevant, leaving us with a system that is 100% loaded and no longer doing anything useful.&lt;/p&gt;

&lt;p&gt;These examples show that congestion collapse is a real problem that requires constant attention and planning.&lt;/p&gt;

&lt;p&gt;At bedrock we’ve also encountered congestion collapse. For example, during busy events such as soccer matches, we’ve already encountered the case where a massive influx of users would cause the platform to become unavailable, at which point all the users would press F5 at the same time, drastically increasing the traffic on an already struggling platform. Moreover, requests are queued up and we end up answering requests issued 1 or 2 min earlier, and therefore answering people who have surely already left.&lt;/p&gt;

&lt;p&gt;Jim mentions this issue, which has happened at amazon.com.&lt;/p&gt;

&lt;p&gt;They were able to implement 2 solutions in particular.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The first, when the servers can no longer respond, is to display a page with a message warning the user to wait a while and try again in a while. This had a surprisingly noticeable effect. Users were no longer repeatedly pressing the F5 button.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Secondly, they have implemented mechanisms to detect massive retries and thus avoid transmitting traffic to their backend. In particular, they have implemented this in the WAF service.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At Bedrock Streaming we already display a page in case of trouble, but we can improve it to suggest to the user to wait before retrying. Moreover, we use Cloudfront and WAF on almost all our services. We have a few rules on WAF that allow us to deny traffic that seems illegitimate, but we’re going to work on a new rule to avoid transmitting untimely user retries in the event of an overloaded system.&lt;/p&gt;

&lt;h2 id=&quot;netflix-caching&quot;&gt;Netflix caching&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;“Who in this room is a netflix user?” (90% of the room raises its hand)&lt;/em&gt;: no doubt Prudhviraj Karumanchi, software engineer &amp;amp; Sriram Rangarajan, Senior Distributed Systems Engineer at Netflix, conference speakers, know how to introduce their talk and remind us that they are the market giants. &lt;a href=&quot;https://www.youtube.com/watch?v=85TiFrDhCR4&quot;&gt;During their conference&lt;/a&gt;, they presented how Netflix uses the EVCache solution for multi-region cache replication.&lt;/p&gt;

&lt;p&gt;Netflix likes to say that one of its missions is to spread joy. This involves two aspects: offering users a fully personalized homepage and 
benefiting from a scalable, low-cost architecture (so that Netflix’s techies are happy too).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-12-18-aws-reinvent-lasvegas-2023/aws-reinvent-2023-netflix.jpg&quot; alt=&quot;Quoting Marie Kondō, Netflix engineers remind us that one of their missions is to &amp;quot;spread joy&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This conference addressed many of the issues we are familiar with: a home page that calls on a large number of microservices to display content to the user, scaling issues, cost management…&lt;/p&gt;

&lt;p&gt;The heart of the conference detailed the architecture implemented by Netflix teams to replicate cache across multiple regions using EVCache, Kafka and SQS.&lt;/p&gt;

&lt;p&gt;It was also interesting to see that at Netflix, as with us, it’s important to build with costs in mind: after analyzing the costs of their inter-region traffic, they finally decided to remove their network load-balancer to make their architecture more cost-efficient.&lt;/p&gt;

&lt;p&gt;A long part of the conference was dedicated to the observability of the replication stack: our teams have also done a lot of work on this issue in recent years, so it was interesting to compare our practices on the subject of observability.&lt;/p&gt;

&lt;p&gt;While we don’t yet work on the same scale as Netflix, attending this conference allowed us to reinforce our idea that caching is essential in the architecture of a platform such as Bedrock Streaming. And it gives us new ways for reflection…&lt;/p&gt;

&lt;h2 id=&quot;takeaways-from-reinvent2023-the-newcomers-point-of-view&quot;&gt;Takeaways from Reinvent2023. The newcomers’ point of view&lt;/h2&gt;

&lt;p&gt;It’s often said that “what happens in Vegas stays in Vegas”, but for some of us, this edition of Re:invent was our first time at a conference of this magnitude. So it’s hard not to share some of our feedback with you!&lt;/p&gt;

&lt;p&gt;First of all, a word about Vegas, the city of excess which hosts Re:invent every year, and which has been transformed for us into an open-air R&amp;amp;D ground! From Fremont Street to the brand-new Sphere, there are screens EVERYWHERE in this city, which has aroused our curiosity as video streaming professionals… 
&lt;img src=&quot;/images/posts/2023-12-18-aws-reinvent-lasvegas-2023/aws-reinvent-2023-google.jpeg&quot; alt=&quot;A troll masterpiece: Google has been advertising on the sphere for the duration of Reinvent&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the eve of Reinvent, the city is transformed: tourists give way to speakers from all over the world, advertising screens talk of nothing but cloud solutions, scalability and artificial intelligence… It’s an incredible phenomenon to behold!&lt;/p&gt;

&lt;p&gt;With over 70,000 participants, nothing can be left to chance in the organization of Reinvent. It’s impressive to see (Vegas traffic jams aside) how smoothly the whole conference runs. A sort of “human load-balancing” has even been arranged so that each speaker can have lunch in record time!&lt;/p&gt;

&lt;p&gt;The keynotes organized during Reinvent (5 in all) are events within events! The expected crowds are so huge that several overflow rooms are planned in addition to the main ballroom where the speaker is based.
We were able to attend two of them: Adam Zelipsky’s (CEO of aws) - for which the speakers were greeted by a fantastic rock band at 7:30 a.m., a guaranteed wake-up call - and Werner Vogels’ (CPO &amp;amp; VP of amazon.com), where this time the welcome was provided by a fantastic string quartet.&lt;/p&gt;

&lt;p&gt;While Adam Zelisky’s conference was undoubtedly a masterpiece (production, new services announced, influential clients such as Lidia Fonseca, chief digital and technology officer at Pfizer, speaking), it was Dr. Vogels’ conference that impressed us the most.&lt;/p&gt;

&lt;p&gt;Based on &lt;a href=&quot;https://thefrugalarchitect.com/&quot;&gt;the laws of the “frugal architect”&lt;/a&gt;, this keynote spoke to everyone: technicians, business people, product managers… It took up the elementary concepts of what should motivate our design of IT solutions: cost awareness, the indispensable balance between commercial and technical needs, or the danger of never questioning oneself, quoting Grace Hopper: “One of the most dangerous phrases in the English language is: &lt;em&gt;‘We’ve always done it this way’&lt;/em&gt;”
We encourage you to watch &lt;a href=&quot;https://www.youtube.com/watch?v=UTRBVPvzt9w&quot;&gt;the replay of this keynote&lt;/a&gt;, a must-see!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-12-18-aws-reinvent-lasvegas-2023/aws-reinvent-2023-werner.jpg&quot; alt=&quot;Screenshot of one of the excellent edits made for the keynote of Werner Vogels&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Beyond the gigantism of the event, let’s look at what we’ve taken away from our participation in Reinvent. Attending a conference is always an opportunity to take a step back on our current work themes: we attended many conferences on resilience, scalability and new architectures:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;it enabled us to compare our practices with those of major players in the sector (Prime, Spotify, Peacock…),&lt;/li&gt;
  &lt;li&gt;to transpose these themes into a context completely different from our own (“&lt;a href=&quot;https://www.youtube.com/watch?v=fGyvsNE4vh8&quot;&gt;1.5 million requests per second—a story from the Brazilian elections&lt;/a&gt;”)&lt;/li&gt;
  &lt;li&gt;or to appreciate the work we’ve done over the year, which sometimes goes beyond what’s presented at conferences (“&lt;a href=&quot;https://www.youtube.com/watch?v=JpemUkU8INA&quot;&gt;Use new IAM Access Analyzer features on your journey to least privilege&lt;/a&gt;”)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For all these reasons, no doubt Bedrock Streaming teams will be betting on Reinvent again next year!&lt;/p&gt;</content><author><name>[&quot;a_ferez&quot;, &quot;v_chabrier&quot;]</name></author><category term="kubernetes" /><category term="cloud" /><category term="devops" /><category term="opensource" /><category term="community" /><category term="conference" /><category term="aws" /><category term="re:invent" /><category term="las vegas" /><category term="2023" /><summary type="html">AWS re:Invent 2023 was a showcase for GenAI. It was the announcement of Amazon Q, Amazon’s new AI assistant, that attracted the most interest, designed to meet the specific needs of businesses.</summary></entry><entry><title type="html">Android 14 is out</title><link href="https://tech.bedrockstreaming.com/2023/12/05/android-14.html" rel="alternate" type="text/html" title="Android 14 is out" /><published>2023-12-05T00:00:00+00:00</published><updated>2023-12-05T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/12/05/android-14</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/12/05/android-14.html">&lt;p&gt;Here’s what it means for users and developers.&lt;/p&gt;

&lt;p&gt;With each new OS version, new things, upgrades, deprecations and changes are introduced, affecting the way we use and develop our apps.
Google keeps going in the direction of more privacy, more accessibility and more control over what the apps can do to maximize security and integrity.
Android 14 is no exception and here’s what I compiled on different topics that I will try to vulgarize to keep everyone on board.&lt;/p&gt;

&lt;h3 id=&quot;technical&quot;&gt;Technical&lt;/h3&gt;

&lt;p&gt;Technical changes build over features and APIs already introduced in previous versions, mostly Android 12 and 13.
They tend to modernize tools by catching up with some Java features and semantics, helping manufacturers and improving the developers’ IDE to embrace those changes.
Due to the nature of the changes, this is the topic that has to remain…technical, sorry for that.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mobile screens are getting bigger with more ratios to support, we’re moving further and further away from the binary world of phone vs tablet. To ensure the best experience on this wide range of devices, Android 14 introduces the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Large Screen Compatibility Mode&lt;/code&gt; to help manufacturers improve the experience on their devices.&lt;/li&gt;
  &lt;li&gt;Updates to OpenJDK17 may require a bit of attention from apps using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Regex&lt;/code&gt; that are not close enough to openJDK’s new semantics, throwing exceptions when confronted to an invalid groupe reference.&lt;/li&gt;
  &lt;li&gt;Generating a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UUID&lt;/code&gt; from a string sees the validation become stricter and will now lead to exceptions due to deserialization issues. More than ever, it’s time to unit test UUID generation.&lt;/li&gt;
  &lt;li&gt;A bit of additional ruling may be needed to fix Proguard issues when shrinking / obfuscating code involving the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ClassValue&lt;/code&gt; class coming with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API34&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Back APIs&lt;/code&gt; are now strengthened by built-in animations and support for custom ones.&lt;/li&gt;
  &lt;li&gt;Making the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ForegroundService&lt;/code&gt; type explicit is now mandatory, if the implementation was already properly done back in the Android 10 days when it was introduced, congratulations, nothing to do here.&lt;/li&gt;
  &lt;li&gt;Foreground services are also encouraged to be migrated to user-initiated jobs. A new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RUN_USER_INITIATED_JOBS&lt;/code&gt; permission is introduced and new methods on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JobInfo&lt;/code&gt; builder allow to set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userInitiated()&lt;/code&gt; status along with the estimated amount of bytes the job will expect from the network. Scheduling the job is now done with the app foregrounded and the notification icon system remains the same so the user knows something is going on even if the app is backgrounded post launch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;battery-and-performance&quot;&gt;Battery and performance&lt;/h3&gt;

&lt;p&gt;Without a single ounce of surprise, Google continues its effort to improve battery life and takes steps towards sanctioning bad actors that publish battery-draining or unstable apps.
Today, not crashing is no longer enough, developers should take steps to push their app to their full potential and that means power management and performance monitoring.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bad behaviours like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANRs (screen freezes)&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;background crashes&lt;/code&gt; now more aggressively flag the guilty apps and put them at the bottom of the priority list where apps are fighting for resources, meaning they’ll also be the first to go if the system needs some. No more filtering out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANRs&lt;/code&gt; and non-fatal crashes on Crashlytics, everything matters now.&lt;/li&gt;
  &lt;li&gt;While on the subject of fighting for resources, let’s also note that now, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;context-registered broadcasts&lt;/code&gt; are now queued when the app is backgrounded and the system will deliver them when the app is awake or system conditions allow it.&lt;/li&gt;
  &lt;li&gt;Another change to the cached state (aka when the app is backgrounded) impacts background tasks that can no longer be triggered unless one of the app components is awake. This change pushes devs to use framework’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JobScheduler&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WorkManager&lt;/code&gt; more as they aren’t impacted by this change.&lt;/li&gt;
  &lt;li&gt;Still with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jobscheduler&lt;/code&gt;, jobs don’t just fail silently anymore if they don’t respond in time but trigger an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANR&lt;/code&gt;, it is advised to move to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WorkManager&lt;/code&gt; with its out of the box async support.&lt;/li&gt;
  &lt;li&gt;If a job requires a special network state to be triggered, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACCESS_NETWORK_STATE&lt;/code&gt; permission is now mandatory. Without it, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecurityException&lt;/code&gt; will be raised.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Intents&lt;/code&gt; keep getting more and more headache prone as the implicit and pending intents now can only be delivered to exported components. If you need to reach an unexported component, explicit intent is your go-to solution. Note that mutable pending intents now need to specify a component or it will throw an exception.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;notifications&quot;&gt;Notifications&lt;/h3&gt;

&lt;p&gt;Finding the right balance between informative presence and in-your-face nuisance has always been a challenge for notifications and it seems Google keeps pushing to make them less invasive and easier for the user to dismiss or delay them.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fullscreen Intent&lt;/code&gt; notifications that we see when our clock rings or when we receive a phone call are luckily already rarely used.
They are now more restricted and available only to apps declaring &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Call&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Alarm&lt;/code&gt; features, meaning we shouldn’t see bad actors abusing this feature that would allow them to bypass the lock screen amongst other things.&lt;/li&gt;
  &lt;li&gt;Non-dismissible &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foreground notifications&lt;/code&gt; are now dismissible in some cases but will remain non-dismissible
    &lt;ul&gt;
      &lt;li&gt;on top of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lock Screen&lt;/code&gt; to prevent it from being swiped by anyone accessing a device behind the owner’s back.&lt;/li&gt;
      &lt;li&gt;from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Clear all&lt;/code&gt; feature to prevent misclicks.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;privacy-and-security&quot;&gt;Privacy and security&lt;/h3&gt;

&lt;p&gt;This is, once again without surprise, where a lot of the changes happen and it is aligned with Google’s vision and goals when it comes to give users back the control of their data and permissions.
Some of them seem so obvious that it’s surprising to see them in action only now. Maybe the EU pressure with GDPR starts to pay off? Maybe…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Android 14 introduces new places where the data sharing purposes are displayed. Until now, we could only check them from the PlayStore app page. 
Now, it will also be displayed in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime permission popups&lt;/code&gt;, starting with those related to location to remind why the data is necessary and with whom it will be shared.&lt;/li&gt;
  &lt;li&gt;It will now be impossible to install apps that don’t target at least the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API 23&lt;/code&gt; to prevent bad actors from exploiting security breaches discovered inside older Android versions.
Be aware that installed apps won’t be removed and the system won’t warn you when starting one of those apps, maybe a new feature for Android 15?&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dynamic Code Loading&lt;/code&gt; now requires to flag the file as read-only to avoid any tampering or code injection. In any case, DCL should be avoided when possible and only trusted files should obviously be loaded this way.&lt;/li&gt;
  &lt;li&gt;When saving a file inside the app storage, the system attributes to the file an owner id, this id being the app package name that saved it. 
This feature allows apps to know which file they can open without requesting the external read permission. The issue was that by querying this id, other apps could access the owner ids that weren’t them and deducting the owner’s installed apps list. 
To fix this, the name is now redacted, increasing again a little bit the user data protection, the list of the installed apps being considered a sensitive data by Google.&lt;/li&gt;
  &lt;li&gt;If an app features &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screen&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;audio recording&lt;/code&gt;, it is now required to be granted the user consent to do so before each session start and therefore be able to handle permission denied scenarios.&lt;/li&gt;
  &lt;li&gt;Zip files are also impacted as a fixed vulnerability with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;path transversal reading&lt;/code&gt; now triggers an exception if some characters are found inside it. (Contains &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt; Or starts with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Even though already required, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BLUETOOTH_CONNECT&lt;/code&gt; permission was not yet enforced to access the profile state, it is now the case.&lt;/li&gt;
  &lt;li&gt;Users are no more required to grant access to all &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;images&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;videos&lt;/code&gt; to share or display a single media, Android 14 now upgrades the permission popup with an option to select only the media the app is allowed to access.&lt;/li&gt;
  &lt;li&gt;Apps can now react to a user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screenshot&lt;/code&gt; event, they can’t manipulate the content but developers can now add a callback bound to the activity lifecycle. 
Sensitive screens should still be protected with the secure flag.&lt;/li&gt;
  &lt;li&gt;Starting activities from the background with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pending intent&lt;/code&gt; or through another app in the foreground now requires the app to opt-in to this feature inside said activity and is no longer a default behaviour.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;accessibility&quot;&gt;Accessibility&lt;/h3&gt;

&lt;p&gt;It is no secret that mobile devices are now owned by more and more people every year, which includes people with a range of disabilities or personalities that may make an app usage more challenging.
Android 14 helps them with new and upgraded features to ease their journey with a mobile device.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A step is taken towards low-vision users’ direction, the changes and impacts to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;font scaling&lt;/code&gt; should be negligible to developers already properly using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SP&lt;/code&gt; as their size units but a full testing pass with the scaling enabled should be scheduled to be safe and tweak improvable screens.&lt;/li&gt;
  &lt;li&gt;New tools inside Android studio are added to help developers handling &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;per-app language&lt;/code&gt; more efficiently and easily.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Grammatical Inflection API&lt;/code&gt; is introduced, offering developers working on apps with gendered languages new tools. It adds a layer of complexity to the strings files by having three gender-files by gendered language. In those files are added only the strings affected by gender inflections like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vous êtes déconnecté&lt;/code&gt; for masculine, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vous êtes déconnectée&lt;/code&gt; for feminine or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;La déconnection est effective&lt;/code&gt; for neutral in french. More work for developers and translators but an overall better experience for users.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;All in all, Android 14 is an update faithful to the Google roadmap. 
Users today are very different than users 10 years ago. They care more about their data and their privacy; the Mobile ecosystem and business is also a lot more professional.
It’s important for us developers to be aware of those changes in order to continuously improve the experience, be it related to our core business or simply to keep the user engaged in a safe environment.&lt;/p&gt;

&lt;p&gt;When this article is released, Android 14 should be freshly out and developer teams hands deep in the migration tasks.
I hope you enjoyed the information and see you soon for more Android related articles!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/about/versions/14/behavior-changes-all&quot;&gt;Changes potentially affecting all apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/about/versions/14/behavior-changes-14&quot;&gt;Changes affecting apps targetting Android 14&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/about/versions/14/features&quot;&gt;New features introduced by Android 14&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/sdk/api_diff/34/changes&quot;&gt;APIs changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.android.com/about/versions/14/summary&quot;&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;c_goffoy&quot;]</name></author><category term="android" /><category term="mobile" /><category term="google" /><category term="14" /><summary type="html">Here’s what it means for users and developers.</summary></entry></feed>