<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://tech.bedrockstreaming.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tech.bedrockstreaming.com/" rel="alternate" type="text/html" /><updated>2025-07-01T08:30:00+00:00</updated><id>https://tech.bedrockstreaming.com/feed.xml</id><title type="html">Bedrock Tech Blog</title><subtitle>Blog technique de Bedrock</subtitle><entry><title type="html">Crafting Your Own Streamer: A Hands-on Guide to JavaScript MSE</title><link href="https://tech.bedrockstreaming.com/2025/07/01/video-player-mse-introduction.html" rel="alternate" type="text/html" title="Crafting Your Own Streamer: A Hands-on Guide to JavaScript MSE" /><published>2025-07-01T00:00:00+00:00</published><updated>2025-07-01T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2025/07/01/video-player-mse-introduction</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2025/07/01/video-player-mse-introduction.html">&lt;p&gt;Streaming is now everywhere, an indispensable part of our daily lives, used by almost everyone for entertainment, communication, and learning. It appears effortless, almost magical, as high-quality video instantly appears on our screens. But beneath that seamless playback lies a complex and fascinating architecture of web technologies. Have you ever wondered what truly happens behind the frame to bring those pixels to life, adapting to your network, and ensuring a smooth experience right within your browser? Join us as we pull back the curtain and demystify the magic of modern web video playback.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say you want to create a player to watch your favorite TV Show.&lt;/p&gt;

&lt;p&gt;First step will probably be to create a page where you will add the famous video tag, give it a source and maybe display the controls so you can interact with it.
You will end up with something like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;video&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-awesome-video&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;controls&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Your video will probably play well, but depending on, for example, the video size or your connection, you might have some performances issues.&lt;/p&gt;

&lt;p&gt;That‚Äôs where the Media Source Extension API comes to save the day.&lt;/p&gt;

&lt;h2 id=&quot;-media-source-extension&quot;&gt;üí° Media Source Extension&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;‚ÄúMSE gives us finer-grained control over how much and how often content is fetched, and some control over memory usage details, such as when buffers are evicted.‚Äù&lt;/em&gt; - &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API&quot;&gt;MDN Web Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here MDN tells us that MSE allows us to better control the flow of the stream.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This means new features are now available!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Going back to my previous use case, what if I want to play Dune in 4K?
It is going to be a super heavy file and if I give it to my video tag, it might download the entire file before being ready to play the content.&lt;/p&gt;

&lt;p&gt;Do I want to wait to watch my movie? Of course not! I‚Äôm already on the sofa with my ice cream ready for it to start üç¶&lt;/p&gt;

&lt;p&gt;MSE helps us manipulate specific video file formats such as Dash (Dynamic Adaptive Streaming over HTTP) or HLS (HTTP Live Streaming). Those formats split a video into lists of chunks and allow playing a short section of the video at any timecode. Those chunks are referenced in a manifest, .mpd for DASH and .m3u8 for HLS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2025-07-01-video-player-mse-introduction/manifest-1.png&quot; alt=&quot;Manifest file pointing to segments&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That‚Äôs not all! Those manifest can transport additional informations.&lt;/p&gt;

&lt;p&gt;We can now have a list of chunks based on specific settings such as the resolution, a recommended bandwidth per list, a link to subtitles and many more!&lt;/p&gt;

&lt;p&gt;Having multiple playlists based on the resolution brings a new acronym (I know what you think another one). We can now talk about Adaptive Bitrate Streaming (= ABR).
This adds the feature of switching qualities based on the user bandwidth to our player ü§©&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2025-07-01-video-player-mse-introduction/manifest-2.png&quot; alt=&quot;Manifest file pointing to multiple playlist of segments&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is below an example of an HLS manifest where you can see the playlist links to specific resolutions as well as links to the audio file and the subtitles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2025-07-01-video-player-mse-introduction/hls-manifest-example.png&quot; alt=&quot;HLS manifest example&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-how-to-use-it&quot;&gt;ü§î How to use it?&lt;/h2&gt;

&lt;p&gt;Here I will be building a player component in JavaScript using React.&lt;/p&gt;

&lt;h3 id=&quot;step-1&quot;&gt;Step 1&lt;/h3&gt;

&lt;p&gt;We start by creating a player component with a video tag.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Video player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-2&quot;&gt;Step 2&lt;/h3&gt;

&lt;p&gt;Now we want to add a &lt;strong&gt;MediaSource&lt;/strong&gt; to handle our manifest.&lt;/p&gt;

&lt;p&gt;Also, to better manipulate our video tag we use the useRef hook from React.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HTMLVideoElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// MediaSource instance&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MediaSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MediaSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Link the MediaSource to the video tag&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 1 - Handle the sourceopen event&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sourceopen&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMediaSourceOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Video player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-3&quot;&gt;Step 3&lt;/h3&gt;

&lt;p&gt;Now we need to add a SourceBuffer to handle each segment of our video.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HTMLVideoElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MediaSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// SourceBuffer instance&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;videoSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 1 - Define the SourceBuffer&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMediaSourceOpen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;videoSourceBuffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;video/mp4; codecs=&quot;avc1.42c01e&quot;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 2 - We fetch the next video chunk after each SourceBuffer update&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;videoSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;updateend&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextVideoSegment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// 3 - We fetch the first segment (init)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentInitVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appendToVideoBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MediaSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sourceopen&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMediaSourceOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Video player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the final version with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nextVideoSegment&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appendToVideoBuffer&lt;/code&gt; methods.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parseManifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./player.utils&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Player&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HTMLVideoElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MediaSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;videoSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexVideoSegment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 1 - You will need to parse the manifest to get the init segment as well as all the segments&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;video&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;segmentInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segmentInitVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;segments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segmentsVideo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parseManifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Here we just append 10 chunks&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfChunks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMediaSourceOpen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;videoSourceBuffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;video/mp4; codecs=&quot;avc1.42c01e&quot;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;videoSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;updateend&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextVideoSegment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;segmentInitVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appendToVideoBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MediaSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createObjectURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sourceopen&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onMediaSourceOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 2 - nextVideoSegement to fetch a specific chunk and append it to the buffer&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextVideoSegment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;segmentsVideo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;$Number$&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indexVideoSegment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appendToVideoBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;indexVideoSegment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexVideoSegment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numberOfChunks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;videoSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;removeEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;updateend&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nextVideoSegment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 3 - appendToVideoBuffer will get the chunk in param and add it to the buffer.&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appendToVideoBuffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;videoChunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;videoChunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;videoSourceBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;appendBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Uint8Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;videoChunk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Video player&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;controls&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;playerRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;step-4&quot;&gt;Step 4&lt;/h3&gt;

&lt;p&gt;Now that you should have a video playing you might realize that you don‚Äôt have sound on it.
It is because we now need to do the same segment management with the audio.&lt;/p&gt;

&lt;!-- TODO: Add gif a shit here we go again --&gt;

&lt;p&gt;You will then have a &lt;strong&gt;videoSourceBuffer&lt;/strong&gt; and a &lt;strong&gt;audioSourceBuffer&lt;/strong&gt; which will work just the same!&lt;/p&gt;

&lt;h2 id=&quot;-congratulations&quot;&gt;üéâ Congratulations!&lt;/h2&gt;

&lt;p&gt;You can now play a video like a pro! üöÄ&lt;/p&gt;

&lt;h2 id=&quot;-whats-next&quot;&gt;üîé What‚Äôs next?&lt;/h2&gt;

&lt;p&gt;To be honest if you don‚Äôt want to bother with all this chunk management, you can find libraries online that will handle it for you üòÑ&lt;/p&gt;

&lt;p&gt;If you want to take a look at some, I would recommend to check:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shaka-player-demo.appspot.com/demo/#audiolang=en;textlang=en;uilang=en;panel=HOME;build=uncompiled&quot;&gt;Shaka Player&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js&quot;&gt;HLSjs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://videojs.com/&quot;&gt;VideoJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those are open source and they can help you build a player faster if you don‚Äôt want to handle everything on your own.&lt;/p&gt;

&lt;p&gt;In a future article we will talk about content protection and the &lt;strong&gt;Encrypted Media Extensions&lt;/strong&gt; API so stay tuned!&lt;/p&gt;

&lt;h2 id=&quot;-sources&quot;&gt;üìö Sources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API&quot;&gt;MDN Web Docs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VX9ppF6eMjc&quot;&gt;LyonJS - Play Pause - Les coulisses d‚Äôun player vid√©o&lt;/a&gt; üá´üá∑&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;a_gaudard&quot;]</name></author><category term="TVJS" /><category term="smartTV" /><category term="web" /><category term="javascript" /><category term="frontend" /><category term="player" /><category term="video" /><summary type="html">Streaming is now everywhere, an indispensable part of our daily lives, used by almost everyone for entertainment, communication, and learning. It appears effortless, almost magical, as high-quality video instantly appears on our screens. But beneath that seamless playback lies a complex and fascinating architecture of web technologies. Have you ever wondered what truly happens behind the frame to bring those pixels to life, adapting to your network, and ensuring a smooth experience right within your browser? Join us as we pull back the curtain and demystify the magic of modern web video playback.</summary></entry><entry><title type="html">Bedrock au MiXiT 2025</title><link href="https://tech.bedrockstreaming.com/2025/05/13/bedrock-au-mixit-2025.html" rel="alternate" type="text/html" title="Bedrock au MiXiT 2025" /><published>2025-05-13T00:00:00+00:00</published><updated>2025-05-13T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2025/05/13/bedrock-au-mixit-2025</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2025/05/13/bedrock-au-mixit-2025.html">&lt;p&gt;Bedrock √©tait pr√©sent au &lt;a href=&quot;https://mixitconf.org/fr/&quot;&gt;MiXiT 2025&lt;/a&gt;, les 29 et 30 avril √† Lyon.
Voici un petit r√©sum√© des conf√©rences qui nous ont le plus marqu√©s.&lt;/p&gt;

&lt;h2 id=&quot;de-la-pseudoscience-pour-mon-pseudo-management--ana√Øs-huet&quot;&gt;De la pseudoscience pour mon (pseudo) management ‚Äî Ana√Øs Huet&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Yorick&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Pourquoi les pseudo-sciences connaissent-elles un tel succ√®s,
notamment dans le management, le recrutement ou encore l‚Äôaccompagnement ?
Que ce soit en entreprise ou m√™me en tant qu‚Äô√©tudiant ou √©tudiantes,
tout le monde a sans doute d√©j√† entendu parler ou d√©j√† eu affaire
√† des tests ou des m√©thodes telles que MBTI (Myers Briggs Type Indicator), DISC
(Dominant, Influent, Stable, Consciencieux), ProcessCom etc‚Ä¶
Pourtant, alors que toutes ces m√©thodes s‚Äôappuient sur ce qu‚Äôil est convenu
d‚Äôappeler de la pseudo-science, √† savoir ce qui √†
l‚Äôapparence de la science mais ne reposant en aucun cas sur une
r√©elle d√©marche exp√©rimentale s√©rieuse, et sont fich√©es √†
la &lt;a href=&quot;https://www.miviludes.interieur.gouv.fr/&quot;&gt;MIVILUDES&lt;/a&gt; pour certaines d‚Äôentre elles,
leur succ√®s est incontestable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ana√Øs Huet&lt;/strong&gt; a tent√© d‚Äôen comprendre les raisons, en l‚Äôexpliquant
notamment par l‚Äôeffet Barnum ou effet de validation suggestive, qui
consiste √† se retrouver dans toute description un peu vague ou
positive de soi-m√™me.&lt;/p&gt;

&lt;p&gt;Si en plus on ajoute quelques r√©f√©rences aux neurosciences ou une image
d‚Äôun cerveau, les √©tudes ont montr√© que cela en renfor√ßait la cr√©dibilit√©.
Si ces m√©thodes permettent cependant √† certains managers de prendre
conscience de la diversit√© des m√©thodes de pens√©es qui peuvent
exister au sein de leurs √©quipes, Ana√Øs nous mettra toutefois en garde
contre les risques d‚Äôenfermement et d‚Äôint√©riorisation d‚Äôun mode de
pens√©e pr√©d√©fini par les personnes qui sont la cible de telles m√©thodes.
En conclusion, elle nous rappellera l‚Äôimportance de garder un esprit
critique dans l‚Äôutilisation de telles m√©thodes, car nous ne sommes pas
des th√©rapeutes.&lt;/p&gt;

&lt;h2 id=&quot;nos-mani√®res-de-compter-p√©rils-√©conomiques-d√©mocratiques-et-√©cologiques--val√©rie-charolles&quot;&gt;Nos mani√®res de compter, p√©rils √©conomiques, d√©mocratiques et √©cologiques ‚Äî Val√©rie Charolles&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Yorick&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Val√©rie Charolles&lt;/strong&gt; est philosophe et chercheure au Laboratoire d‚ÄôAnthropologie
Critique Interdisciplinaire.&lt;/p&gt;

&lt;p&gt;Lors de cette conf√©rence, elle ouvre sur cette citation de Wittgenstein : ‚ÄúLes
limites de notre langage posent les limites de notre rapport au monde‚Äù
Elle entend par l√† montrer que nos soci√©t√©s ont √©volu√© vers un rapport aux chiffres
en tant qu‚Äô√©l√©ment unique de mesure des faits, et que ce rapport pose probl√®me.
On peut d√©j√† citer comme exemple la vision r√©ductrice du monde impos√©e par les
chiffres (Aristote proposait dix mani√®res diff√©rentes de le d√©crire), mais aussi
les biais que ces derniers peuvent induire.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Val√©rie Charolles&lt;/strong&gt; cite en exemple les chiffres du ch√¥mage chez les jeunes, souvent
annonc√©e par l‚ÄôINSEE autour de 15-20%. Pourtant, l‚ÄôINSEE ne pr√©cise jamais que cela ne concerne
qu‚Äôun tiers de la population des 15-25 ans, les deux autres tiers faisant des √©tudes.
Le risque √©tant pour les d√©cisionnaires d‚Äôengager des politiques bas√©es sur une
vision du monde inad√©quate, et bien entendu pour les populations d‚Äô√©voluer dans
une vision d‚Äôun monde distordue.&lt;/p&gt;

&lt;h2 id=&quot;le-pattern-hive--une-strat√©gie-de-modularisation-pour-votre-monolithe-modulaire-ou-vos-microservice--julien-top√ßu-et-thomas-pierrain&quot;&gt;Le pattern Hive : une strat√©gie de modularisation pour votre monolithe modulaire ou vos microservice ‚Äî Julien Top√ßu et Thomas Pierrain&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Pauline&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Julien Top√ßu&lt;/strong&gt; et &lt;strong&gt;Thomas Pierrain&lt;/strong&gt; ont pr√©sent√© ‚Äúla ruche‚Äù, une architecture alternative aux microservices et au DDD face au ‚Äúbig bowl of mud‚Äù monolithique. Constatant que les microservices manquaient de cadre et cr√©aient de nouveaux probl√®mes malgr√© leur exhaustivit√©, ils ont soulign√© que le DDD dimensionne mieux les microservices (une responsabilit√© m√©tier = un microservice) et aligne le SI sur le business. Ils proposent un d√©coupage fonctionnel si le cadre est clair et insistent sur le fait que les microservices sont une strat√©gie de d√©ploiement, compl√©mentaire au DDD. ‚ÄúLa ruche‚Äù vise une architecture agnostique du d√©ploiement, flexible pour une √©volution continue, faisant cohabiter des bounded contexts (= mono m√©tier) dans une m√™me application. Contrairement aux syst√®mes distribu√©s co√ªteux et difficiles √† refactoriser, le monolithe modulaire (1 module = 1 mini architecture hexagonale = 1 bounded context = 1 responsabilit√© m√©tier) assembl√© via le pattern port-adapter et avec des data stores isol√©s, permet une it√©ration facile et un d√©coupage/regroupement flexible. C‚Äôest un pattern tr√®s adapt√© √† la reprise d‚Äôun code ancien et monolithique. Ils ont termin√© en pr√©sentant les cas de scale-on et scale-off, ainsi que quelques bonnes pratiques pour l‚Äôimpl√©mentation de la ruche.&lt;/p&gt;

&lt;h2 id=&quot;quand-le-terminal-d√©vore-la-ui--tui-pour-tout-le-monde--thierry-chantier&quot;&gt;Quand le terminal d√©vore la UI : TUI pour tout le monde ‚Äî Thierry Chantier&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Pauline&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Terminal User Interface : permet de pleinement utiliser son terminal et d‚Äôavoir quelque chose d‚Äôun peu sympa et connu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thierry Chantier&lt;/strong&gt; nous pr√©sente Posting un outil comme Postman en TUI qui sert √† interroger une API et stocker les requ√™tes. Puis il nous parle de l‚Äôhistoire du terminal et des premiers outils qui ont servi √† automatiser les process comme le m√©tier Jacquard premier input automatis√© en 1801. Ou encore la carte avec 80 colonnes, cr√©ation IBM et des machines Remington et naissance d‚ÄôASCII en 1890. Nous avons rencontr√© une √©volution de plein d‚Äôinterfaces graphiques avec le t√©l√©scripteur et puis l‚Äôinformatique moderne.&lt;/p&gt;

&lt;p&gt;Enfin, nous assistons √† un atelier en live de comment nous pouvons faire pour impl√©menter notre propre outil TUI. Pour cela, vous prenez le langage que vous pr√©f√©rez et avec l‚Äôaide de quelques librairies d√©di√©es comme Typer (Python) ou celles de CharmSH (Go) vous obtenez un outil personnalis√© qui r√©pond √† vos besoins.&lt;/p&gt;

&lt;h2 id=&quot;onboarding-20--r√©inventer-lint√©gration-des-devs--hafsa-el-maizi&quot;&gt;Onboarding 2.0 : R√©inventer l‚Äôint√©gration des devs ‚Äî Hafsa El maizi&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Anouk&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Dans cette conf√©rence, &lt;strong&gt;Hafsa El maizi&lt;/strong&gt; nous rappelle les principaux objectifs d‚Äôun OnBoarding: s‚Äôint√©grer dans l‚Äô√©quipe, cr√©er du lien, devenir performant, comprendre la culture de l‚Äôentreprise et de l‚Äô√©quipe ainsi que ma√Ætriser les outils.&lt;/p&gt;

&lt;p&gt;Pour ce faire, elle √©voque les √©l√©ments essentiels √† mettre en place pour atteindre ces objectifs et faire un bon OnBoarding:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pr√©parer les acc√®s aux outils et env de travail en amont&lt;/li&gt;
  &lt;li&gt;Pr√©parer une documentation d‚Äôint√©gration : organigramme / trombinoscope / guide / glossaire / sch√©ma d‚Äôarchitecture du/des projet(s)&lt;/li&gt;
  &lt;li&gt;Mettre en place un plan personnalis√© pour avoir une vision du d√©roul√© de l‚ÄôOnBoarding&lt;/li&gt;
  &lt;li&gt;Privil√©gier l‚Äôaccueil en personne&lt;/li&gt;
  &lt;li&gt;Pr√©senter l‚Äô√©quipe, le contexte fonctionnel/technique du/des projet(s), les outils, les conventions de code, les rituels de l‚Äô√©quipe etc&lt;/li&gt;
  &lt;li&gt;D√©signer un mentor qui doit: accueillir, guider, accompagner, r√©pondre aux questions, transmettre, favoriser l‚Äôautonomie. Le mentor doit √™tre p√©dagogue, disponible, empathique, ouvert d‚Äôesprit, inspirant ( encourager les prises d‚Äôinitiatives ), encourageant. Attention, le mentorat n‚Äôest pas un transfert de comp√©tence d‚Äôune personne sur le d√©part.&lt;/li&gt;
  &lt;li&gt;Assigner des t√¢ches simples avec un accompagnement. (Privil√©gier le Pair programming / mob programming)&lt;/li&gt;
  &lt;li&gt;Donner du feed-back r√©guli√®rement, constructif et bilat√©ral ( mise en place du rapport d‚Äô√©tonnement )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A Bedrock, ces diff√©rents √©l√©ments sont pris en compte dans chacun des OnBoarding et tout √ßa am√©liore la confiance et l‚Äôautonomie du nouvel arrivant.&lt;/p&gt;

&lt;h2 id=&quot;faut-il-changer-d√®re-num√©rique-pour-pr√©server-la-d√©mocratie---david-chavalarias&quot;&gt;Faut-il changer d‚Äô√®re num√©rique pour pr√©server la d√©mocratie ? ‚Äî David Chavalarias&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Valentin&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Pour cette premi√®re keynote de la 2e journ√©e, &lt;strong&gt;David Chavalarias&lt;/strong&gt; vient nous parler des r√©seaux sociaux et leurs influences sur le fonctionnement de nos d√©mocraties.&lt;/p&gt;

&lt;p&gt;Il commence par nous montrer que sur X, environ un tiers du contenu provient de comptes qui ne sont pas suivis, et le restant est tri√© selon un algorithme opaque.
Au final, c‚Äôest seulement 3% du contenu ami possible qui est r√©ellement visible, ce qui repr√©sente un levier pour influencer des millions de personnes.&lt;/p&gt;

&lt;p&gt;Tant que les API de Twitter √©taient ouvertes, il √©tait possible de cr√©er un graph des relations (via les retweets) entre les comptes.
Ceci permet d‚Äôobserver les sph√®res d‚Äôinfluences et notamment des campagnes de d√©sinformation orchestr√©es depuis des comptes pro-russes. Il a √©galement pu observer les √©volutions des rapports de force, par exemple lors du rachat de Twitter par Elon Musk, o√π le poids des discours de d√©ni-climatique commence √† √©galer, voire √† surpasser celui des discours pro-climatiques.&lt;/p&gt;

&lt;p&gt;Enfin, il √©voque les principaux axes sur lesquels agir : individuel, collectif et institutionnel.&lt;/p&gt;

&lt;h2 id=&quot;les-accidents-du-travail-dans-la-tech--camille-dupond-et-camille-dupont&quot;&gt;Les accidents du travail dans la tech ‚Äî Camille Dupond et Camille Dupont&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Yorick&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Camille Dupond&lt;/strong&gt; &amp;amp; &lt;strong&gt;Camille Dupont&lt;/strong&gt; nous pr√©sentent ce qu‚Äôest (et ce que n‚Äôest pas)
un accident du travail, en rappelant d‚Äôune part que la responsabilit√© de l‚Äôemployeur
est inscrite dans le droit fran√ßais depuis 1898, et d‚Äôautre part ce fait √©vident
d√©fini par l‚ÄôOMS :&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;‚ÄúPersonne ne devrait tomber malade ou mourir en faisant son travail‚Äù
La d√©finition d‚Äôun accident du travail, telle que donn√©e par &lt;a href=&quot;https://www.legifrance.gouv.fr/codes/article_lc/LEGIARTI000006742977&quot;&gt;l‚Äôarticle L411-1&lt;/a&gt;
du code de la s√©curit√© sociale, le d√©termine :&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;quelle qu‚Äôen soit la cause&lt;/li&gt;
  &lt;li&gt;par le fait ou √† l‚Äôoccasion du travail&lt;/li&gt;
  &lt;li&gt;√† toute personne travaillant pour un employeur&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Camille &amp;amp; Camille nous rappellent √©galement que les atteintes √† la sant√© de l‚Äôemploy√©
peuvent √™tre de nature physiques (douleur, chute durant le t√©l√©travail, malaise, infarctus)
ou psychique (syndrome anxio-d√©pressif apr√®s un entretien d‚Äô√©valuation, non prise en compte de
la fragilit√© ou ant√©c√©dents des salari√©es, aggression verbale)
En revanche, les accidents de trajet ou les maladies professionnelles ne sont pas
consid√©r√©es comme accident du travail.&lt;/p&gt;

&lt;p&gt;Un fait int√©ressant √† noter est que le nombre d‚Äôaccidents du travail est en
hausse de +46% chez les femmes depuis 2010.&lt;/p&gt;

&lt;p&gt;Concernant la d√©claration dudit accident, elle doit se faire dans les 24h apr√®s l‚Äôaccident
√† la suite de quoi plusieurs √©changes entre l‚Äôemployeur, la m√©decin et la CPAM
vont avoir lieu, pouvant aller jusqu‚Äô√† 90 jours.&lt;/p&gt;

&lt;p&gt;Camille &amp;amp; Camille nous rappellent l‚Äôimportance d‚Äôavoir des t√©moins lors de ladite
d√©claration, car l‚Äôentrerprise aura souvent tendance √† minimiser voir √† nier
l‚Äôexistence de l‚Äôaccident en question.&lt;/p&gt;

&lt;p&gt;Enfin, ils proposent des solutions telles que l‚Äôenqu√™te syndicale, la recherche
de causes ou encore l‚Äôanticipation de la reprise du travail de la victime
apr√®s son arr√™t.&lt;/p&gt;

&lt;h2 id=&quot;3-techniques-pour-piloter-par-la-valeur--alfred-almendra&quot;&gt;3 techniques pour piloter par la valeur ‚Äî Alfred Almendra&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Anouk&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alfred Almendra&lt;/strong&gt; nous parle de trois techniques pour piloter la valeur:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Les crit√®res de succ√®s&lt;/strong&gt; : Cela consiste en, d√®s la demande initiale, arriver √† conna√Ætre les crit√®res de succ√®s futurs (d‚Äôun projet, d‚Äôune initiative, etc) afin de proposer des solutions plus pertinentes pour arriver √† la r√©alisation de la demande. Les crit√®res de succ√®s doivent √™tre imagin√©s ¬´ sans contrainte et sans limite ¬ª afin d‚Äôarriver √† proposer des options alternatives √† valeur ajout√©e qui correspondent et accompagnent mieux dans la r√©alisation du projet.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Les couloirs de nage&lt;/strong&gt; : Cela consiste √† prot√©ger des allocations sp√©cifiques pour r√©pondre √† des besoins sp√©cifiques. Point de vigilance: ce qui se passe de bien ou de mal dans un ‚Äúcouloir‚Äù (un flux) ne doit pas impacter les autres couloirs. Il faut √©galement identifier, r√©duire ou supprimer les d√©pendances dans les planning entre les couloir. Trois actions indispensable pour cette technique: mesurer (rendre visible les d√©penses d‚Äô√©nergie sur chaque √©l√©ment), prot√©ger (d√©finir une allocation et r√©partition qu‚Äôil faut respecter) et r√©guler (adapter en fonction des constats) les allocations de capacit√©.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Le carpaccio d‚Äô√©l√©phant&lt;/strong&gt; : Cela consiste √† d√©couper la valeur finement.  Se questionner: dans les moyens qu‚Äôon se donne quelle est la meilleur valeur ajout√©e que je peux d√©livrer ?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ma-vie-de-d√©veloppeur-web-dans-le-quantique--benjamin-becquet&quot;&gt;Ma vie de d√©veloppeur web dans le quantique ‚Äî Benjamin Becquet&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Hugo&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benjamin Becquet&lt;/strong&gt; nous parle de son quotidien chez Pasqal: acteur dans le domaine des processeurs quantiques. Apr√®s une pr√©sentation des ph√©nom√®nes quantiques tels que la superposition ou l‚Äôintrication, nous sommes introduits aux principes de l‚Äôinformatique quantique et qu‚Äôest-ce qui diff√®re de l‚Äôinformatique classique que nous pratiquons. L√† o√π nous manipulons des bits repr√©sentant 0 ou 1, en quantique il s‚Äôagit de qbits qui superposent les √©tats 0 et 1. Cela permet aux processeurs de r√©aliser des traitements et calculs beaucoup plus rapidement que sur des processeurs classiques. Mais cela ne vient pas sans inconv√©nients, Benjamin nous parle √©galement toutes les difficult√©s de ce domaine: le mat√©riel sensible des processeurs et capteurs utilis√©s ou encore la gestion de la donn√©e alors que cette derni√®re a plusieurs √©tats √† la fois.&lt;/p&gt;

&lt;p&gt;Mais concr√®tement, que fait un d√©veloppeur web dans le quantique ? Ce n‚Äôest pas seulement des ordinateurs quantiques mais aussi des machines classiques pour piloter cette infrastructure et g√©rer les donn√©es qui ressortent des processeurs. C‚Äôest l√† dessus que Benjamin intervient en d√©veloppeur web dans l‚Äô√©quipe cloud chez Pasqal. Il travaille sur la plateforme permettant aux clients d‚Äôacc√©der √† la puissance de calcul des processeurs quantiques et les r√©sultats qui en d√©coulent. On y retrouve des t√¢ches de notre quotidien comme le d√©veloppement de nouvelles fonctionnalit√©s, faire du monitoring ou de la documentation.&lt;/p&gt;

&lt;h2 id=&quot;mapping-the-critical-infrastructure-sustaining-our-understanding-of-the-earth--codrina-maria-illie&quot;&gt;Mapping the critical infrastructure sustaining our understanding of the Earth ‚Äî Codrina Maria Illie&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Revue √©crite par Hugo&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Dans ce talk, &lt;strong&gt;Codrina Maria Illie&lt;/strong&gt; vient nous parler de l‚Äô√©cosyst√®me open-source du domaine g√©ospatiale. Sans s‚Äôen rendre compte, c‚Äôest aujourd‚Äôhui utilis√© dans la vie de tous les jours. Par exemple, sur votre t√©l√©phone, il suffit de constater toutes les applications qui utilisent votre localisation.&lt;/p&gt;

&lt;p&gt;En tant que membre √©lu du conseil d‚Äôadministration de la Fondation Open Source Geospatial (OSGeo), Codrina recense toutes les librairies open source de g√©ospatiale afin d‚Äôoffrir une documentation des diff√©rentes solutions disponibles, servir la communaut√© open source et guider les utilisateurs dans leur choix selon leurs besoins. La fondation promeut √©galement ces diff√©rentes solutions aupr√®s des agences spatiales internationales et a m√™me re√ßu le soutien de l‚Äôagence spatiale europ√©enne (ESA) en 2023.&lt;/p&gt;</content><author><name>[&quot;y_ferlin&quot;, &quot;p_rambaud&quot;, &quot;a_moutounet&quot;, &quot;v_clavreul&quot;, &quot;h_detang&quot;, &quot;p_martin&quot;]</name></author><category term="conference" /><category term="lyon" /><category term="tech" /><category term="agilit√©" /><summary type="html">Bedrock √©tait pr√©sent au MiXiT 2025, les 29 et 30 avril √† Lyon. Voici un petit r√©sum√© des conf√©rences qui nous ont le plus marqu√©s.</summary></entry><entry><title type="html">Bedrock au Devoxx 2025</title><link href="https://tech.bedrockstreaming.com/2025/05/06/bedrock-au-devoxx-2025.html" rel="alternate" type="text/html" title="Bedrock au Devoxx 2025" /><published>2025-05-06T00:00:00+00:00</published><updated>2025-05-06T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2025/05/06/bedrock-au-devoxx-2025</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2025/05/06/bedrock-au-devoxx-2025.html">&lt;p&gt;Le Devoxx est un √©v√©nement incontournable pour les d√©veloppeurs et les professionnels de la technologie, qui a eu lieu du 16 avril 2025 au 18 avril 2025 au Palais des Congr√®s de Paris.&lt;/p&gt;

&lt;p&gt;Cette ann√©e, en plus d‚Äôavoir la chance d‚Äôy participer en tant que spectateur pour d√©couvrir de nombreuses conf√©rences passionnantes, nous avons eu l‚Äôhonneur de pr√©senter une conf√©rence, avec &lt;a href=&quot;https://www.linkedin.com/in/becolin/&quot;&gt;Benoit Colin&lt;/a&gt;, Software Developer chez Bedrock, qui a co-pr√©sent√© la conf√©rence ‚Äú&lt;a href=&quot;https://www.devoxx.fr/en/agenda-2025/talk/load-testons-m6-pour-preparer-l-euro-2024/&quot;&gt;Load-testons M6+ pour pr√©parer l‚ÄôEuro 2024 !&lt;/a&gt;‚Äù au cours de laquelle il a pr√©sent√© le travail que nous avons accompli l‚Äôann√©e derni√®re pour nous pr√©parer √† diffuser l‚ÄôEuro 2024 de football sur M6+, une des marques que Bedrock h√©berge sur sa plateforme.&lt;/p&gt;

&lt;p&gt;Dans cet article, nous partagerons avec vous les points cl√©s des conf√©rences auxquelles nous avons assist√©.&lt;/p&gt;

&lt;h2 id=&quot;gitflow-cest-bien-gitbutler-cest-mieux-&quot;&gt;Gitflow c‚Äôest bien, GitButler c‚Äôest mieux !&lt;/h2&gt;

&lt;p&gt;Yann-Thomas Le Moigne et Lilian Forget nous pr√©sentent un outil permettant de faire des strat√©gies de gestion de branche. Cette conf√©rence √©tait bas√©e sur une comparaison entre Gitflow et &lt;a href=&quot;https://gitbutler.com/&quot;&gt;Gitbutler&lt;/a&gt;. De plus nous avons pu assister √† la d√©monstration de l‚Äôoutil en live.&lt;/p&gt;

&lt;h3 id=&quot;gitflow&quot;&gt;Gitflow&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Forces&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Processus normalis√©s :&lt;/strong&gt; Instaure une structure et une coh√©rence dans le flux de travail, r√©duisant les ambigu√Øt√©s et les malentendus potentiels.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Structure claire :&lt;/strong&gt; Offre une visibilit√© et une pr√©visibilit√© accrues, facilitant la navigation et la compr√©hension du projet, en particulier pour les nouveaux membres de l‚Äô√©quipe.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Historique des modifications organis√© :&lt;/strong&gt; Permet un suivi m√©ticuleux des changements, simplifiant le d√©bogage, la r√©solution des conflits et l‚Äôidentification des contributions individuelles.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Faiblesses&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Adaptation √† la strat√©gie d‚Äôentreprise :&lt;/strong&gt; Peut n√©cessiter des ajustements et des personnalisations pour s‚Äôaligner sur les objectifs et les processus sp√©cifiques de l‚Äôentreprise.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Connaissances en Git requises :&lt;/strong&gt; Pr√©suppose une familiarit√© avec le syst√®me de contr√¥le de version Git, ce qui peut constituer un obstacle pour les membres de l‚Äô√©quipe moins exp√©riment√©s.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manque de souplesse :&lt;/strong&gt; Peut montrer des limites dans sa capacit√© √† s‚Äôadapter rapidement et efficacement √† des changements de contexte ou de priorit√©s impr√©vus.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Difficult√©s quotidiennes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Lacunes en Git :&lt;/strong&gt; L‚Äôutilisation quotidienne peut √™tre entrav√©e par des difficult√©s √† ex√©cuter des commandes Git, √† comprendre les concepts cl√©s ou √† r√©soudre les conflits de fusion.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Workflows rigides :&lt;/strong&gt; Les workflows impos√©s peuvent parfois √™tre per√ßus comme contraignants ou restrictifs, limitant la libert√© d‚Äôaction et l‚Äôautonomie des d√©veloppeurs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Changements de contexte :&lt;/strong&gt; La n√©cessit√© de basculer fr√©quemment entre diff√©rentes t√¢ches, branches ou projets peut perturber la concentration, r√©duire la productivit√© et augmenter le risque d‚Äôerreurs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gitbutler&quot;&gt;GitButler&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Cr√©√© par le fondateur de GitHub&lt;/strong&gt; : b√©n√©ficie de l‚Äôexpertise de la plateforme de d√©veloppement collaborative la plus populaire&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Visualisation claire des commits et branches&lt;/strong&gt; : interface conviviale facilitant l‚Äôorganisation et la gestion du travail&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Configuration IA personnalisable&lt;/strong&gt; : adapte les suggestions et l‚Äôassistance de l‚ÄôIA selon vos pr√©f√©rences pour les messages de commit&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GUI avec branches virtuelles, ind√©pendante du fonctionnement strict de Git&lt;/strong&gt; : approche plus flexible et intuitive de la gestion des branches&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;R√©organisation et application personnalis√©e des branches&lt;/strong&gt; : contr√¥le accru sur l‚Äôordre des modifications et l‚Äôint√©gration des branches&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Notifications de mises √† jour du d√©p√¥t distant&lt;/strong&gt; : restez inform√© des changements externes et synchronisez votre travail&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mise √† jour en un clic avec gestion des conflits&lt;/strong&gt; : simplifie le processus de mise √† jour et offre des options de r√©solution de conflits (merge ou rebase)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Blocage des pushs en cas de conflit&lt;/strong&gt; : √©vite les erreurs et les incoh√©rences en emp√™chant les pushs non r√©solus&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Historique complet des commandes et actions avec annulation facile&lt;/strong&gt; : permet de revenir en arri√®re et de corriger les erreurs rapidement&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;R√©initialisation automatique pour un d√©p√¥t propre&lt;/strong&gt; : maintient l‚Äôenvironnement de travail organis√©&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Avantages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Branches l√©g√®res et flexibles&lt;/strong&gt; : simplifie la cr√©ation, la gestion et la manipulation des branches&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Changement de contexte ais√©&lt;/strong&gt; : facilite le passage d‚Äôune t√¢che √† l‚Äôautre et la gestion de diff√©rents aspects du projet&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Int√©gration simplifi√©e du contenu&lt;/strong&gt; : facilite la fusion des modifications et la collaboration entre les d√©veloppeurs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;R√©duction des conflits de merge&lt;/strong&gt; : minimise les risques d‚Äôerreurs et facilite la r√©solution des conflits&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Connaissances limit√©es de Git n√©cessaires&lt;/strong&gt; : interface intuitive et assistance int√©gr√©e r√©duisant la courbe d‚Äôapprentissage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Inconv√©nients&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Origine obligatoire&lt;/strong&gt; : peut n√©cessiter une adaptation des workflows pour les projets existants&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gitflow non adapt√©&lt;/strong&gt; : peut ne pas √™tre compatible avec certains mod√®les de branches sp√©cifiques&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Int√©gration des hooks&lt;/strong&gt; : pourrait n√©cessiter des ajustements pour certains flux de travail automatis√©s&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Hybridation possible&lt;/strong&gt; : peut √™tre combin√© avec des outils et des workflows Git existants&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;√âquipe dynamique&lt;/strong&gt; : b√©n√©ficie d‚Äôun d√©veloppement actif et d‚Äôune communaut√© grandissante&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Opensource&lt;/strong&gt; : accessible √† tous et encourageant les contributions et l‚Äôam√©lioration continue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Points Suppl√©mentaires √† Consid√©rer&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Potentiel d‚Äôint√©gration avec d‚Äôautres outils&lt;/strong&gt; : explore les possibilit√©s de connexion avec des IDE, des plateformes de gestion de projets, etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;√âvolutivit√© pour les grands projets&lt;/strong&gt; : √©value les performances et la capacit√© √† g√©rer des d√©p√¥ts complexes et volumineux&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Support et documentation&lt;/strong&gt; : v√©rifie la disponibilit√© de ressources d‚Äôaide et de guides d‚Äôutilisation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Comparaison avec d‚Äôautres interfaces Git&lt;/strong&gt; : √©value les diff√©rences et les avantages par rapport √† des outils similaires&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Impact sur les pratiques de d√©veloppement&lt;/strong&gt; : analyse comment GitButler peut influencer les workflows et la collaboration au sein des √©quipes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En r√©sum√©, GitButler se pr√©sente comme une interface prometteuse pour Git, offrant une exp√©rience utilisateur simplifi√©e et des fonctionnalit√©s innovantes. En se concentrant sur la visualisation, la flexibilit√© et la facilit√© d‚Äôutilisation, il vise √† am√©liorer la productivit√© et √† faciliter la gestion du code source, en particulier pour ceux qui sont moins familiers avec Git. C‚Äôest un outil que nous allons tester pour en savoir plus et savoir si cela pourrait √™tre utile dans un contexte professionnel.&lt;/p&gt;

&lt;h2 id=&quot;github-copilot--aller-encore-plus-loin-que-la-compl√©tion-de-code&quot;&gt;GitHub Copilot : Aller encore plus loin que la compl√©tion de code&lt;/h2&gt;

&lt;p&gt;Les deux conf√©renci√®res, Kim-Adeline Miguel et Sandra Parlant, travaillent chez GitHub et sont venues nous parler plus en d√©tails de Copilot. Chez Bedrock nous avons acc√®s √† cet outil et cette conf√©rence m‚Äôa permis de d√©couvrir des fonctionnalit√©s que je ne connaissais pas du tout et que je vais tester √† l‚Äôavenir.&lt;/p&gt;

&lt;h3 id=&quot;chat-copilot&quot;&gt;Chat Copilot&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Instructions personnalis√©es dans le projet&lt;/strong&gt; : Adaptation du comportement de Copilot en fonction du contexte sp√©cifique du projet (fonctionnalit√© √† venir sur JetBrains).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Instructions personnalis√©es&lt;/strong&gt; : Capacit√© √† donner des directives sp√©cifiques √† Copilot, comme r√©pondre dans une langue donn√©e (par exemple, le fran√ßais).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mode immersif&lt;/strong&gt; : Exp√©rience utilisateur optimis√©e pour minimiser les distractions et maximiser la productivit√©.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pr√©sentation des fonctionnalit√©s du chat&lt;/strong&gt; : Guide int√©gr√© pour d√©couvrir et ma√Ætriser les diff√©rentes fonctionnalit√©s offertes par l‚Äôoutil.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@workspace et contexte √©tendu&lt;/strong&gt; : Prise en compte de l‚Äôensemble du contenu du projet pour des r√©ponses et suggestions plus pertinentes et pr√©cises.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modes ask, edit, agent&lt;/strong&gt; : Adaptation du comportement de Copilot selon le besoin : poser des questions, √©diter du contenu ou agir en tant qu‚Äôassistant intelligent.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Choix de fichiers pr√©cis pour le contexte&lt;/strong&gt; : Possibilit√© de sp√©cifier les fichiers √† consid√©rer pour le contexte, am√©liorant la pertinence des r√©ponses.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mode agent et serveur MCP&lt;/strong&gt; : Interaction avec le serveur MCP pour effectuer des actions directement depuis le chat, comme ouvrir des Pull Requests ou des issues (avec possibilit√© d‚Äôaccepter ou de refuser les suggestions).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mode multi-edit et mode agent&lt;/strong&gt; : Gestion des modifications soit en une seule √©tape (multi-edit), soit √©tape par √©tape (mode agent).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;copilot-code-review&quot;&gt;Copilot Code Review&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;G√©n√©ration de la description de la PR&lt;/strong&gt; : Automatisation de la cr√©ation de descriptions claires et concises pour les Pull Requests.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Commentaires sur les diffs de la PR&lt;/strong&gt; : Ajout automatique de commentaires pertinents sur les modifications apport√©es dans la Pull Request.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Suggestions d‚Äôam√©liorations&lt;/strong&gt; : Propositions de modifications pour optimiser le code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Encourage √† üëç ou üëé&lt;/strong&gt; : Incitation √† donner son avis sur les modifications propos√©es (approbation ou refus).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;github-advanced-security&quot;&gt;GitHub Advanced Security&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Propositions de fixs de s√©curit√©&lt;/strong&gt; : Identification des vuln√©rabilit√©s et suggestions de corrections pour renforcer la s√©curit√© du code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Activable&lt;/strong&gt; : Fonctionnalit√© optionnelle pouvant √™tre activ√©e ou d√©sactiv√©e selon les besoins.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mixit√©-femmehomme--diagnostiquer-agir-et-r√©volutionner-la-tech-&quot;&gt;Mixit√© Femme/Homme : Diagnostiquer, Agir et R√©volutionner la Tech !&lt;/h2&gt;

&lt;p&gt;Dans cette conf√©rence, les 3 collaboratrices (Claire Gourcy, Aude Malabat et Barbara Martin) de chez Michelin veulent nous pr√©senter le constat fait chez Michelin IT en France mais aussi quels moyens ont √©t√© mis en place. Le d√©part a √©t√© le diagnostic de mixit√© qui nous apprend que seulement 28% de femmes dans l‚Äôentreprise et dans les m√©tiers techniques, ce chiffre tombe √† 10%.&lt;/p&gt;

&lt;p&gt;Il existe au sein de l‚Äôentreprise le r√©seau Better Together qui a √©t√© cr√©√© pour promouvoir la diversit√© au sein de l‚Äôentreprise : mixit√© homme-femmes mais aussi l‚Äôinclusion des minorit√©s.&lt;/p&gt;

&lt;p&gt;Pour que leur travail ait du sens, elles ont d√©fini des axes de travail pour plus de diversit√©, d‚Äô√©quit√© et d‚Äôinclusion :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Objectivit√© : avoir des chiffres pour √©tayer les actions √† mener&lt;/li&gt;
  &lt;li&gt;T√©moignages : recueillir des t√©moignages pour sensibiliser et montrer l‚Äôimportance du sujet&lt;/li&gt;
  &lt;li&gt;Sponsoring : impliquer la direction pour expliquer les enjeux et les objectifs de la d√©marche&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un des points les plus abord√©s √† la fois par les femmes et les hommes est la notion de discrimination positive. En effet, les hommes ont ‚Äúpeur‚Äù d‚Äô√™tre d√©favoris√©s si en concurrence avec une coll√®gue f√©minine et les femmes, quand-√† elles, ne sentent pas l√©gitime dans leur poste.&lt;/p&gt;

&lt;p&gt;Ce projet a √©t√© lanc√© en 2022, en 2025 elles sont en phase d‚Äôaction. Il est important de souligner que ce projet a √©t√© men√© en parall√®le de leur travail respectif. Le p√©rim√®tre est celui de Michelin IT en France.&lt;/p&gt;

&lt;p&gt;Pour commencer ce projet, voici le kit de d√©marrage&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;√âquipe motiv√©e&lt;/li&gt;
  &lt;li&gt;Donn√©es qualitatives et quantitatives&lt;/li&gt;
  &lt;li&gt;Cadre clair avec score et objectifs&lt;/li&gt;
  &lt;li&gt;Sponsor influent&lt;/li&gt;
  &lt;li&gt;Patience et pers√©v√©rance&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;avant-de-d√©marrer&quot;&gt;Avant de d√©marrer&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;√âquipe c≈ìur : Rassembler 4 personnes engag√©es et compl√©mentaires.&lt;/li&gt;
  &lt;li&gt;D√©finir le score : D√©finir le p√©rim√®tre (France ou monde), les √©l√©ments √† mesurer (cat√©gorie de m√©tier, r√©partition homme-femme, reconnaissance au poste, ressentis sur le terrain) et fixer des objectifs r√©alistes et mesurables.&lt;/li&gt;
  &lt;li&gt;Collecter les donn√©es : Identifier les tendances, √©tudier les pratiques internes et externes, et analyser la situation actuelle.&lt;/li&gt;
  &lt;li&gt;Obtenir un sponsor : Convaincre la direction et obtenir le soutien de personnes influentes en mettant en avant les b√©n√©fices concrets.&lt;/li&gt;
  &lt;li&gt;V√©rifications : √™tre s√ªres que tout est pr√™t pour passer √† l‚Äô√©tape suivante&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;diagnostiquer&quot;&gt;Diagnostiquer&lt;/h3&gt;

&lt;p&gt;L‚Äôobjectif est de trouver une cl√© de mesure pr√©cise, avec de bons capteurs humains et pour cela, vous aurez besoin d‚Äôun bon carnet de notes !&lt;/p&gt;

&lt;p&gt;Ensuite, la d√©marche est la suivante :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Analyse qualitative : Rep√©rer les √©carts invisibles, les ressentis et les t√©moignages. Analyser les freins et les opportunit√©s √† travers des interviews et des questionnaires.&lt;/li&gt;
  &lt;li&gt;Pr√©paration des interviews : Identifier des collaborateurs de diff√©rents niveaux, former des intervieweurs motiv√©s, √©laborer une trame d‚Äôinterview et planifier les entretiens avec des collaborateurs de tous niveaux hi√©rarchiques et de tous les services.
Note : L‚Äôobjectivit√© des r√©ponses peut √™tre remise en question, car des employ√©s Michelin interrogent d‚Äôautres employ√©s Michelin.&lt;/li&gt;
  &lt;li&gt;Conduite et collecte : R√©aliser des interviews de mani√®re structur√©e, analyser les propos et extraire des verbatims marquants. Note : Penser √† l‚Äôanalyse des verbatims lors de l‚Äô√©laboration de la trame d‚Äôinterview.&lt;/li&gt;
  &lt;li&gt;Enqu√™te compl√©mentaire : Mener une enqu√™te √† grande √©chelle avec des questions ferm√©es, organiser l‚Äôenvoi et les relances (avec l‚Äôappui du sponsor) et r√©aliser une analyse statistique.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;agir-et-r√©volutionner&quot;&gt;Agir et r√©volutionner&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Pr√©senter les r√©sultats : Partager les r√©sultats de fa√ßon claire et engageante avec les sponsors et la direction avant une restitution globale.&lt;/li&gt;
  &lt;li&gt;Restitution globale : Utiliser une forme originale comme une pi√®ce de th√©√¢tre mettant en sc√®ne des situations v√©cues pour pr√©senter les r√©sultats globaux.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Plan d‚Äôaction : Construire un plan d‚Äôaction en mettant en valeur les points forts et en s‚Äôattaquant aux axes d‚Äôam√©lioration. Il est important de souligner que ce plan d‚Äôaction a √©t√© valid√© par la direction et est maintenant mis en place progressivement pour augmenter la mixit√© et r√©duire les in√©galit√©s. Il a √©t√© soulign√© que sans appui et volont√© de la direction rien n‚Äôaurait √©t√© possible.&lt;/p&gt;

&lt;h2 id=&quot;kubernetes--5-fa√ßons-cr√©atives-de-flinguer-sa-prod-&quot;&gt;Kubernetes : 5 fa√ßons cr√©atives de flinguer sa prod üî´&lt;/h2&gt;

&lt;p&gt;Dans un incident bas√© sur des faits r√©els, les √©quipes de Denis Germain ont rencontr√© des probl√®mes avec les sondes Kube (Readiness, Liveness et Healthchecks) lorsqu‚Äôelles ont introduit des d√©pendances externes et cycliques dans leurs v√©rifications de vivacit√©. Cette mauvaise pratique a entra√Æn√© un effet domino catastrophique : lorsqu‚Äôun pod tombait en panne, il entra√Ænait la d√©faillance d‚Äôautres pods d√©pendants, provoquant une cascade d‚Äôarr√™ts qui a finalement mis hors service tous les pods du syst√®me. La r√©solution de cet incident a n√©cessit√© une intervention manuelle fastidieuse et chronophage pour r√©tablir le fonctionnement du syst√®me, soulignant les risques li√©s √† la mauvaise gestion des d√©pendances dans les sondes Kube. Difficult√©s lors de la migration Helm et l‚Äôimportance du GitOps.&lt;/p&gt;

&lt;p&gt;Une autre erreur co√ªteuse s‚Äôest produite lors d‚Äôune migration de Helm V2 vers V3. Une mauvaise interpr√©tation de la cha√Æne ‚Äúv1‚Äù dans les noms des manifests a conduit √† leur suppression accidentelle. Cette cha√Æne faisait en fait r√©f√©rence √† la version de l‚ÄôAPI, et sa suppression a effac√© l‚Äôhistorique de d√©ploiement de Helm, emp√™chant les mises √† jour. Cette situation a entra√Æn√© une interruption de service critique, n√©cessitant la restauration manuelle des manifests supprim√©s dans la base de donn√©es de production √† partir de sauvegardes. Cette exp√©rience souligne l‚Äôimportance cruciale de bien comprendre les outils utilis√©s et de disposer de sauvegardes fiables. Elle met √©galement en √©vidence les avantages du GitOps (avec des outils comme ArgoCD ou FluxCD) pour la gestion des d√©ploiements. Le GitOps r√©duit les erreurs humaines en fournissant une source unique de v√©rit√© et un processus de d√©ploiement automatis√© et reproductible. Bonnes pratiques pour la r√©silience des applications Kubernetes.&lt;/p&gt;

&lt;p&gt;En r√©sum√©, ces incidents soulignent l‚Äôimportance d‚Äôune conception et d‚Äôune gestion minutieuses des applications Kubernetes. Voici quelques points cl√©s √† retenir :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sondes Kube : √âvitez d‚Äôintroduire des d√©pendances externes ou cycliques dans les sondes de vivacit√© pour pr√©venir les pannes en cascade.&lt;/li&gt;
  &lt;li&gt;Migrations : Effectuez des tests approfondis et comprenez parfaitement les implications de toute modification lors des migrations d‚Äôoutils comme Helm.&lt;/li&gt;
  &lt;li&gt;Sauvegardes : Maintenez des sauvegardes r√©guli√®res et fiables de vos environnements, y compris les bases de donn√©es Helm et les manifests Kubernetes.&lt;/li&gt;
  &lt;li&gt;GitOps : Envisagez l‚Äôadoption de pratiques GitOps pour am√©liorer la fiabilit√©, la reproductibilit√© et la tra√ßabilit√© de vos d√©ploiements.&lt;/li&gt;
  &lt;li&gt;Outils de restauration : Familiarisez-vous avec des outils comme Velero pour faciliter la restauration de vos environnements Kubernetes en cas de sinistre.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En suivant ces recommandations, vous pouvez renforcer la r√©silience de vos applications Kubernetes et minimiser les risques d‚Äôinterruption de service.&lt;/p&gt;

&lt;h2 id=&quot;45-min-pour-mettre-son-application-√†-genoux--le-guide-complet-du-test-de-charge&quot;&gt;45 min pour mettre son application √† genoux : le guide complet du test de charge&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;R√©sum√© du format de crash-course sur les tests de charge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;D‚Äôun point de vue technique, il est essentiel de d√©terminer les √©l√©ments critiques dont la d√©faillance impacterait la production, et donc de d√©finir les composants √† tester. D‚Äôun point de vue fonctionnel, il faut identifier le parcours et le sc√©nario utilisateur. Le sc√©nario de test doit cibler les briques √† tester (authentification, application, API, etc.).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exemple de sc√©nario&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Une fausse application web a √©t√© cr√©√©e pour la conf√©rence. Le sc√©nario simule la navigation d‚Äôun utilisateur via une gateway et une API. Il s‚Äôagit d‚Äôun test de capacit√© visant √† d√©terminer le nombre d‚Äôutilisateurs que l‚Äôapplication peut supporter avant de crasher de mani√®re critique.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Outil de test&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;L‚Äôoutil utilis√© est Gatling, un outil open source permettant de cr√©er des tests de charge ‚Äúas code‚Äù, c‚Äôest-√†-dire que les sc√©narios de test sont int√©gr√©s dans le code comme le sont les tests unitaires.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Points cl√©s de la conf√©rence et bonnes pratiques&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;L‚Äôobjectif principal de la conf√©rence √©tait de pr√©senter les bases de Gatling et des tests de charge. Un point important soulev√© est que le syst√®me s‚Äôoptimise lorsqu‚Äôon teste toujours la m√™me chose, il est donc crucial de varier les sc√©narios pour couvrir un maximum de cas d‚Äôerreur. C‚Äôest pourquoi un syst√®me permettant de tester des utilisateurs personnalis√©s et diff√©rents de mani√®re al√©atoire a √©t√© pr√©sent√©.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quelques bonnes pratiques √† retenir :&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pour les contextes authentifi√©s, privil√©gier la d√©sactivation du WAF plut√¥t que des d√©veloppements complexes.&lt;/li&gt;
  &lt;li&gt;Pour exposer des √©l√©ments sp√©cifiques au SI, utiliser une gateway de test.&lt;/li&gt;
  &lt;li&gt;Les donn√©es de test doivent √™tre reproductibles et il faut pr√©voir comment les r√©initialiser.&lt;/li&gt;
  &lt;li&gt;Pour maintenir le test de charge, inclure un smoke test dans la CI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;anatomie-dune-faille&quot;&gt;Anatomie d‚Äôune faille&lt;/h2&gt;

&lt;p&gt;Olivier PONCET nous raconte l‚Äôhistoire de la mise en place d‚Äôune faille de s√©curit√© dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XZ utils&lt;/code&gt;, un ensemble de biblioth√®ques et d‚Äôoutils pour la compression et d√©compression LZMA, tr√®s utilis√© en partie dans les distributions Linux ainsi que dans le noyau.&lt;/p&gt;

&lt;p&gt;Cette faille, CVE-2024-3094, du 29 mars 2024, a le score de 10, le plus √©lev√© et exploitable tout de suite (0-day). Heureusement, elle est d√©couverte, par hasard, avant la sortie des releases des distributions les plus connues comme Ubuntu et Fedora.&lt;/p&gt;

&lt;p&gt;Olivier nous explique les diff√©rentes √©tapes de l‚Äôattaque et sa chronologie.
L‚Äôattaque, organis√©e et planifi√©e, commence en 2022. La cible est d‚Äôaffaiblir le d√©mon SSH des machines.
Tout commence par de l‚Äôing√©nierie sociale, c‚Äôest pourquoi, l‚Äôattaquant &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jia Tan&lt;/code&gt; (ou peut-√™tre les attaquants) cible &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XZ utils&lt;/code&gt;. Le projet est maintenu par une seule personne &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lasse Collin&lt;/code&gt;, donc une seule personne √† convaincre pour devenir co-mainteneur. Cette √©tape est r√©ussie √† cause de pressions faites pour merger une PR, pour un patch l√©gitime, sur GitHub. Ces pressions sont faites par d‚Äôautres comptes, mais des suspicions pensent √† croire que tous ces comptes appartenaient √† la m√™me personne (ou le m√™me groupe).
En 2023, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jia Tan&lt;/code&gt; devient co-mainteneur, ce qui lui permet d‚Äôappliquer dans un premier temps des corrections, mais prend le contr√¥le de l‚Äôadresse email de contact pour que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lasse Collin&lt;/code&gt; ne soit pas mis au courant de possibles probl√®mes.&lt;/p&gt;

&lt;p&gt;D√©but 2024, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jia Tan&lt;/code&gt; gagne le contr√¥le du projet sous GitHub et change l‚Äôh√©bergement des pages GitHub. En f√©vrier, la charge utile est ajout√© et la version 5.6.0 sort au moment des releases des grandes distributions Linux. Un dysfonctionnement est d√©tect√©, ce qui entraine la cr√©ation d‚Äôun patch rapide : 5.6.1.
La charge utile n‚Äôexiste pas dans les sources sur GitHub, uniquement dans le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tar.gz&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Un forte ing√©nierie technique est mise en place pour r√©ussir √† modifier des fichiers Makefile lors du build des distributions Linux.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jia Tan&lt;/code&gt; a principalement consolid√© les tests dans &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XZ utils&lt;/code&gt;, et dans un nouveau test, un fichier compress√©, qui semble inoffensif, est ajout√©, mais le script va prendre des bouts de codes par-ci par-l√† pour injecter la vraie faille de s√©curit√©.&lt;/p&gt;

&lt;p&gt;La d√©couverte de la faille est faite par un ing√©nieur, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Andres Freund&lt;/code&gt;, qui travaille principalement sur PostgreSQL, chez Microsoft, mais pas du tout dans le domaine de la s√©curit√©. Alors qu‚Äôil d√©bogue son travail sur PostgreSQL, il se rend compte de ralentissement et investigue un peu, il publie alors un board de s√©curit√©.&lt;/p&gt;

&lt;p&gt;Il a fallu un alignement des plan√®tes exceptionnel pour permettre de cr√©er la faille, mais encore plus pour la d√©tecter.
Mais la conclusion de tout √ßa, c‚Äôest que la s√©curisation de la supply-chain est souvent oubli√©e. C‚Äôest pourtant un grand vecteur d‚Äôattaque, car il est possible d‚Äôinfecter l‚ÄôOS, les logiciels ou les paquets, les gestionnaires de paquets (composer, npm, pip, go, cargo, maven, ‚Ä¶) et sans oublier les images docker.
Ce n‚Äôest pas parce que c‚Äôest sur GitHub que c‚Äôest au-dessus de tous soup√ßons.
Pour √©viter tout √ßa, il est pr√©f√©rable d‚Äôutiliser des gestionnaires d‚Äôartefacts qui vont valider et approuver les diff√©rents √©l√©ments.&lt;/p&gt;

&lt;p&gt;En plus de la conclusion, ce qui reste le plus marquant, c‚Äôest le temps utilis√© pour planifier et r√©aliser l‚Äôattaque, et la chance d‚Äôune d√©tection, opportuniste, avant un d√©ploiement massif.
Mais apr√®s avoir r√©alis√© tout √ßa, on peut se demander combien d‚Äôattaques existe-t-il encore et sont toujours invisibles ?&lt;/p&gt;

&lt;h2 id=&quot;go-sans-fioritures--quand-le-standard-suffit&quot;&gt;Go sans fioritures : quand le standard suffit&lt;/h2&gt;

&lt;p&gt;Nathan CASTELEIN nous pr√©sente comment faire une API Web sans utiliser de composants externes √† Golang. En effet, plusieurs fonctionnalit√©s disponibles dans des librairies externes ont √©t√© int√©gr√©es petit √† petit dans le c≈ìur du langage.
Dans cette conf√©rence, on nous pr√©sente trois grosses fonctionnalit√©s : l‚Äô√©criture d‚ÄôAPI Web, la gestion des logs et l‚Äô√©criture de tests unitaires sans librairie.&lt;/p&gt;

&lt;p&gt;Avant la version 1.22, parser une URL pour r√©cup√©rer des param√®tres de route, n‚Äô√©tait pas ais√© sans librairie, mais depuis le pattern du routing est am√©lior√© et natif, nous pouvons donc r√©cup√©rer nous param√®tre avec &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r.PathValue(&quot;name&quot;)&lt;/code&gt;.
L‚Äôutilisation de middleware existe dans les librairies de router HTTP, mais Nathan nous montre comment faire de mani√®re native.&lt;/p&gt;

&lt;p&gt;Depuis la version 1.21, nous pouvons profiter de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;log/slog&lt;/code&gt; qui permet de logger des messages comme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logrus&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zerolog&lt;/code&gt; de mani√®re structur√©e.
Nativement, il est possible d‚Äôutiliser 2 types de handler, un pour envoyer des logs au format texte et un autre au format JSON.
Des helpers pour structurer les logs sont √©galement disponibles.
L‚Äôinterface &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LogValuer&lt;/code&gt; permet d‚Äôadapter une structure dans le log, pour, par exemple, ne pas afficher un mot de passe, etc.&lt;/p&gt;

&lt;p&gt;Enfin, Nathan nous pr√©sente comment faire les tests parall√©lis√©s, initialis√© et nettoy√© (√©quivalent de setUp() et tearDown()) sans testify.&lt;/p&gt;

&lt;p&gt;On peut voir que certaines des fonctionnalit√©s qu‚Äôon utilise au travers de librairies externes peuvent √™tre √©vit√©, mais ce n‚Äôest pas pour autant que nous devons arr√™ter d‚Äôen utiliser, car souvent √ßa peut simplifier des choses. L‚Äôid√©e est surtout de bien r√©fl√©chir √† l‚Äôutilisation que l‚Äôon a besoin de ces librairies. Il faut se poser la question b√©n√©fice/risque pour les utiliser, par exemple testing a int√©gr√© des fonctionnalit√©s de testify mais la gestion des assertions est encore inexistante.&lt;/p&gt;

&lt;h2 id=&quot;la-territorialisation-des-infrastructures-comme-levier-de-pouvoir&quot;&gt;La territorialisation des infrastructures comme levier de pouvoir&lt;/h2&gt;

&lt;p&gt;Oph√©lie COELHO, nous pr√©sente dans cette conf√©rence, un sujet dont on parle peu a l‚Äôair du cloud : les infrastructures mat√©rielles et toute la g√©opolitique qui tourne autour.
Nous pouvons voir qu‚Äôentre le r√©seau de t√©l√©graphe de 1903 et aujourd‚Äôhui, les routes sont presque les m√™mes. Il y a une concentration autour de l‚Äôancien empire britannique. Et d√©j√† l‚Äô√©poque, cette infrastructure est industrialis√©e √† but g√©opolitique.&lt;/p&gt;

&lt;p&gt;En 1905, pendant la bataille navale de Tsushima, opposant le Japon et la Russie, le Japon re√ßoit un soutien de la part des britanniques en incluant le pays dans son r√©seau t√©l√©graphique et le coupant aux Russes.&lt;/p&gt;

&lt;p&gt;Aujourd‚Äôhui, les r√©seaux sont encore consid√©r√©s comme une force et un moyen de pression. Les c√¢bles sont du dur, du mat√©riel et font partie du territoire. Internet dans pas un village sans fronti√®res.
Des n√©gociations pour connecter les c√¢bles et les infrastructures sont bien r√©elles.
Des routes peuvent appara√Ætre pour des raisons de redondance, mais aussi g√©opolitique.&lt;/p&gt;

&lt;p&gt;Certaines r√©alit√©s ne sont pas tr√®s glorieuses comme des datacentres d‚ÄôAfrique sont prioris√©s pour l‚Äô√©lectricit√© et prive une part non n√©gligeable de la population ou bien, les infrastructures globales du continent Africain o√π la majorit√© du trafic passe par l‚ÄôAfrique du Sud.&lt;/p&gt;

&lt;p&gt;On nous pr√©sente aussi que sur ce sujet, la puissance n‚Äôest pas qu‚Äô√©tatique √† ce niveau, en effet, des entreprises priv√©es sont souvent les plus grands propri√©taires avec, par exemple, Google qui est copropri√©taire d‚Äôune trentaine de c√¢bles sous-marins dont 16 tout seul.&lt;/p&gt;

&lt;p&gt;Pour conclusion, on nous explique qu‚Äôil est toujours temps d‚Äôagir si l‚Äôon veut plus de d√©centralisation. Qu‚Äôapprendre les r√©seaux en cours de G√©ographie dans toutes les fili√®res serait un plus.&lt;/p&gt;

&lt;h2 id=&quot;postgresql--le-couteau-suisse-dont-vous-avez-besoin-sans-le-savoir&quot;&gt;PostgreSQL : Le couteau suisse dont vous avez besoin (sans le savoir)&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://l_avrot.gitlab.io/slides/justpg_20250418.html&quot;&gt;slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dans cette conf√©rence, L√¶titia AVROT, nous parle de plusieurs fonctionnalit√©s utiles de PostgreSQL, en partant d‚Äôexemple concret d‚Äôune entreprise fictive qui ferait de la location de v√©lo.&lt;/p&gt;

&lt;h3 id=&quot;range&quot;&gt;Range&lt;/h3&gt;

&lt;p&gt;Pour g√©rer le non-chevauchement de location de v√©lo, on nous pr√©sente le type Range, qui peut aussi √™tre index√© et surtout utilis√© dans des contraintes d‚Äôunicit√©. Il existe plusieurs op√©rateurs pour manipuler les ranges, comme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@&amp;gt;&lt;/code&gt; qui permet de savoir si un range est inclus dans un autre, etc.
Nous allons pouvoir √©crire nos range de date de cette mani√®re : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;[2025-04-01, 2025-04-05)&apos;::daterange&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[&lt;/code&gt; inclut la valeur alors que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(&lt;/code&gt; l‚Äôexclut.&lt;/p&gt;

&lt;p&gt;PostgreSQL est aussi capable de g√©rer la valeur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inifiniy&lt;/code&gt;, fini le champ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;end&lt;/code&gt; √† &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt; pour dire que c‚Äôest en cours.&lt;/p&gt;

&lt;h3 id=&quot;identifiers&quot;&gt;Identifiers&lt;/h3&gt;

&lt;p&gt;L√¶titia, continue par nous pr√©senter les diff√©rentes mani√®res de g√©rer des identifiants de table :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;les s√©quences, o√π il est pr√©f√©rable de ne pas oublier l‚Äôinstruction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT nextval(&apos;my_seq&apos;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;les colonnes de type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SERIAL&lt;/code&gt; qui cr√©e automatiquement une s√©quence et renseigne l‚Äôinstruction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt;, mais l√† encore rien n‚Äôemp√™che de mettre une valeur qui ne provienne pas de la s√©quence&lt;/li&gt;
  &lt;li&gt;et enfin les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Identity Columns&lt;/code&gt; que l‚Äôon peut d√©clarer comme ceci : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY&lt;/code&gt;, l√† aussi cela cr√©e la s√©quence, mais le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALWAYS&lt;/code&gt; emp√™che de mettre une valeur qui ne viendrait pas de la s√©quence.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;generated-columns&quot;&gt;Generated Columns&lt;/h3&gt;

&lt;p&gt;Pour continuer dans l‚Äôexemple de la location de v√©lo, nous aimerions avoir l‚Äôinformation de la dur√©e de la location. On nous montre qu‚Äôil est relativement simple √† calculer √† partir de 2 dates, elles m√™me extraites du range. Mais pour √©viter de faire le calcul dans le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;, nous pouvons utiliser une colonne g√©n√©r√©e :&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create table Rental (
    ...
    Rental_Range txtzrange,
    /* Generated column */
    Rental_Duration integer always generated as (
        ceil(extract(epoch from upper(Rental_Range) - lower(Rantal_Range))) / (12 * 3600)) * 0.5
    ) stored,
    ...
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Dans PostgreSQL, seules les colonnes &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stores&lt;/code&gt; sont mises en ≈ìuvre, pour l‚Äôinstant, la donn√©e est donc calcul√©e et stock√©e √† chaque insertion ou modification des donn√©es.&lt;/p&gt;

&lt;p&gt;Et pour le calcul du prix ?
Il n‚Äôest pas possible d‚Äôutiliser une colonne g√©n√©r√©e √† partir d‚Äôune autre colonne g√©n√©r√©e.
Pour ce cas, nous pouvons utiliser un trigger qui viendra enregistrer le prix si celui-ci n‚Äôest pas d√©j√† pr√©sent (pour √©viter de le recalculer).&lt;/p&gt;

&lt;h3 id=&quot;listennotify&quot;&gt;Listen/Notify&lt;/h3&gt;

&lt;p&gt;On nous pr√©sente les fonctionnalit√©s de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LISTEN&lt;/code&gt; et de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOTIFY&lt;/code&gt; qui permet de faire de la gestion d‚Äô√©v√©nement. Par contre, cela n√©cessite que l‚Äôapplication qui √©coute, boucle infiniment pour recevoir les notifications.&lt;/p&gt;

&lt;h3 id=&quot;returning&quot;&gt;Returning&lt;/h3&gt;

&lt;p&gt;L‚Äôinstruction &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RETURNING&lt;/code&gt;, que l‚Äôon peut ajouter dans un insert ou un update, permet de retourner (une partie ou) les donn√©es modifi√©es.
Un use-case int√©ressant fut pr√©sent√© avec des insertions en chaine dans une transaction avec des Common Table Expressions et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RETURNING&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;lintelligence-artificielle-g√©n√©rative--une-√©volution-mais-pas-une-magie&quot;&gt;L‚Äôintelligence artificielle g√©n√©rative : une √©volution, mais pas une magie&lt;/h2&gt;

&lt;p&gt;Plusieurs conf√©rences ont parl√© d‚Äôintelligence artificielle et nous avons eu l‚Äôopportunit√© d‚Äôassister √† quelques-unes d‚Äôentre-elles.
Si cette technologie est d√©j√† sur toutes les l√®vres, les conf√©rences ont permis d‚Äôen savoir plus sur les limites, et surtout les responsabilit√©s qui viennent avec son utilisation.&lt;/p&gt;

&lt;h3 id=&quot;une-ia-pas-si-cr√©ative&quot;&gt;Une IA pas si cr√©ative&lt;/h3&gt;

&lt;p&gt;Dans ce keynote, Luc Julia (conf√©rencier de la keynote ‚Äú&lt;em&gt;L‚ÄôIA n‚Äôexiste pas&lt;/em&gt;‚Äù, co-concepteur de Siri et auteur du livre &lt;em&gt;‚ÄúIA g√©n√©ratives, pas cr√©atives‚Äù&lt;/em&gt;) insiste sur un point : l‚ÄôIA g√©n√©rative, aussi impressionnante soit-elle, &lt;strong&gt;n‚Äôest pas cr√©ative&lt;/strong&gt;.&lt;br /&gt;
Elle g√©n√®re du contenu, oui. Mais c‚Äôest &lt;strong&gt;le prompt&lt;/strong&gt;, c‚Äôest-√†-dire la mani√®re dont on lui pose une question ou une demande, qui guide le r√©sultat. Autrement dit, &lt;strong&gt;la cr√©ativit√© reste humaine&lt;/strong&gt;.&lt;br /&gt;
L‚ÄôIA devient alors un outil d‚Äôextension de nos capacit√©s plut√¥t qu‚Äôun substitut.&lt;/p&gt;

&lt;h3 id=&quot;mais-peut-√™tre-un-peu-plus-consciente-de-son-environnement-&quot;&gt;Mais peut-√™tre un peu plus ‚Äúconsciente‚Äù de son ‚Äúenvironnement‚Äù ?&lt;/h3&gt;

&lt;p&gt;La notion de conscience de l‚ÄôIA a fait jaser les m√©dias qui se sont empress√©s de cultiver les mythes de la fiction. Pour Luc Julia, il est tr√®s formel : Non, l‚ÄôIA n‚Äôa pas de conscience √† proprement parler.
Il va d‚Äôailleurs plus loin en expliquant que l‚ÄôIntelligence G√©n√©rale Artificielle (AGI en anglais), celle qui serait capable de penser et d‚Äôagir par elle-m√™me, celle que veut d√©velopper Elon Musk ou Sam Altman, n‚Äôest rien d‚Äôautre qu‚Äôune science-fiction qui ne se produira jamais.&lt;/p&gt;

&lt;p&gt;De son c√¥t√©, lors de sa keynote &lt;em&gt;‚ÄúLes LLM r√™vent-ils de cavaliers √©lectriques‚Äù&lt;/em&gt;, Thibaut Giraud met un peu plus d‚Äôeau dans son vin et tente de d√©montrer que l‚ÄôIA, depuis la version 3 de ChatGPT, peut √™tre capable de se repr√©senter une situation.&lt;br /&gt;
Il donne l‚Äôexemple d‚Äôune suite de caract√®res pour laquelle il peut √™tre difficile pour un humain de pr√©voir la suite. Les plus aguerris se rendront tout de m√™me compte qu‚Äôil s‚Äôagit d‚Äôune suite de coups aux √©checs.&lt;br /&gt;
L√† o√π il est difficile pour un humain ‚Äúlambda‚Äù, c‚Äôest-√†-dire sans expertise du jeu d‚Äô√©checs, de se repr√©senter l‚Äô√©tat actuel d‚Äôune partie et donc de pouvoir pr√©voir le prochain coup l√©gal √† partir de cette suite de caract√®res, certains mod√®les en sont eux capables (notamment le cas depuis la version 3 de ChatGPT).&lt;br /&gt;
Il continue sa pr√©sentation en montrant que l‚ÄôIA peut aussi s‚Äôadapter au niveau de son adversaire et que selon le niveau, elle jouera oui ou non √† un haut Elo.&lt;br /&gt;
Le classement de l‚ÄôIA aux √©checs durant les tests serait d‚Äôenviron &lt;strong&gt;1500 Elo&lt;/strong&gt; (version 4o de ChatGPT) √† &lt;strong&gt;1800 Elo&lt;/strong&gt; (version 3 de ChatGPT).&lt;/p&gt;

&lt;h3 id=&quot;plus-rapide--mais-pas-sans-risque&quot;&gt;Plus rapide ‚Äî mais pas sans risque&lt;/h3&gt;

&lt;p&gt;Gr√¢ce √† sa capacit√© √† g√©n√©rer du contenu √† partir de 1200 milliards de param√®tres, une IA peut souvent g√©n√©rer du contenu plus rapidement et parfois mieux que nous‚Ä¶ &lt;strong&gt;√† condition de l‚Äôencadrer&lt;/strong&gt;.&lt;br /&gt;
Car, comme rappel√© pendant la conf√©rence, &lt;strong&gt;36% de ce que l‚ÄôIA peut g√©n√©rer est faux ou approximatif&lt;/strong&gt;. Cela s‚Äôexplique en partie parce qu‚Äôelle se base sur des informations glan√©es sur l‚Äôensemble d‚Äôinternet, y compris des sources douteuses.&lt;/p&gt;

&lt;p&gt;Autre fait important : les IA peuvent produire des r√©ponses totalement d√©connect√©es de la r√©alit√© ‚Äî un ph√©nom√®ne baptis√© &lt;strong&gt;‚Äúhallucination‚Äù&lt;/strong&gt;, d√ª au fait que l‚ÄôIA a pour objectif de r√©pondre absolument √† la demande utilisateur, peu importe si elle doit ‚Äúinventer‚Äù une r√©alit√©.
C‚Äô√©tait notamment le cas en Avril 2023 pour un avocat au barreau de New York qui s‚Äôest servi de l‚ÄôIA pour donner sa meilleure plaidoirie, mais dont les donn√©es r√©f√©r√©es n‚Äôexistent pas.
Luc Julia nous a donn√© un autre exemple lorsqu‚Äôil a demand√© √† une IA de g√©n√©rer son autobiographie : l‚Äôoutil lui a invent√© quelques parcours professionnels, et l‚Äôorateur a alors pu apprendre qu‚Äôil avait √©t√© √† des postes √† hautes responsabilit√©s dans des entreprises dans lesquelles il n‚Äôavait jamais mis les pieds.&lt;/p&gt;

&lt;p&gt;D‚Äôo√π l‚Äôimportance de &lt;strong&gt;v√©rifier chaque r√©ponse&lt;/strong&gt; et de comprendre que la pertinence est souvent &lt;strong&gt;subjective&lt;/strong&gt; : l‚ÄôIA donnera une r√©ponse qui ‚Äúsemble juste‚Äù en fonction de la question pos√©e, mais ce n‚Äôest pas forc√©ment la v√©rit√©.&lt;/p&gt;

&lt;h3 id=&quot;une-adoption-√©clair&quot;&gt;Une adoption √©clair&lt;/h3&gt;

&lt;p&gt;Alors qu‚Äôune technologie met g√©n√©ralement &lt;strong&gt;entre 5 et 10 ans&lt;/strong&gt; √† atteindre sa maturit√©, l‚ÄôIA g√©n√©rative a pulv√©ris√© tous les compteurs : &lt;strong&gt;2 mois pour atteindre le pic de buzz, 18 mois pour s‚Äôinstaller massivement dans les usages&lt;/strong&gt; (sur la courbe du Hype de Gartner).&lt;br /&gt;
Une vitesse qui illustre √† la fois son potentiel et le besoin urgent de structurer son utilisation.&lt;/p&gt;

&lt;h3 id=&quot;vers-plus-de-pertinence-avec-le-fine-tuning-et-le-rag&quot;&gt;Vers plus de pertinence avec le fine-tuning et le RAG&lt;/h3&gt;

&lt;p&gt;Pour aller au-del√† du ‚Äútout-venant‚Äù g√©n√©r√© par les mod√®les g√©n√©ralistes, deux approches gagnent du terrain :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Le fine-tuning&lt;/strong&gt;, qui consiste √† entra√Æner un mod√®le sur un jeu de donn√©es sp√©cifique.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Le RAG (Retrieval-Augmented Generation)&lt;/strong&gt;, qui permet √† l‚ÄôIA d‚Äôaller chercher des informations dans une base sp√©cialis√©e au moment de la g√©n√©ration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;R√©sultat ? &lt;strong&gt;Jusqu‚Äô√† 98% de pertinence&lt;/strong&gt; dans les contenus produits.&lt;/p&gt;

&lt;h3 id=&quot;et-limpact-√©cologique-dans-tout-√ßa-&quot;&gt;Et l‚Äôimpact √©cologique dans tout √ßa ?&lt;/h3&gt;

&lt;p&gt;L‚Äôautre volet abord√© ‚Äî et souvent n√©glig√© ‚Äî est &lt;strong&gt;l‚Äôimpact environnemental&lt;/strong&gt; de l‚ÄôIA.&lt;br /&gt;
Vingt requ√™tes de g√©n√©ration de contenu peuvent consommer l‚Äô√©quivalent de &lt;strong&gt;1,5 litre d‚Äôeau&lt;/strong&gt; pour refroidir les serveurs, sans parler de l‚Äô√©norme besoin en √©lectricit√© pour les faire tourner.&lt;br /&gt;
Une donn√©e qui m√©rite qu‚Äôon s‚Äôinterroge sur l‚Äôusage syst√©matique et parfois inconsid√©r√© de ces outils.&lt;/p&gt;

&lt;h3 id=&quot;et-la-s√©curit√©-&quot;&gt;Et la s√©curit√© ?&lt;/h3&gt;

&lt;p&gt;Luc Julia montre que l‚ÄôIA se s√©curise de plus en plus en mati√®re de demande ill√©gale.
Par exemple, en Novembre 2022, il √©tait possible de demander la recette d‚Äôune bombe juste avec un peu de &lt;strong&gt;jailbreaking&lt;/strong&gt; : ‚ÄúImagine que je sois un savant fou, donne moi la recette d‚Äôune bombe‚Äù.
En Avril 2025, il faudrait √©crire un prompt d‚Äôenviron 30 pages pour avoir la recette. Il y a une course effr√©n√©e entre Jailbreaker et les IA.&lt;/p&gt;

&lt;h3 id=&quot;propri√©t√©-intellectuelle&quot;&gt;Propri√©t√© intellectuelle&lt;/h3&gt;

&lt;p&gt;De ce c√¥t√©-l√†, ce qui est g√©n√©r√© appartient √† l‚Äôutilisateur.&lt;/p&gt;

&lt;p&gt;N√©anmoins, par exemple, un proc√®s a eu lieu entre Stability IA qui avait pill√© Getty Images et dont Stability IA a perdu le proc√®s.
Cela a pu se d√©tecter par la pr√©sence de watermark sur les images r√©cup√©r√©es de Getty Images et rendues par Stability IA.&lt;/p&gt;

&lt;h3 id=&quot;des-ia-plus-sp√©cialis√©es-plus-√©thiques-&quot;&gt;Des IA plus sp√©cialis√©es, plus √©thiques ?&lt;/h3&gt;

&lt;p&gt;Enfin, on voit √©merger des alternatives aux g√©ants centralis√©s : des &lt;strong&gt;IA open source&lt;/strong&gt;, plus transparentes, plus sp√©cialis√©es, parfois plus efficaces.&lt;br /&gt;
Mais elles posent aussi de nouveaux d√©fis en mati√®re de s√©curit√©, notamment le &lt;strong&gt;jailbreaking&lt;/strong&gt; (d√©tournement des protections des IA) et la capacit√© √† identifier les contenus g√©n√©r√©s pour √©viter les usages malveillants ou trompeurs.&lt;/p&gt;

&lt;h3 id=&quot;comment-le-savon-de-marseille-explique-matrix-et-notre-monde-dillusions&quot;&gt;Comment le savon de Marseille explique Matrix (et notre monde d‚Äôillusions)&lt;/h3&gt;

&lt;p&gt;Lors de sa keynote &lt;em&gt;‚ÄúLangage IA et propagande‚Äù&lt;/em&gt;, Elodie Mielczareck nous parle de la s√©miologie linguistique en proposant une analogie brillante avec le savon de Marseille pour nous aider √† comprendre comment les signes √©voluent et se d√©tachent peu √† peu du r√©el.
Imaginons-nous dans l‚Äôascenseur des signes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Tout commence au niveau -1 : h√©ritier de la philosophie des Lumi√®res, le signe entretient encore un lien direct avec son r√©f√©rent.&lt;br /&gt;
‚Üí Par analogie, √† ce niveau, le savon de Marseille est fabriqu√© de fa√ßon authentique, brut et fid√®le √† la tradition.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mais au niveau -2, la r√©alit√© commence √† se brouiller : le signe se pervertit, il informe sans toujours garantir la v√©rit√©.&lt;br /&gt;
‚Üí C‚Äôest le temps de l‚Äôinformation, de l‚Äôimitation habile ‚Äî on se retrouve alors avec un savon qui ressemble au v√©ritable, mais qui trahit subtilement son origine.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Au niveau -3, le signe simule carr√©ment : il raconte une histoire s√©duisante, au point d‚Äôeffacer le r√©el derri√®re le narratif.&lt;br /&gt;
‚Üí Comme un ‚ÄúPetit Marseillais‚Äù dans son emballage plastique au parfum des √Æles, loin de l‚Äôartisanat d‚Äôantan, et o√π il ne reste du savon de Marseille qu‚Äôune √©tiquette de marketing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enfin, au niveau -4, le r√©el dispara√Æt totalement au profit d‚Äôun hyperr√©el : le signe ne renvoie plus qu‚Äô√† lui-m√™me, cr√©ant un monde fictif dans lequel on √©volue sans m√™me s‚Äôen rendre compte ‚Äî exactement comme dans &lt;em&gt;Matrix&lt;/em&gt;, o√π nos identit√©s factices semblent plus vraies que nature.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour aller plus loin dans son explication, elle donne l‚Äôexemple d‚Äôune influenceuse qui a r√©ussi √† obtenir plusieurs likes sur des posts pour lesquels l‚ÄôIA avait g√©n√©r√© tout le contenu.&lt;br /&gt;
Elle cite ensuite Jean Baudrillard, qui d√©testait le film &lt;em&gt;Matrix&lt;/em&gt;, car pour lui ce qui est g√™nant, c‚Äôest la confusion entre l‚Äôillusion et la r√©alit√©.&lt;/p&gt;

&lt;h3 id=&quot;cas-de-mise-en-situation-en-d√©veloppement-dapplication--tdd--architecture-hexagonale&quot;&gt;Cas de mise en situation en d√©veloppement d‚Äôapplication : TDD &amp;amp; Architecture Hexagonale&lt;/h3&gt;
&lt;p&gt;Plusieurs conf√©rences ont montr√© comment utiliser l‚ÄôIA dans le c≈ìur du d√©veloppement de nos applications.&lt;/p&gt;

&lt;p&gt;Dans l‚Äôune d‚Äôentre-elle, Florine Chevrier et Cl√©ment Virieux montrent l‚Äôusage de l‚ÄôIA g√©n√©rative dans le d√©veloppement d‚Äôapplications en architecture hexagonale avec approche TDD.
Les intervenants ont mis en avant que si l‚ÄôIA ne remplacera pas enti√®rement les d√©veloppeurs, elle peut n√©anmoins √™tre un outil puissant lorsqu‚Äôon sait l‚Äôutiliser efficacement, notamment en l‚Äôaccompagnant d‚Äôune approche it√©rative et de tests de qualit√©.
Le d√©fi majeur r√©side dans l‚Äô√©cart entre la rapidit√© de g√©n√©ration de code par l‚ÄôIA et les standards √©lev√©s du software craftsmanship.
Pour concilier les deux mondes, la strat√©gie repose sur l‚Äô√©criture de tests de composants (par exemple via Cypress pour le front-end) et de tests d‚Äôarchitecture hexagonale fournis √† l‚ÄôIA comme base de travail, le tout int√©gr√© dans des prompts structur√©s.
Des outils comme Cline (plugin VSCode) et Juni (JetBrains) permettent de dialoguer efficacement avec l‚ÄôIA, lan√ßant tests et navigation web tout en offrant un contr√¥le pr√©cis sur les modifications apport√©es au projet. OpenRouter facilite l‚Äôexp√©rimentation avec diff√©rents mod√®les IA, notamment Claude.
Les d√©veloppeurs doivent toutefois rester vigilants sur la gestion du contexte pour ma√Ætriser co√ªts et risques d‚Äôerreurs, en gardant des fen√™tres de contexte limit√©es et en utilisant des r√®gles personnalis√©es (Cline rules).
Malgr√© un investissement initial n√©cessaire pour monter en comp√©tence, l‚Äôapport de l‚ÄôIA dans une d√©marche TDD ou test-first, particuli√®rement sur de petits projets, offre un gain de productivit√© notable, √† condition de garder le contr√¥le sur les livrables finaux, d‚Äôo√π l‚Äôimportance de relecture et de validation humaine avant tout engagement du code.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;L‚ÄôIA g√©n√©rative n‚Äôest pas une baguette magique, mais un &lt;strong&gt;acc√©l√©rateur de productivit√©&lt;/strong&gt;.&lt;br /&gt;
Elle oblige √† repenser notre mani√®re de cr√©er, de questionner, de valider.
√Ä l‚Äôheure o√π elle s‚Äôint√®gre d√©j√† dans nos outils de d√©veloppement web, il est essentiel d‚Äôen comprendre les m√©canismes, les limites, et surtout, les impacts.&lt;br /&gt;
Parce qu‚Äôutiliser l‚ÄôIA, ce n‚Äôest pas juste &lt;strong&gt;lancer une requ√™te&lt;/strong&gt; ‚Äî c‚Äôest aussi &lt;strong&gt;savoir pourquoi, comment, et √† quel prix&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;les-cl√©s-de-larchitecture-pour-les-devs&quot;&gt;Les cl√©s de l‚Äôarchitecture pour les devs&lt;/h2&gt;

&lt;p&gt;Nous avons eu la chance d‚Äôassister √† la conf√©rence &lt;strong&gt;‚ÄúLes cl√©s de l‚Äôarchitecture pour les devs‚Äù&lt;/strong&gt;, anim√©e par &lt;strong&gt;Cyrille Martraire&lt;/strong&gt; et &lt;strong&gt;√âric Le Merdy&lt;/strong&gt;.
Une session riche et inspirante, pleine de conseils pratiques pour aborder l‚Äôarchitecture logicielle sans tomber dans les pi√®ges classiques.&lt;/p&gt;

&lt;h3 id=&quot;larchitecture-√ßa-sapprend-mais-diff√©remment&quot;&gt;L‚Äôarchitecture, √ßa s‚Äôapprend‚Ä¶ mais diff√©remment&lt;/h3&gt;

&lt;p&gt;Premi√®re claque : &lt;strong&gt;personne ne sait vraiment ce qu‚Äôest l‚Äôarchitecture&lt;/strong&gt;.
Les syst√®mes ont tellement √©volu√© ‚Äî cloud, modularit√©, distribution ‚Äî que l‚Äôincertitude est devenue la norme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cl√© : On ne saura jamais tout ‚Äî et ce n‚Äôest pas grave, l‚Äôincertitude est normale.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En tant que d√©veloppeurs, nous devons accepter cet inconfort. L‚Äôimportant, c‚Äôest de comprendre le besoin m√©tier avant tout.&lt;/p&gt;

&lt;h3 id=&quot;penser-probl√®me-avant-de-penser-solution&quot;&gt;Penser probl√®me avant de penser solution&lt;/h3&gt;

&lt;p&gt;En fil rouge, les conf√©renciers ont donn√© l‚Äôexemple d‚Äôun client qui demandait de r√©cup√©rer des fichiers toutes les 5 minutes et de les int√©grer toutes les 15 minutes.
Derri√®re cette demande se cachait en r√©alit√© un &lt;strong&gt;v√©ritable besoin d‚Äôagr√©gation, de monitoring et de r√©silience&lt;/strong&gt;.
Pour le comprendre, il a fallu creuser, poser des questions, reformuler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cl√© : Toujours identifier le v√©ritable probl√®me avant de penser solution.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Un diagramme de contexte a aid√© l‚Äô√©quipe √† clarifier tout cela.
L‚Äôexercice a aussi permis d‚Äôidentifier les attributs de qualit√© recherch√©s : &lt;strong&gt;performance, scalabilit√©, r√©silience&lt;/strong&gt;, etc.&lt;/p&gt;

&lt;p&gt;Exemple concret de ce qu‚Äôil fallait pouvoir int√©grer :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;40 000 capteurs&lt;/li&gt;
  &lt;li&gt;4 millions de donn√©es √† int√©grer toutes les 15 minutes&lt;/li&gt;
  &lt;li&gt;6 Go √† collecter dans un laps de temps serr√©&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cela impose tout de suite des choix techniques et architecturaux tr√®s pragmatiques.&lt;/p&gt;

&lt;p&gt;Il est cependant n√©cessaire de garder en t√™te plusieurs √©l√©ments avant de se lancer t√™te baiss√©e dans de la conception. En voici une liste non exhaustive :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;performance&lt;/li&gt;
  &lt;li&gt;√©lasticit√©&lt;/li&gt;
  &lt;li&gt;disponibilit√© / zero downtime&lt;/li&gt;
  &lt;li&gt;s√©curit√©&lt;/li&gt;
  &lt;li&gt;mise √† jour r√©guli√®re&lt;/li&gt;
  &lt;li&gt;extensibilit√©&lt;/li&gt;
  &lt;li&gt;d√©veloppement&lt;/li&gt;
  &lt;li&gt;productivit√©&lt;/li&gt;
  &lt;li&gt;co√ªts&lt;/li&gt;
  &lt;li&gt;recherche effectu√©e par le(s) d√©veloppeur(s)&lt;/li&gt;
  &lt;li&gt;contraintes r√©glementaires&lt;/li&gt;
  &lt;li&gt;accessibilit√©&lt;/li&gt;
  &lt;li&gt;d√©ployabilit√©&lt;/li&gt;
  &lt;li&gt;‚Ä¶&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;architecture--n√©gociation--p√©dagogie&quot;&gt;Architecture = n√©gociation + p√©dagogie&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cl√© : N√©gocier, √©duquer, parler aux gens.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Architecturer un syst√®me, ce n‚Äôest pas rester enferm√© dans sa tour d‚Äôivoire : c‚Äôest comprendre les enjeux, discuter avec le m√©tier, n√©gocier les d√©lais, expliquer les compromis.&lt;/p&gt;

&lt;p&gt;Par exemple : devoir anticiper les pannes, accepter des d√©lais de traitement l√©g√®rement plus longs pour un co√ªt plus faible, √©viter des choix h√¢tifs comme ‚Äúpasser au multi-threading‚Äù sans r√©flexion.&lt;/p&gt;

&lt;h3 id=&quot;modularit√©-pragmatique--entre-services-et-monolithes&quot;&gt;Modularit√© pragmatique : entre services et monolithes&lt;/h3&gt;

&lt;p&gt;Autre sujet passionnant abord√© durant cette conf√©rence : &lt;strong&gt;le d√©coupage&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;D√©couper selon le m√©tier (par domaine)&lt;/li&gt;
  &lt;li&gt;D√©couper techniquement (par responsabilit√©)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mais attention : &lt;strong&gt;deux sous-domaines ‚â† forc√©ment deux services&lt;/strong&gt;.
Parfois, un &lt;strong&gt;monolithe modulaire&lt;/strong&gt; reste une solution envisageable, plus simple et potentiellement plus efficace.&lt;/p&gt;

&lt;p&gt;Le d√©coupage doit se faire intelligemment, au bon niveau :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;M√©tier&lt;/li&gt;
  &lt;li&gt;Domaines&lt;/li&gt;
  &lt;li&gt;Modules&lt;/li&gt;
  &lt;li&gt;Technologies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dans leur exemple, il √©tait, √† ce moment de la r√©flexion, plus pertinent de penser √† un &lt;strong&gt;d√©coupage runtime&lt;/strong&gt; (au moment de l‚Äôex√©cution) qu‚Äôun d√©coupage de ‚Äúservice‚Äù pur.&lt;/p&gt;

&lt;h3 id=&quot;accepter-le-changement-comme-norme&quot;&gt;Accepter le changement comme norme&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cl√© : L‚Äôarchitecture n‚Äôest pas fig√©e.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Un syst√®me √©volue : les besoins, les charges et les contraintes changent. Il faut :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pr√©voir des options de changement √† bas co√ªt&lt;/li&gt;
  &lt;li&gt;Accepter d‚Äô√©chouer rapidement&lt;/li&gt;
  &lt;li&gt;Valider t√¥t et souvent (ex : mocks en prod pour valider sans tout exposer)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ici, le choix d‚Äôun syst√®me √† &lt;strong&gt;multi-instances&lt;/strong&gt; plut√¥t que d‚Äôun gros monolithe s‚Äôest impos√©. Mais ce nouveau choix am√®ne de nouveaux d√©fis :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Asynchronicit√©&lt;/li&gt;
  &lt;li&gt;Gestion des messages perdus, en d√©sordre ou dupliqu√©s (idempotence indispensable)&lt;/li&gt;
  &lt;li&gt;Gestion des quotas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Les conf√©renciers insistent sur l‚Äôimportance de &lt;strong&gt;penser ‚Äútrade-offs‚Äù&lt;/strong&gt;, d‚Äôutiliser le cloud quand √ßa a du sens, et surtout d‚Äô√©viter la complexit√© pr√©matur√©e.&lt;/p&gt;

&lt;h3 id=&quot;limportance-des-contrats&quot;&gt;L‚Äôimportance des contrats&lt;/h3&gt;

&lt;p&gt;Quand on expose des API ou des formats d‚Äô√©change, il est n√©cessaire de :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ne pas introduire de &lt;strong&gt;breaking change&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Toujours pr√©voir une √©volution douce.&lt;/li&gt;
  &lt;li&gt;Penser √† laisser les anciennes versions accessibles en cas d‚Äôerreur.&lt;/li&gt;
  &lt;li&gt;Consid√©rer qu‚Äôune API publi√©e &lt;strong&gt;n‚Äôappartient plus √† l‚Äô√©quipe&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cl√© : Les contrats sont la cl√© de la coordination entre syst√®mes et √©quipes.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;pratiquer-larchitecture-au-quotidien&quot;&gt;Pratiquer l‚Äôarchitecture au quotidien&lt;/h3&gt;

&lt;p&gt;Enfin, comment progresser ?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Capitaliser les d√©cisions via des &lt;strong&gt;ADR&lt;/strong&gt; (Architecture Decision Records).&lt;/li&gt;
  &lt;li&gt;Tester l‚Äôarchitecture (ex : outils comme &lt;strong&gt;ArchUnit&lt;/strong&gt;).&lt;/li&gt;
  &lt;li&gt;Timeboxer les r√©flexions pour apprendre vite.&lt;/li&gt;
  &lt;li&gt;Se confronter au groupe pour d√©personnaliser les id√©es.&lt;/li&gt;
  &lt;li&gt;Rester simple, √©viter le dogmatisme (soyons ‚Äú&lt;strong&gt;catmatic&lt;/strong&gt;‚Äù et non ‚Äú&lt;strong&gt;dogmatic&lt;/strong&gt;‚Äù comme ils l‚Äôont joliment dit üòÑ).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En architecture logicielle, on ne construit pas seulement un logiciel, &lt;strong&gt;on construit aussi une organisation humaine&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;pour-finir&quot;&gt;Pour finir&lt;/h3&gt;

&lt;p&gt;M√™me si tout a chang√© avec le cloud, le distribu√© et la modularit√©, &lt;strong&gt;les fondamentaux restent les m√™mes&lt;/strong&gt;, il est question de :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Couplage et coh√©sion&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Contrats&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Modularit√©&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finalement, l‚Äôarchitecture n‚Äôest pas une montagne inaccessible.
C‚Äôest un chemin fait de &lt;strong&gt;baby steps&lt;/strong&gt;, de &lt;strong&gt;r√©flexes simples&lt;/strong&gt; et de &lt;strong&gt;beaucoup de communication&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;‚ÄúOn vieillit, mais pas nos attitudes.‚Äù&lt;/strong&gt;&lt;br /&gt;
Gardons la curiosit√©, le go√ªt du simple et l‚Äôenvie d‚Äôapprendre. Toujours.&lt;/p&gt;

&lt;h2 id=&quot;comprendre-oauth2-et-openid-connect--diff√©rences-fonctionnement-et-bonnes-pratiques&quot;&gt;Comprendre OAuth2 et OpenID Connect : diff√©rences, fonctionnement et bonnes pratiques&lt;/h2&gt;

&lt;p&gt;Aujourd‚Äôhui, de nombreuses applications web ont besoin de g√©rer l‚Äô&lt;strong&gt;authentification&lt;/strong&gt; et l‚Äô&lt;strong&gt;autorisation&lt;/strong&gt; de mani√®re s√©curis√©e et standardis√©e.
Deux frameworks dominent ce domaine : &lt;strong&gt;OAuth2&lt;/strong&gt; et &lt;strong&gt;OpenID Connect (OIDC)&lt;/strong&gt;.
Voici une synth√®se bas√©e sur les conf√©rences de Daniel Garnier-Moiroux (‚Äú&lt;em&gt;OAuth2 &amp;amp; OpenID: sous le capot&lt;/em&gt;‚Äù) et Guillaume Chervet (‚Äú&lt;em&gt;Pragmatic OpenID Connect&lt;/em&gt;‚Äù).&lt;/p&gt;

&lt;h3 id=&quot;oauth2--lautorisation-avant-tout&quot;&gt;OAuth2 : l‚Äôautorisation avant tout&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OAuth2&lt;/strong&gt; est avant tout un &lt;strong&gt;framework d‚Äôautorisation&lt;/strong&gt;.
Il permet de donner des &lt;strong&gt;permissions&lt;/strong&gt; √† une application pour acc√©der aux ressources d‚Äôun utilisateur, sans exposer ses identifiants.&lt;/p&gt;

&lt;p&gt;Quelques points cl√©s sur OAuth2 :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;C‚Äôest un &lt;strong&gt;ensemble de sp√©cifications&lt;/strong&gt; publi√©es sur &lt;a href=&quot;https://oauth.net/specs/&quot;&gt;oauth.net/specs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Il repose sur l‚Äôutilisation de &lt;strong&gt;jetons&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt;) pour acc√©der aux APIs.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Important&lt;/strong&gt; : OAuth2 ne g√®re pas l‚Äô&lt;strong&gt;identit√©&lt;/strong&gt; de l‚Äôutilisateur. Il autorise simplement l‚Äôacc√®s √† certaines ressources.&lt;/li&gt;
  &lt;li&gt;Chaque mise en ≈ìuvre d‚ÄôOAuth2 est l√©g√®rement diff√©rente, car certains comportements ne sont pas strictement standardis√©s.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;openid-connect-oidc--lauthentification-standardis√©e&quot;&gt;OpenID Connect (OIDC) : l‚Äôauthentification standardis√©e&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OpenID Connect&lt;/strong&gt; est une &lt;strong&gt;extension&lt;/strong&gt; de OAuth2 qui vise cette fois l‚Äô&lt;strong&gt;authentification&lt;/strong&gt;.
L‚Äôobjectif est clair : permettre aux utilisateurs de se connecter √† diff√©rents sites via un compte unique (&lt;strong&gt;SSO&lt;/strong&gt; ‚Äì Single Sign-On).&lt;/p&gt;

&lt;p&gt;Caract√©ristiques d‚ÄôOIDC :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Bas√© sur OAuth2 mais ajoute une couche d‚Äô&lt;strong&gt;identit√©&lt;/strong&gt; via un jeton sp√©cifique : le &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_token&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Standardise l‚ÄôAPI et le format des donn√©es retourn√©es.&lt;/li&gt;
  &lt;li&gt;Utilise des &lt;strong&gt;JSON Web Tokens (JWT)&lt;/strong&gt; pour transmettre les informations sur l‚Äôutilisateur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le &lt;strong&gt;flux de base&lt;/strong&gt; dans OIDC :&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;L‚Äôapplication redirige l‚Äôutilisateur vers un fournisseur d‚Äôidentit√© (ex : Google) pour obtenir un &lt;strong&gt;code d‚Äôautorisation&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Ce &lt;strong&gt;code&lt;/strong&gt; est renvoy√© √† l‚Äôapplication.&lt;/li&gt;
  &lt;li&gt;Le code est √©chang√© contre des &lt;strong&gt;jetons&lt;/strong&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_token&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;L‚Äôapplication &lt;strong&gt;lit et v√©rifie&lt;/strong&gt; les informations contenues dans le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_token&lt;/code&gt; (gr√¢ce √† des √©tapes de &lt;strong&gt;cryptographie&lt;/strong&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;focus-sur-un-type-de-flux--pkce&quot;&gt;Focus sur un type de flux : PKCE&lt;/h3&gt;

&lt;p&gt;Lorsqu‚Äôune application front-end veut s‚Äôauthentifier en toute s√©curit√©, elle utilise le &lt;strong&gt;flux PKCE (Proof Key for Code Exchange)&lt;/strong&gt;.
C‚Äôest devenu le flux recommand√© pour les applications publiques sans client secret.&lt;/p&gt;

&lt;p&gt;Pourquoi PKCE ?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Il prot√®ge contre des attaques comme l‚Äôinterception du code d‚Äôautorisation.&lt;/li&gt;
  &lt;li&gt;Introduit des m√©canismes suppl√©mentaires comme le &lt;strong&gt;code challenge&lt;/strong&gt; et le &lt;strong&gt;nonce&lt;/strong&gt; (anti-rejeu et CSRF).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;√Ä configurer&lt;/strong&gt; pour utiliser OIDC c√¥t√© client :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Client ID&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Redirect URI&lt;/strong&gt; (o√π revenir apr√®s authentification)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scope&lt;/strong&gt; (par exemple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openid profile email&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authority&lt;/strong&gt; (URL du serveur d‚Äôautorisation)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;s√©curiser-lauthentification-c√¥t√©-client&quot;&gt;S√©curiser l‚Äôauthentification c√¥t√© client&lt;/h3&gt;

&lt;p&gt;Le front-end est souvent une cible vuln√©rable. Voici deux couches de protection √©voqu√©es :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. CSP (Content Security Policy)&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Permet de limiter les ressources pouvant √™tre ex√©cut√©es sur la page.&lt;/li&gt;
  &lt;li&gt;Prot√®ge contre les attaques &lt;strong&gt;XSS&lt;/strong&gt; qui pourraient voler les jetons.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Service Worker comme Proxy&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Utiliser un &lt;strong&gt;service worker&lt;/strong&gt; pour agir comme un proxy entre l‚Äôapplication et les serveurs.&lt;/li&gt;
  &lt;li&gt;Permet de &lt;strong&gt;prot√©ger les jetons&lt;/strong&gt; et d‚Äô&lt;strong&gt;offusquer les cl√©s&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Attention : les services workers d√©pendent de la session du navigateur. Un m√©canisme comme le &lt;strong&gt;silent sign-in&lt;/strong&gt; est parfois n√©cessaire pour r√©cup√©rer un √©tat authentifi√© de mani√®re transparente.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;authentification-c√¥t√©-serveur--le-mod√®le-bff&quot;&gt;Authentification c√¥t√© serveur : le mod√®le BFF&lt;/h3&gt;

&lt;p&gt;Une autre approche consiste √† externaliser compl√®tement la gestion des jetons c√¥t√© serveur avec un mod√®le &lt;strong&gt;BFF (Backend For Frontend)&lt;/strong&gt; :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Le serveur backend √©change directement les codes contre des jetons.&lt;/li&gt;
  &lt;li&gt;Le front-end ne voit jamais les &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;refresh_token&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Utilisation possible de &lt;strong&gt;cookies&lt;/strong&gt; pour transporter l‚Äô√©tat de session.&lt;/li&gt;
  &lt;li&gt;Plus s√©curis√©, mais n√©cessite une infrastructure serveur plus complexe (stockage s√©curis√©, rotation des jetons, etc.).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;techniques-avanc√©es--dpop-et-s√©curisation-des-jetons&quot;&gt;Techniques avanc√©es : DPoP et s√©curisation des jetons&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;DPoP (Demonstration of Proof of Possession)&lt;/strong&gt; est une technique r√©cente pour renforcer OAuth2 :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Au lieu d‚Äôenvoyer un simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authorization: Bearer &amp;lt;token&amp;gt;&lt;/code&gt;, le client prouve qu‚Äôil d√©tient une &lt;strong&gt;cl√© priv√©e&lt;/strong&gt; li√©e au jeton.&lt;/li&gt;
  &lt;li&gt;Utilisation d‚Äôun &lt;strong&gt;en-t√™te DPoP&lt;/strong&gt; qui contient un JWT sign√© avec la cl√© priv√©e.&lt;/li&gt;
  &lt;li&gt;Cela limite l‚Äôimpact du vol d‚Äôun &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access_token&lt;/code&gt; car il ne sera utilisable qu‚Äôavec la cl√© correcte.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un service worker peut aussi stocker cette cl√© priv√©e pour encore mieux s√©curiser les communications.&lt;/p&gt;

&lt;h3 id=&quot;oidc-et-keycloak&quot;&gt;OIDC et Keycloak&lt;/h3&gt;

&lt;p&gt;Dans de nombreux projets, on utilise des solutions pr√™tes √† l‚Äôemploi comme &lt;strong&gt;Keycloak&lt;/strong&gt; pour jouer le r√¥le de serveur OIDC :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Keycloak g√®re l‚Äôauthentification, l‚Äôautorisation et la gestion des sessions utilisateurs.&lt;/li&gt;
  &lt;li&gt;Il permet de personnaliser la s√©curit√© en fonction des besoins : applications simples ou syst√®mes critiques.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion-1&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OAuth2&lt;/strong&gt; et &lt;strong&gt;OpenID Connect&lt;/strong&gt; sont compl√©mentaires : l‚Äôun donne acc√®s aux ressources, l‚Äôautre v√©rifie qui vous √™tes.
Mais leur bonne impl√©mentation n√©cessite de comprendre les flux, les menaces, et d‚Äôadapter la s√©curit√© selon la sensibilit√© de votre application.&lt;/p&gt;

&lt;p&gt;Comme le disait Guillaume Chervet : &lt;strong&gt;‚ÄúEn s√©curit√©, tout est une question de curseur.‚Äù&lt;/strong&gt;&lt;br /&gt;
Un blog personnel n‚Äôaura pas les m√™mes besoins qu‚Äôune application bancaire !&lt;/p&gt;

&lt;h2 id=&quot;lobservabilit√©-nest-plus-un-luxe--cest-une-n√©cessit√©&quot;&gt;L‚Äôobservabilit√© n‚Äôest plus un luxe ‚Äî c‚Äôest une n√©cessit√©&lt;/h2&gt;
&lt;p&gt;√Ä travers trois talks tr√®s compl√©mentaires, une √©vidence s‚Äôimpose : dans nos syst√®mes modernes distribu√©s, l‚Äôobservabilit√© est devenue une comp√©tence centrale pour les √©quipes tech, et plus seulement un sujet d‚Äôops.
Que ce soit quand la prod plante sans pr√©venir, quand un bug front masque un probl√®me backend, ou quand un nouveau service critique est mis en ligne, il faut pouvoir r√©pondre rapidement √† une seule question : ‚ÄúQue se passe-t-il vraiment dans mon syst√®me ?‚Äù
Les conf√©rences ont explor√© diff√©rents angles :&lt;/p&gt;

&lt;h3 id=&quot;lobservabilit√©-pour-les-devs--outils-cl√©-pour-survivre-quand-la-prod-plantera---takima&quot;&gt;‚ÄúL‚ÄôObservabilit√© pour les devs : outils-cl√© pour survivre quand la prod plantera‚Äù - Takima&lt;/h3&gt;
&lt;p&gt;Dans cette premi√®re conf√©rence, les conf√©renciers ont mis en place une stack compl√®te d‚Äôobservabilit√© avec des outils open source en seulement 45 minutes.
Ils ont utilis√© OpenTelemetry pour la collecte des logs, des m√©triques et des traces, permettant ainsi de diagnostiquer rapidement et efficacement les probl√®mes en production.
Toutes ces donn√©es ont √©t√© int√©gr√©es dans l‚Äôoutil SigNoz afin d‚Äôavoir une vue compl√®te de leur syst√®me.&lt;/p&gt;

&lt;h3 id=&quot;rum--otel--laccord-parfait-pour-lobservabilit√©-de-bout-en-bout----capgeminisogeti&quot;&gt;‚ÄúRUM &amp;amp; OTEL : l‚Äôaccord parfait pour l‚Äôobservabilit√© de bout en bout ?‚Äù - Capgemini/Sogeti&lt;/h3&gt;
&lt;p&gt;Cette seconde conf√©rence nous a montr√© l‚Äôimportance de lier les donn√©es collect√©es c√¥t√© utilisateur (via le Real User Monitoring - RUM) aux √©v√©nements backend gr√¢ce √† OpenTelemetry.
Cela permet d‚Äôobtenir une vue unifi√©e et compl√®te √† travers toutes les couches de l‚Äôinfrastructure.
Non seulement cela facilite la compr√©hension des probl√®mes rencontr√©s par les utilisateurs, mais cela aide aussi √† localiser plus pr√©cis√©ment les causes des d√©faillances, qu‚Äôelles soient techniques ou fonctionnelles.&lt;/p&gt;

&lt;h3 id=&quot;les-m√©triques-sont-pr√©cieuses-mais-savoir-quoi-en-faire-lest-encore-plus----manomano&quot;&gt;‚ÄúLes m√©triques sont pr√©cieuses, mais savoir quoi en faire l‚Äôest encore plus üí™‚Äù - ManoMano&lt;/h3&gt;
&lt;p&gt;Dans la derni√®re conf√©rence, le Staff Software Engineer de ManoMano nous a montr√© qu‚Äôil est essentiel de savoir interpr√©ter et structurer ses m√©triques pour avoir un impact r√©el.
Lors de la migration de leur tunnel de paiement, il √©tait crucial de disposer d‚Äôune observabilit√© proactive pour pouvoir r√©agir rapidement aux incidents üí∏.
Pour cela, ils ont r√©fl√©chi en amont √† quelles m√©triques devaient d√©clencher des alertes, et comment les adapter √† leurs besoins sp√©cifiques (a-t-on vraiment besoin d‚Äô√™tre alert√© √† chaque 404 ?).&lt;/p&gt;

&lt;p&gt;L‚Äôobservabilit√© ne se r√©sume pas √† brancher un dashboard : c‚Äôest une d√©marche, une fa√ßon de penser l‚Äôarchitecture, le d√©veloppement et l‚Äôexploitation.
Cela passe par des choix d‚Äôoutils, oui, mais surtout par une vraie culture d‚Äô√©quipe : choisir les bons signaux, d√©finir les bons seuils, formuler des alertes compr√©hensibles, et donner √† chaque personne ‚Äî dev, ops ou astreinte ‚Äî les moyens d‚Äôagir vite, bien, et avec le contexte n√©cessaire.&lt;/p&gt;

&lt;p&gt;En r√©sum√© : l‚Äôobservabilit√©, c‚Äôest la capacit√© √† comprendre son syst√®me sans t√¢tonner.
Et dans un monde de microservices, de cloud et d‚Äôinterd√©pendances complexes, c‚Äôest tout simplement vital.&lt;/p&gt;

&lt;h2 id=&quot;aerospike-chez-criteo--performance-extr√™me-et-simplicit√©-√†-l√©chelle&quot;&gt;Aerospike chez Criteo : performance extr√™me et simplicit√© √† l‚Äô√©chelle&lt;/h2&gt;

&lt;p&gt;Dans le monde de la publicit√© en ligne, la vitesse est une question de survie.
Lors de son talk √† Devoxx France 2025, Peter, responsable de l‚Äô√©quipe NoSQL chez Criteo, a partag√© un retour d‚Äôexp√©rience captivant sur l‚Äôutilisation d‚ÄôAerospike comme base de donn√©es cl√©/valeur.
L‚Äôobjectif : alimenter, une plateforme de d√©cision en temps r√©el capable de r√©pondre √† plus de 300 millions de requ√™tes par seconde avec une latence moyenne inf√©rieure √† 1 ms.&lt;/p&gt;

&lt;p&gt;Pour relever ce d√©fi, Criteo a progressivement consolid√© son architecture autour d‚ÄôAerospike.
Ce choix leur a permis d‚Äôatteindre des niveaux de performance impressionnants tout en simplifiant leur stack technique.
En s‚Äôappuyant sur les forces d‚ÄôAerospike : stockage hybride, r√©plication robuste, distribution intelligente des donn√©es.
L‚Äô√©quipe a gagn√© en fiabilit√© et en efficacit√© op√©rationnelle. Un t√©moignage inspirant sur la fa√ßon dont des choix d‚Äôarchitecture bien assum√©s peuvent transformer une contrainte de performance en avantage strat√©gique.&lt;/p&gt;</content><author><name>[&quot;p_rambaud&quot;, &quot;f_ferriere&quot;, &quot;g_damour&quot;, &quot;b_colin&quot;]</name></author><category term="devoxx" /><category term="conference" /><category term="event" /><category term="backend" /><category term="go" /><category term="kubernetes" /><category term="github" /><category term="IA" /><category term="openid" /><category term="oauth2" /><category term="architecture" /><summary type="html">Le Devoxx est un √©v√©nement incontournable pour les d√©veloppeurs et les professionnels de la technologie, qui a eu lieu du 16 avril 2025 au 18 avril 2025 au Palais des Congr√®s de Paris.</summary></entry><entry><title type="html">How we made our apps more accessible on SmartTVs üì∫</title><link href="https://tech.bedrockstreaming.com/2025/02/26/tvjs-accessibility.html" rel="alternate" type="text/html" title="How we made our apps more accessible on SmartTVs üì∫" /><published>2025-02-26T00:00:00+00:00</published><updated>2025-02-26T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2025/02/26/tvjs-accessibility</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2025/02/26/tvjs-accessibility.html">&lt;p&gt;Accessibility is at the heart of our concerns, at Bedrock Streaming we work hard to make our applications accessible to everyone.
In this article, I‚Äôm going to share with you how my team and I improved our accessibility score of our SmartTV apps by 18% in just a few months!
This improvement is even more impressive because on smartTV we have to manage several constraints, including taking into account the specificities of each device (Tizen, WebOS, Hisense, Panasonic, etc.).&lt;/p&gt;

&lt;p&gt;I tried to make this article accessible to everyone, whether you‚Äôre a developer or not. I have to admit that for the code samples, you need to know a bit of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTML&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CSS&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JavaScript&lt;/code&gt;, but I tried to explain it as simply as possible.&lt;/p&gt;

&lt;p&gt;Hi there! üëã I‚Äôm Julie Nginn, I‚Äôm a front-end developer and the accessibility technical referent at the &lt;em&gt;TVJS&lt;/em&gt; service. We called this service ‚ÄúTVJS‚Äù because we develop the apps for the smartTVs, like Samsung, LG, Sony etc. using JavaScript.
First of all, you need to know that I‚Äôm very passionate and engaged in accessibility. My main motivation is to make the streaming better for everyone, including people with disabilities. üí™&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;‚ÑπÔ∏è What is the web accessibility?&lt;/p&gt;

  &lt;p&gt;Web accessibility is the practice of designing and developing websites so that they can be used by as many people as possible, including those with disabilities. It‚Äôs about removing barriers that prevent people from accessing or interacting with web content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;h3 id=&quot;october-2022&quot;&gt;October 2022&lt;/h3&gt;
&lt;p&gt;During the R&amp;amp;D (Research and Development) day at Bedrock, we decided to investigate and see if it is possible to implement audio guidance on our TVJS apps. Audio guidance is a basic feature on the smartTVs that can be found in the accessibility settings which allows the user to hear the text on the screen.&lt;/p&gt;

&lt;p&gt;I took the lead on this project and I started to implement it for the platform WebOS first, because it‚Äôs the device I had at home, and it‚Äôs pretty easy to test on this device.
At that time, the only documentation I found to implement the feature on WebOS was using the &lt;a href=&quot;https://webostv.developer.lge.com/develop/references/luna-service-introduction&quot;&gt;Luna Service API&lt;/a&gt; to enable the audio guidance feature. By calling the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;voicereadout.readAlert()&lt;/code&gt; returned by the API and passing it the text we want to read.
For the demonstration, I implemented it in the pairing page. When any button in this page is focused, we can hear the text of the button.&lt;/p&gt;

&lt;p&gt;Here is the result of this first POC (it‚Äôs in French):&lt;/p&gt;
&lt;video src=&quot;/images/posts/tvjs/tvjs_tts_webos.mp4&quot; width=&quot;560&quot; height=&quot;315&quot; controls=&quot;&quot;&gt;
&lt;/video&gt;

&lt;p&gt;The implementation was pretty simple (but spoiler alert: it will be even easier later). Here is the code, we need to add to enable the audio guidance feature on WebOS:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;audioGuidanceConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;urlLuna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;luna://com.webos.settingsservice&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;getSystemSettings&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;audioGuidance&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;requestType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;audio guidance&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;activateTTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wrappers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;serviceRequestWrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;audioGuidance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;audioGuidance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;audioGuidance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;voicereadout&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wrappers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getWebOS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;nx&quot;&gt;voicereadout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;readAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Fail silently&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, in order to use it in our app, we just have to call the function where we want to read the text. At this time, my first idea was to find a way to trigger the focus to be able to pass the text to read to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activateTTS&lt;/code&gt;.
But it was not very simple because, the navigation on our apps was managed by a custom navigation system, and the focus was not managed by the browser. So, I  created a HOC (Higher Order Component) to manage the focus and the text to read.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;withTTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TTSComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nf&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;activateTTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TTSComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To manage the navigation and the focus in our components, we used a HOC called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;withNavigator&lt;/code&gt;. Thanks to this, the wrapped component become focusable and navigable with the remote control (and the keyboard directional arrows). I won‚Äôt talk more about our navigation system today because it should have its own article.
By using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;withTTS&lt;/code&gt; inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;withNavigator&lt;/code&gt; to wrap the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Button&lt;/code&gt; component, we can retrieve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;focus&lt;/code&gt; status from the props. So, we can call the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activateTTS&lt;/code&gt; function when the button is focused.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NavigationButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withNavigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;withTTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can clearly improve this code, moreover, with hindsight, I realize that it was quite cumbersome to have to add this HOC to all the components we wanted to read. But at this time, I was proud to have been able to prove that it was possible to implement the audio guidance on our smart TV apps. üéâ
After this POC, unfortunately no initiative was taken because the accessibility was not our first priority at that time, so this feature had been abandoned‚Ä¶ üò≠&lt;/p&gt;

&lt;h3 id=&quot;february-2024&quot;&gt;February 2024&lt;/h3&gt;
&lt;p&gt;A few months later, I decided to spend another R&amp;amp;D day to develop another feature to improve the accessibility of our apps. This time, I wanted to do something especially for the dyslexic people, because I‚Äôm dyslexic myself, and I‚Äôm a big user of streaming platforms.&lt;/p&gt;

&lt;p&gt;In accessibility, we can often see features for the blind or the deaf people, but it‚Äôs rare to see something for the dyslexic ones and even more on streaming platforms.
So, I started with a benchmark to see what is already done in the industry and at that time none of our competitors has implemented a feature for the dyslexic people, except Canal+ (for video subtitles only).&lt;/p&gt;

&lt;p&gt;After that, I put myself in the shoes of a user and imagined what could be useful for me to enjoy my experience on our apps. The project ‚ÄúDyslexic mode‚Äù on TVJS was born! üéâ&lt;/p&gt;

&lt;p&gt;First, I added a new entry called ‚ÄúAccessibility‚Äù in the user settings, where the user can activate the ‚ÄúDyslexic mode‚Äù and personalize the font and the size of the text etc.
And then, the personalization will be applied on the whole application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tvjs/tvjs_dys_settings.png&quot; alt=&quot;tvjs_dys_entry&quot; height=&quot;340px&quot; /&gt;
&lt;img src=&quot;/images/posts/tvjs/tvjs_dys_entry.png&quot; alt=&quot;tvjs_dys_entry&quot; height=&quot;340px&quot; /&gt;
&lt;img src=&quot;/images/posts/tvjs/tvjs_dys_program.png&quot; alt=&quot;tvjs_dys_entry&quot; height=&quot;340px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To do that, we updated the global style, using CSS and JavaScript, to switch between the dyslexic and the default modes.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dyslexicMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;letterSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;3px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wordSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fontFamily&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;Open Dyslexic&quot;, Arial, sans-serif&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;letterSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wordSpacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fontFamily&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Arial, sans-serif&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see it‚Äôs very easy to personalize the font, and since we can use only CSS to do that, the performance is not impacted. This feature requires very few resources and effort but brings considerable improvement for users.&lt;/p&gt;

&lt;p&gt;Why is it interesting for the user to have this feature? Because it can help reduce reading time, fatigue and errors. It can also help to improve comprehension and focus. The user experience is clearly better.
And what is the benefit for Bedrock Streaming? It‚Äôs a competitive advantage, it‚Äôs a way to show that we care about our users, and we want to make the streaming better for everyone.&lt;/p&gt;

&lt;p&gt;As a user, this kind of feature is very important, especially on smartTV apps, because when we watch a movie or a series, we‚Äôre on our sofa, which is often a long way from the TV, and we don‚Äôt all have plasma screens. So, the text should be readable to keep the user on our platform.&lt;/p&gt;

&lt;p&gt;I presented this project to Mathieu Bouillot (our Product Manager, expert in accessibility) and some of our designers, and they were very enthusiastic about it. We worked together with Mathieu, and some months later the initiative ‚ÄúStyle Switcher‚Äù was created. ü•π
The project deserves a dedicated article, so I will not go into details here. But the main idea of this project is to allow the user to personalize the font, the size, the spacing, the colors etc. of the text on the whole application, so the user can adapt the app to his needs.&lt;/p&gt;

&lt;h2 id=&quot;2024-march-the-first-accessibility-audit&quot;&gt;2024 March: the first accessibility audit&lt;/h2&gt;
&lt;p&gt;First of all, I‚Äôm going to explain what is an accessibility audit.&lt;/p&gt;

&lt;p&gt;An accessibility audit is a process to evaluate the accessibility of a website or an application. The goal is to find the issues and the barriers that prevent the users with disabilities to use the website or the application.
The audit is based on the WCAG (Web Content Accessibility Guidelines) which is a set of rules to follow to make the web accessible to everyone:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Perceivable:&lt;/strong&gt;  Users must be able to perceive the information being presented. This means it must be presentable to the senses (e.g., sight, hearing, touch) in ways users can understand&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Operable:&lt;/strong&gt; Users must be able to operate the interface. This means users must be able to interact with the controls and content (e.g., using a keyboard, mouse, or assistive technology)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Understandable:&lt;/strong&gt; Users must be able to understand the content and the interface. This means the content and interface must be clear, consistent, and easy to understand&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Robust:&lt;/strong&gt; The content must be robust enough that it can be interpreted reliably by a wide variety of user agents, including assistive technology&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The audit is based on the conformity rate of the WCAG, and the score is between 0% and 100%.
In France, we use the RGAA (R√©f√©rentiel G√©n√©ral d‚ÄôAm√©lioration de l‚ÄôAccessibilit√©) which is based on the WCAG, but with some specificities for the French administration.
There are three levels of conformance:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;non-compliant&lt;/strong&gt; (0% to 49%)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;partially compliant&lt;/strong&gt; (50% to 99%)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;totally compliant&lt;/strong&gt; (100%)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obviously, the audit alone cannot evaluate whether a site or application is completely accessible, as there are many factors to consider, and it remains theoretical because we cannot know if users will actually find it accessible.
But as developers, we need to follow the accessibility rules at least and keep our code with a correct semantic.&lt;/p&gt;

&lt;p&gt;So, in March 2024, we received the first audit of the TVJS apps from Mathieu. The score was 43% üò± The score is not catastrophic, but we noticed that our app is non-compliant. We could do better, and we decided to do so!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/tvjs/tvjs_accessibility_first_audit.png&quot; alt=&quot;The score for TVJS with the first audit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We first decided to ‚Äúprepare the ground‚Äù and fix some minor issues. Then, to have the same knowledge and understanding of the accessibility, we organized a workshop with Mathieu and the TVJS core developers to explain the basics of the accessibility, the WCAG, the ARIA (Accessible Rich Internet Applications), the tools etc. 
We can perceive the accessibility as an annoying constraint to do when we develop an app, because we need to follow some specific rules. But, when we know the context and the importance of accessibility for users, our engagement is different. And that‚Äôs what happened during this workshop. The developers were very interested and motivated to improve the accessibility of our apps.&lt;/p&gt;

&lt;p&gt;During this workshop, we also explained to Mathieu the constraints and the specificities of the smartTV apps, because those are not the same as web apps. For example, focus management is different, navigation is different &lt;em&gt;(remote control and no keyboard)&lt;/em&gt;, screen reader is different etc. With his help, we did a mob programming to find some solutions to implement screen reader on our apps.
And now, the POC I did 2 years ago becomes a reality. ü§© However, it was not easy, because on the TVJS apps, we use a custom navigation system to be able to navigate with the remote control. This system is not compatible with the screen reader because we need to use the native focus management of the browser and to use the correct HTML tags and attributes.&lt;/p&gt;

&lt;h2 id=&quot;the-refactoring&quot;&gt;The refactoring&lt;/h2&gt;
&lt;h3 id=&quot;our-contraints&quot;&gt;Our contraints&lt;/h3&gt;
&lt;p&gt;This refactoring was not easy, we had to manage several constraints because of the platform we worked on. Even if we use a web app on the smartTV, we need to take into account the specificities of each device and also their versions. Some of them use an old version of the browser, so some of the HTML tags and attributes are not supported.&lt;/p&gt;

&lt;p&gt;For example, if we don‚Äôt produce a list using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ul&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;li&lt;/code&gt;, the screen reader is not able to identify the list. To have a good semantic we have to update our lists from nested &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;div&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ul&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;li&lt;/code&gt; HTML tags.
But even if we use the correct HTML tags, the screen reader is not able to read the list correctly because the browser doesn‚Äôt manage the lists natively, because of the old OS version of the browser.
So to work around this problem, we decided to manage the lists manually by using the number of elements and their position in the list to announce to the user that they are in a list. We also need to handle the texts and translations by ourselves, which we wouldn‚Äôt need to do on the web because the screen reader does it natively.&lt;/p&gt;

&lt;p&gt;Also, each device works differently and needs a specific configuration. At TVJS, we manage a dozen of different platforms. We had to test and document each device to see if the audio guide feature is present and ensure our implementation works correctly on them. 
Sometimes the results were different between devices, so we need to be attentive during development and testing.
And for the unsupported devices/versions, we must avoid negatively impacting them with our changes.&lt;/p&gt;

&lt;h3 id=&quot;updating-the-html-structure&quot;&gt;Updating the HTML structure&lt;/h3&gt;
&lt;p&gt;We made many pull requests to refactor our components to use the correct HTML tags and attributes. For example, we replaced the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;div&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;button&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;span&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h2&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h3&lt;/code&gt; etc. to have a good semantic for accessibility. We also added the ARIA attributes to improve the accessibility of our components.
Thanks to Mathieu, we learned the good practices and how to use the ARIA attributes as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aria-label&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aria-hidden&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aria-describedBy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is a typical example of what we did:&lt;/p&gt;

&lt;p&gt;Before:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sidenav&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sidenav&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; 
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sidenav__item&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After:&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Sidenav&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nav&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;navigation&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sidenav&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sidenav__item&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/li&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/nav&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‚ÑπÔ∏è We replaced the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;div&lt;/code&gt; by the more appropriate tag as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nav&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ul&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;li&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-the-native-focus-management&quot;&gt;Using the native focus management&lt;/h3&gt;
&lt;p&gt;As I mentioned before, to navigate through our apps, we developed our own navigation system with a custom focus management. But the screen reader doesn‚Äôt work with this system because it needs to use the native focus.
So, we refactored our system to fix this issue by synchronizing the focus of the browser with our navigation system. We added &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTMLElement.focus()&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tabindex&lt;/code&gt; attribute to make some elements focusable.&lt;/p&gt;

&lt;h3 id=&quot;implementing-audio-guidance-on-smarttv&quot;&gt;Implementing audio guidance on SmartTV&lt;/h3&gt;
&lt;p&gt;To implement the audio guidance feature to WebOS, we need to enable the feature in the WebOS config (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appinfo.json&lt;/code&gt; file) as following:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;accessibility&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;supportsAudioGuidance&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Compared to what I did in my first POC in 2022, the implementation is much simpler and more efficient.&lt;/p&gt;

&lt;p&gt;Even simpler, on Tizen and Hisense, we didn‚Äôt need to do anything, since we already refactored our code by using the correct HTML structure and the native focus, audio guidance is already enabled by default on these platform. But of course, it depends if the device version is compatible with the feature.
To date, the work is still in progress to list all the supported devices.&lt;/p&gt;

&lt;h2 id=&quot;2024-october-the-second-audit&quot;&gt;2024 October: the second audit&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/tvjs/tvjs_accessibility_scores.png&quot; alt=&quot;The score for TVJS with the first audit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some months later, we received the second audit of the TVJS apps from Mathieu and the score has increased to 61%. üöÄ I am very proud of my team and myself, because we did a great job! We improved the accessibility of our apps by 18% in just a few months. It‚Äôs a great achievement, and it‚Äôs just the beginning. We are motivated to reach the 100% of the accessibility score. üí™
Of course, this performance is also due to the work of Mathieu (our PM) and Sha√Ønez (our PO) who have been very helpful and supportive during this refactoring.
I think the communication between the product line and the technical line is primordial to be sure to go in the right direction. And obviously, the communication between the developers is also important, it‚Äôs thanks to our many brainstorming sessions that we found the best solutions.&lt;/p&gt;

&lt;p&gt;If I have some advice to give to the developers who want to improve the accessibility of their apps, it would be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Before developing, to think about the accessibility and use the good practices (like the semantic HTML, the ARIA, the focus management etc.)&lt;/li&gt;
  &lt;li&gt;Take the time to understand the accessibility, the constraints and the specificities of the platform (by attending a workshop for example)&lt;/li&gt;
  &lt;li&gt;If possible, to have an accessibility referent in the team to stay aware of this topic and communicate with the product line and the designers&lt;/li&gt;
  &lt;li&gt;To test with the existing tools (like &lt;a href=&quot;https://www.deque.com/axe/&quot;&gt;Axe&lt;/a&gt;, &lt;a href=&quot;https://wave.webaim.org/&quot;&gt;Wave&lt;/a&gt;, the screen reader and the browser accessibility panel)&lt;/li&gt;
  &lt;li&gt;To test directly on the device and if possible with the users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To conclude this article, I would like to note accessibility is not a constraint, it‚Äôs a strength, and a competitive advantage for our apps. If our platform is accessible, the users will be happy and will prefer to use our apps rather than the other ones. 
The accessibility is not only for the people with disabilities, it‚Äôs for everyone. And in the TVJS team, we understand that well! üì∫&lt;/p&gt;

&lt;h2 id=&quot;-sources&quot;&gt;üìö Sources&lt;/h2&gt;
&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;WCAG Guidelines: &lt;a href=&quot;https://www.w3.org/TR/WCAG21/&quot;&gt;https://www.w3.org/TR/WCAG21/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;RGAA: &lt;a href=&quot;https://accessibilite.numerique.gouv.fr&quot;&gt;https://accessibilite.numerique.gouv.fr&lt;/a&gt;/&lt;/li&gt;
  &lt;li&gt;Accessibility Tools: &lt;a href=&quot;https://wave.webaim.org/&quot;&gt;Wave&lt;/a&gt; - &lt;a href=&quot;https://www.deque.com/axe/&quot;&gt;Axe&lt;/a&gt; - &lt;a href=&quot;https://www.nvaccess.org/&quot;&gt;Screen reader&lt;/a&gt; - &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Accessibility_inspector&quot;&gt;Browser accessibility panel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;HTMLElement.focus(): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;WebOS audio guidance: &lt;a href=&quot;https://webostv.developer.lge.com/develop/references/luna-service-introduction&quot;&gt;https://webostv.developer.lge.com/develop/references/luna-service-introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;j_nginn&quot;]</name></author><category term="TVJS" /><category term="smartTV" /><category term="javascript" /><category term="react" /><category term="web" /><category term="frontend" /><category term="accessibility" /><category term="a11y" /><summary type="html">Accessibility is at the heart of our concerns, at Bedrock Streaming we work hard to make our applications accessible to everyone. In this article, I‚Äôm going to share with you how my team and I improved our accessibility score of our SmartTV apps by 18% in just a few months! This improvement is even more impressive because on smartTV we have to manage several constraints, including taking into account the specificities of each device (Tizen, WebOS, Hisense, Panasonic, etc.).</summary></entry><entry><title type="html">How we improved scroll performance on Smart TV apps</title><link href="https://tech.bedrockstreaming.com/2024/11/22/tvjs-scroll-performance-enhancement.html" rel="alternate" type="text/html" title="How we improved scroll performance on Smart TV apps" /><published>2024-11-22T00:00:00+00:00</published><updated>2024-11-22T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/11/22/tvjs-scroll-performance-enhancement</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/11/22/tvjs-scroll-performance-enhancement.html">&lt;p&gt;One of the core experiences of a Bedrock app for the end user is browsing the catalog. Scrolling vertically through blocks of content, and scrolling horizontally through lists of items. However, TVs do not offer high performance and provide poor user experience during heavy resource actions. We especially noticed that scrolling horizontally in a list was laggy and unpleasant. This article focuses on performance optimization to enhance the horizontal scroll experience on Smart TVs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/old-scroll.gif&quot; alt=&quot;Laggy scroll video&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note : The GIF above shows a laggy scroll experience on TV. During the videos featured in this article, a x20 CPU throttle has been enforced on the browser, to mimic a low-performance TV device&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;context&quot;&gt;&lt;a href=&quot;#context&quot;&gt;Context&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;On TV, we scroll horizontally by focusing each item sequentially when the user presses the left or right arrow button on their remote.&lt;/p&gt;

&lt;p&gt;Scrollable lists can be of various sizes and even include paginated content. In cases of paginated content, the next page is fetched preemptively during scroll, when the focus reaches a certain threshold.&lt;/p&gt;

&lt;p&gt;Our old scroll component worked as follows: we would render a whole list of items, in a parent component handling scroll. When scrolling horizontally, the focus would switch to the next item. This would notify the parent component in charge of scroll, that would move the whole list laterally. The movement was computed from the measurements of the focused item, the size of the list, and the size of the container.&lt;/p&gt;

&lt;p&gt;There are multiple chances for improvement in this implementation:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Since every item was rendered in the DOM, moving the whole list was very heavy. Subsequently, a whole page of lists was itself pretty heavy to render.&lt;/li&gt;
  &lt;li&gt;Because the whole list is rendered, fetching a new page means that the new items are immediately all rendered to the DOM, imposing a heavy load by displaying content that is not even on the screen.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;virtualization&quot;&gt;&lt;a href=&quot;#virtualization&quot;&gt;Virtualization&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;To address the first shortcoming of the initial approach, we introduced virtualization. Virtualization is a technique to render only the items that are visible on the screen.&lt;/p&gt;

&lt;p&gt;For context, the content we display on each list is normalized and stored in a redux store. All the items are available in an array and can be selected by their respective index.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ItemComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;useSelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;selectItemByIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The virtualized scroll renders items based on a static array, each cell of the array being a slot for the item it‚Äôs going to display.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ScrollComponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SCROLLER_BASE_ARRAY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nbItemsToDisplay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SCROLLER_BASE_ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;focusOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setFocusOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// focusOffset is a state updated upon user input: &lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// + 1 when the right arrow is clicked, -1 when the left arrow is clicked&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;focusOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


        &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ItemComponent&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/empty-slots.png&quot; alt=&quot;Schema representing 4 empty slots&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Each cell is connected to the store and uses its own index as selection parameter to get the corresponding item in the store (cell of index 0 gets the first item, cell of index 1 gets the second, etc.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/filled-slots.png&quot; alt=&quot;Schema representing 4 slots with rendered items inside&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, only a subset of the list is rendered, as many items as the static array has cells.&lt;/p&gt;

&lt;p&gt;Horizontal scroll is managed by incrementing the selection index upon user input (e.g., pressing the right arrow key). Using the same array, each cell now selects from the store the item for its index plus an ‚Äúoffset‚Äù that describes how much the list is scrolled.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/filled-slots-with-offset.png&quot; alt=&quot;Schema representing 4 slots with rendered items inside&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By offsetting the items at every user input (negative offset to move the items to the right and positive offset to move the items to the left), we achieve a visual scroll, with only a subsection of the list displayed on screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/scrolling.gif&quot; alt=&quot;Animation showing a scrolling list.gif&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;optimised-rendering-with-react-keys&quot;&gt;&lt;a href=&quot;#optimised-rendering-with-react-keys&quot;&gt;Optimised Rendering with React Keys&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;The heart of the implementation is to fill each cell with a new item at each scroll. From the point of view of a single cell, when we scroll, the item it displays is new. But we know that the item already existed in the DOM, just one cell over.&lt;/p&gt;

&lt;p&gt;This is where we can leverage &lt;a href=&quot;https://react.dev/learn/rendering-lists#keeping-list-items-in-order-with-key&quot;&gt;React‚Äôs keys mechanism&lt;/a&gt;. Items rendered use a key that combines the original cell index with the current scroll offset. These keys help React reconcile the item in cell 1 before render as the item in cell 2 after render as the same item, thus reusing the same DOM node. As a result, we get zero re-renders for the items that are shifting places, significantly reducing the performance impact of a scroll.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/profiling.png&quot; alt=&quot;Profiling flame graph&quot; /&gt;
  &lt;figcaption&gt;‚òùÔ∏èProfiling during a single scroll right. The only items rendering are the ones with focus change (item losing focus and item gaining focus) and the new item that wasn‚Äôt on the screen. Every other item is unaffected by a horizontal scroll&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;hr /&gt;

&lt;h1 id=&quot;optimised-pagination&quot;&gt;&lt;a href=&quot;#optimised-pagination&quot;&gt;Optimised pagination&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A nice win from virtualization is the impact on pagination. Only a subset of items is rendered on the screen. Also, the list itself only needs to know about that subset of items since it uses a constant array to display its items. This means that a new page fetched has 0 impact on renders: the new items are added to the store, but the React component itself has no knowledge of that operation and triggers no re-renders.&lt;/p&gt;

&lt;h1 id=&quot;results&quot;&gt;&lt;a href=&quot;#results&quot;&gt;Results&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Note: measurements presented here are taken with the Chrome DevTools performance tab, with x6 CPU throttle and network connection limited to fast 4G to mimic a low-performance TV device and keep a steady test environment. Times are scripting and rendering times added.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can compare a few benchmarks to exhibit the gains from the new scroller.&lt;/p&gt;

&lt;p&gt;Scrolling right is obviously less expensive now. Here, measurements were taken from a single scroll right, in a 72 items list.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Before&lt;/th&gt;
      &lt;th&gt;After, with new scroll&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;462ms&lt;/td&gt;
      &lt;td&gt;41ms (-91%)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;But more closely to the app‚Äôs actual use, here is a scenario measuring the cost of scrolling right through a list of 72 items, with 8 pages fetched during scroll.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Before&lt;/th&gt;
      &lt;th&gt;After&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;11615ms&lt;/td&gt;
      &lt;td&gt;8631ms (-26%)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Here, we include everything else a list does when scrolling (fetching new pages, additional handlers‚Ä¶), so the gain is less, but still significant.&lt;/p&gt;

&lt;p&gt;Scrolling down in a page with lighter lists is also more efficient. Here, measurements were taken during a scroll down 25 lists.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Before&lt;/th&gt;
      &lt;th&gt;After&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1308ms&lt;/td&gt;
      &lt;td&gt;1038ms (-21%)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Beyond benchmarks, on-device tests were also conclusive: the scroll is smoother, we almost eliminated the lag caused by a pagination fetch. Overall, it feels better to scroll through a list.&lt;/p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-22-tvjs-scroll-performance-enhancement/new-scroll.gif&quot; alt=&quot;New and more fluid scroll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This frontend R&amp;amp;D project successfully addressed the scrolling performance issues on TV. The new scrolling solution dramatically improved performance by limiting re-renders. This optimization ensured a smoother scrolling experience, enhancing usability on TV devices. From this experience, we also moved on to implementing the same virtualization on the horizontal scroll of the catalog, which presented its own challenges but was also a success.&lt;/p&gt;</content><author><name>[&quot;m_bernier&quot;]</name></author><category term="TV" /><category term="performance" /><category term="javascript" /><category term="react" /><category term="web" /><category term="frontend" /><summary type="html">One of the core experiences of a Bedrock app for the end user is browsing the catalog. Scrolling vertically through blocks of content, and scrolling horizontally through lists of items. However, TVs do not offer high performance and provide poor user experience during heavy resource actions. We especially noticed that scrolling horizontally in a list was laggy and unpleasant. This article focuses on performance optimization to enhance the horizontal scroll experience on Smart TVs.</summary></entry><entry><title type="html">Insights from Golab Conference 2024, Florence</title><link href="https://tech.bedrockstreaming.com/2024/11/12/golab-florence.html" rel="alternate" type="text/html" title="Insights from Golab Conference 2024, Florence" /><published>2024-11-12T00:00:00+00:00</published><updated>2024-11-12T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/11/12/golab-florence</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/11/12/golab-florence.html">&lt;p&gt;Attending the &lt;a href=&quot;https://golab.io/&quot;&gt;Golab conference&lt;/a&gt; in Florence has been a thrilling experience for us as developers. Immersing ourselves in talks by some of the most brilliant minds in the Go community gave us a deeper understanding of advanced concepts, practical libraries, and the future of Go. We‚Äôve summarized the key takeaways from the talks we attended to share some of the valuable lessons and fresh perspectives we gained.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;keynote-go-telemetry-wins&quot;&gt;Keynote: Go Telemetry Wins&lt;/h2&gt;

&lt;p&gt;The opening keynote, delivered by Russ Cox, focused on the importance of telemetry in the Go ecosystem itself. Russ explained how telemetry data helps the Go team make informed decisions to improve the language and its ecosystem, emphasizing the strict measures taken to ensure user privacy. We learned how telemetry is carefully designed to protect sensitive information while still providing valuable insights.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-12-golab-firenze/go_telemetry_keynote.jpg&quot; alt=&quot;Go telemetry wins&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The session concluded with a call to action, encouraging everyone to enable telemetry (by running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go telemetry on&lt;/code&gt;) on their Go installations to support ongoing enhancements and community-driven improvements.&lt;/p&gt;

&lt;p&gt;All data collected are public and could be found &lt;a href=&quot;https://telemetry.go.dev/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;instrumenting-go-apps-with-opentelemetry&quot;&gt;Instrumenting Go Apps With OpenTelemetry&lt;/h2&gt;

&lt;p&gt;This talk introduced us to OpenTelemetry, an open source solution for instrumenting applications. The speaker introduced the topic with a specific situation, you have instrumenting with datadog and want to switch to another tool (for any reason such as better pricing, UX‚Ä¶).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-12-golab-firenze/instrumenting_with_datadog.jpg&quot; alt=&quot;Instrumenting with datadog&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-12-golab-firenze/changing_agent.jpg&quot; alt=&quot;Changing tool due to cost&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then he demonstrated how OpenTelemetry can be used to collect and analyze performance data (ie. through Grafana), and its benefits compared to an agent :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;No need to install an agent on the host&lt;/li&gt;
  &lt;li&gt;No cost of install when changing agent&lt;/li&gt;
  &lt;li&gt;Open source so it‚Äôs tool agnostic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-12-golab-firenze/opentelemtry_schema.avif&quot; alt=&quot;Opentelemetry simple schema&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At Bedrock, we mainly use &lt;a href=&quot;https://tech.bedrockstreaming.com/2024/10/03/enhancing-production-monitoring-with-newrelic.html&quot;&gt;NewRelic for our monitoring&lt;/a&gt;, but we are free either to use the NewRelic agent or to use OpenTelemetry to collect traces, metrics and logs.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;watermill-the-missing-standard-library-for-event-driven-applications&quot;&gt;Watermill: The Missing Standard Library for Event-Driven Applications&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://watermill.io/&quot;&gt;Watermill library&lt;/a&gt; was highlighted as a game-changer for event-driven architecture in Go. Initially born out of a need to simplify the complexity of building event-driven systems, Watermill has evolved into a mature and widely adopted library. The talk inspired us by demonstrating how adopting Watermill can transform projects needing scalability and resilience, and it has now become a key consideration for us in future architectural designs.
The design of this very complete library is thought out in three blocks that can be used independently or not:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/ce78b1ab-6259-4fe1-91ec-fb421c3fdfdf&quot; alt=&quot;pyramid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first, on which the rest is based, is a simple &lt;a href=&quot;https://watermill.io/docs/pub-sub/&quot;&gt;Publisher/Subscriber brick&lt;/a&gt; with several implementations (go channel,kafka,RabbitMQ etc‚Ä¶).&lt;/p&gt;

&lt;p&gt;The second is a &lt;a href=&quot;https://watermill.io/docs/messages-router/&quot;&gt;Router layer&lt;/a&gt; which manages advanced event dispatch processing and adds the possibility of using middleware such as metrics, poison queue, retrying, throttling, etc. .&lt;/p&gt;

&lt;p&gt;The last block is the &lt;a href=&quot;https://watermill.io/docs/cqrs/&quot;&gt;CQRS management block&lt;/a&gt;.
The project documentation is well supplied and full of examples that make bootstrapping in existing projects much easier.
You will find its presentation materials &lt;a href=&quot;https://threedots.tech/presentations/2024/golab/&quot;&gt;here&lt;/a&gt;.
‚Äî&lt;/p&gt;

&lt;h2 id=&quot;lets-go-asynchronous&quot;&gt;Let‚Äôs Go Asynchronous&lt;/h2&gt;

&lt;p&gt;Tom√°≈° Sedl√°ƒçek tackled the common dilemma between synchronous and asynchronous communication.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kedlas/presentations/tree/main/2024-golab-florence_lets_go_async/sync/http&quot;&gt;Real-world examples&lt;/a&gt; illustrated how synchronous patterns can lead to bottlenecks, while asynchronous designs promote efficiency. Techniques like load balancing, rate limiting, and implementing retries were demonstrated, showcasing Go‚Äôs flexibility with tools like RabbitMQ and PGQ. It‚Äôs a solid reminder to evaluate communication patterns carefully and how going asynchronous isn‚Äôt as daunting as it sounds.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;how-to-write-a-programming-language-and-shell-in-go-with-92-test-coverage&quot;&gt;How to Write a Programming Language and Shell in Go with 92% Test Coverage&lt;/h2&gt;

&lt;p&gt;A fascinating exploration of &lt;a href=&quot;https://elv.sh/&quot;&gt;Elvish&lt;/a&gt;, a shell written in Go, broke down how to create a programming language.&lt;/p&gt;

&lt;p&gt;Beyond the technical implementation, Qi Xiao provided insights into achieving impressive test coverage and setting up instant CI/CD pipelines. The talk underscored the power of Go in developing robust systems, even for complex challenges like creating a shell.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;from-bland-to-spiky-how-generics-made-my-service-super-robust&quot;&gt;From Bland to Spiky: How Generics Made My Service Super Robust&lt;/h2&gt;

&lt;p&gt;This lively talk explored how generics have brought versatility to Go.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://linktr.ee/teea_golab24&quot;&gt;Teea Alarto&lt;/a&gt; used vivid examples, transforming generic code to create robust, maintainable services. The presentation not only demystified generics but also highlighted their practical benefits, such as eliminating repetition and enhancing code maintainability.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;tinygo-for-pet-automation&quot;&gt;TinyGo for Pet Automation&lt;/h2&gt;

&lt;p&gt;This session was both fun and practical, demonstrating how TinyGo can be leveraged for pet automation using Arduino.&lt;/p&gt;

&lt;p&gt;Josephine Winter presented a compelling case for TinyGo as an accessible platform for embedded programming, opening possibilities beyond traditional web development. Automation projects, whether for pets or other use cases, seem more achievable and engaging with TinyGo.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;gophers-gone-domain-driven-a-tale-of-go-and-ddd&quot;&gt;Gophers Gone Domain-Driven: A Tale of Go and DDD&lt;/h2&gt;

&lt;p&gt;Domain-Driven Design (DDD) often intimidates developers, but this talk simplified the fundamentals for Go practitioners.&lt;/p&gt;

&lt;p&gt;By exploring domain modeling, bounded contexts, and ubiquitous language, we gained insights into creating a codebase that aligns with business logic.&lt;/p&gt;

&lt;p&gt;Davide Imola also discussed using hexagonal architecture to make Go applications scalable and maintainable, providing a practical roadmap for implementing DDD concepts.
He provides a simple example of a structured &lt;a href=&quot;https://github.com/davideimola/ddd-onion-go&quot;&gt;Go project&lt;/a&gt; using the DDD and Onion Architecture concepts.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;to-cgo-or-not-cross-compiling-a-sqlite-driver&quot;&gt;To CGo or Not: Cross Compiling a SQLite Driver&lt;/h2&gt;

&lt;p&gt;The challenge of cross-compiling without relying on CGo was explored in this technical deep dive.&lt;/p&gt;

&lt;p&gt;Jan Mercl introduced a &lt;a href=&quot;https://modernc.org/sqlite&quot;&gt;CGo-free driver&lt;/a&gt;, explaining how transpilers and C runtime emulation make it feasible.&lt;/p&gt;

&lt;p&gt;This was particularly eye-opening for those of us working on projects that need efficient and lightweight database solutions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;graphs-and-games-can-go-take-a-ticket-to-ride&quot;&gt;Graphs and Games: Can Go Take a Ticket to Ride?&lt;/h2&gt;

&lt;p&gt;Blending board games and Go programming, Michele Caci took us on a journey through graph algorithms inspired by ‚ÄúTicket to Ride.‚Äù&lt;/p&gt;

&lt;p&gt;He demonstrated how they implemented a &lt;a href=&quot;https://github.com/mcaci/go-ticket-to-ride&quot;&gt;Go-based version of the game&lt;/a&gt; and applied algorithms to improve gameplay.&lt;/p&gt;

&lt;p&gt;It was a fun reminder of how computer science concepts can intersect with entertainment, sparking ideas for gamifying our projects.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;deep-dive-into-a-go-binary&quot;&gt;Deep Dive into a Go Binary&lt;/h2&gt;

&lt;p&gt;Jes√∫s Espino, Software developer at Mattermost and who loves to deep dive into technical details and previously talked about &lt;a href=&quot;https://www.youtube.com/watch?v=arH3jp_x8yQ&quot;&gt;Go Runtime&lt;/a&gt;, answered this question:&lt;/p&gt;

&lt;p&gt;What lies inside a Go binary?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-12-golab-firenze/deep_dive_go_binary.jpg&quot; alt=&quot;Deep dive in go binary&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jes√∫s unveiled the secrets of compiled Go programs while mirroring The Lord of the Rings making it very pedagogical, starting with ELF format composed of a set of headers, list of sections and segments to the internal mechanisms that make a binary tick.&lt;/p&gt;

&lt;p&gt;Understanding the anatomy of a Go binary enhanced our appreciation for the Go compiler and the efficient executables it generates.
You can view his presentation slides &lt;a href=&quot;https://speakerdeck.com/jespino/deep-dive-into-a-go-binary&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here some of his references:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/nC1U1LJQL80?si=0-X8EnOUVgbmCkPp&quot;&gt;In-depth ELF&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mandiant/GoReSym&quot;&gt;GoReSym&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/burrowers/garble&quot;&gt;Garble&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The go source code (specifically the linker code)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;how-to-punch-holes-in-network-infrastructure-using-go&quot;&gt;How to Punch Holes in Network Infrastructure Using Go&lt;/h2&gt;

&lt;p&gt;Finally, we delved into the intricacies of peer-to-peer networking. Using the &lt;a href=&quot;https://github.com/libp2p/go-libp2p&quot;&gt;go-libp2p&lt;/a&gt; module, the speaker showed how to establish decentralized connections by bypassing traditional network barriers.&lt;/p&gt;

&lt;p&gt;This talk was both technical and visionary, providing us with ideas on how to optimize network performance using Go‚Äôs robust features.&lt;/p&gt;

&lt;p&gt;You will be able to find his presentation materials &lt;a href=&quot;https://github.com/watjurk/talk-golab-2024-peer-to-peer-hole-punching?tab=readme-ov-file&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;closing-keynote-go-back-to-the-future&quot;&gt;Closing Keynote: Go Back to the Future&lt;/h2&gt;

&lt;p&gt;The closing keynote was a captivating journey through Go‚Äôs past, present, and future, filled with live demos and unexpected surprises.&lt;/p&gt;

&lt;p&gt;The speaker showcased the evolution of Go while exploring how the language might shape the future of programming. One of the highlights was a live demonstration where the presenter made a drone fly over the audience, all powered and controlled by Go. This thrilling spectacle illustrated the language‚Äôs potential in robotics and automation, leaving everyone inspired and in awe of what Go can achieve.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The Golab conference in Florence provided a rich tapestry of knowledge, sparking inspiration and reaffirming our love for Go. From new architectural insights to innovative uses of Go in domains like automation and networking, we walked away with a toolkit full of ideas to bring back to our development practices. We‚Äôre eager to implement some of these learnings and contribute further to the vibrant Go community!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-12-golab-firenze/golab_group.jpg&quot; alt=&quot;Bedrock devs&quot; /&gt;&lt;/p&gt;</content><author><name>[&quot;t_geindre&quot;, &quot;k_phan&quot;, &quot;j_hardeman&quot;]</name></author><category term="golang" /><category term="opensource" /><category term="community" /><category term="conference" /><category term="2024" /><summary type="html">Attending the Golab conference in Florence has been a thrilling experience for us as developers. Immersing ourselves in talks by some of the most brilliant minds in the Go community gave us a deeper understanding of advanced concepts, practical libraries, and the future of Go. We‚Äôve summarized the key takeaways from the talks we attended to share some of the valuable lessons and fresh perspectives we gained.</summary></entry><entry><title type="html">Using Fastly‚Äôs Compute at-edge to personalize static pre-generated pages</title><link href="https://tech.bedrockstreaming.com/2024/11/07/compute-at-edge-personalize-static-pages.html" rel="alternate" type="text/html" title="Using Fastly‚Äôs Compute at-edge to personalize static pre-generated pages" /><published>2024-11-07T00:00:00+00:00</published><updated>2024-11-07T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/11/07/compute-at-edge-personalize-static-pages</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/11/07/compute-at-edge-personalize-static-pages.html">&lt;p&gt;During the &lt;a href=&quot;https://www.uefa.com/euro2024/&quot;&gt;UEFA Euro&lt;/a&gt; football cup in June and July 2024, M6 broadcasted several matches. Of course, this competition was available, live, on &lt;a href=&quot;https://www.6play.fr/&quot;&gt;M6+&lt;/a&gt;. For every user joining right from the first second and or for all users hearing their neighbors shouting and wanting to re-watch the action, starting a live video stream had to work!&lt;/p&gt;

&lt;p&gt;When you use one of the platforms we manage, your goal is to start a video stream. You land on the homepage of a platform like M6+ or &lt;a href=&quot;https://www.videoland.com/&quot;&gt;Videoland&lt;/a&gt;, browse the catalog, register or login and, ultimately, you‚Äôll start a video. It‚Äôs the one thing that causes the most frustration if it fails. And we don‚Äôt want that. We want users to enjoy their experience.&lt;/p&gt;

&lt;p&gt;For Euro, we first worked on shortening the browsing part, to both provide a great experience for users arriving to watch a match, and to lower the load on our platform. We talked about this in &lt;a href=&quot;/2024/08/07/euro-resiliency-special-event-page.html&quot;&gt;How Special Event Page allowed us to handle more than 1 million of users&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We also worked on reducing load on our backend applications, allowing our platform to handle far more users and load than it‚Äôs used to. This post is the story of how we used compute-at-edge for the first time!&lt;/p&gt;

&lt;h1 id=&quot;our-backend-platform&quot;&gt;&lt;a href=&quot;#our-backend-platform&quot;&gt;Our backend platform&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;All our frontend (web/mobile/TV) applications communicate with our backend components through what we call &lt;a href=&quot;/2022/10/13/bff-notre-best-friend-forever-pour-faire-plein-d-applications-frontend.html&quot;&gt;BFF&lt;/a&gt;. This BFF then calls many other backend APIs and returns a &lt;em&gt;layout&lt;/em&gt; that contains everything an app needs. This layout will contain lists of rows and blocks when you are browsing the catalog, or most information required to start a stream when you are trying to do so.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
flowchart LR
    user1[User 1]
    user2[User 2]
    user3[User 3]

    user1 --&amp;gt; bff
    user2 --&amp;gt; bff
    user3 --&amp;gt; bff

    bff((BFF))

    bff --&amp;gt; api1
    bff --&amp;gt; api2
    bff --&amp;gt; api3
    bff --&amp;gt; api4
    bff --&amp;gt; api5

    api1[API-1]
    api2[API-2]
    api3[API-3]
    api4[API-4]
    api5[API-5]
&lt;/div&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 1: one BFF between frontend apps and backend APIs.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;With this architecture, BFF receives a lot of requests, and each of these causes up to dozens of requests to other services. This is greatly amplified by the fact that all BFF responses are personalized, which means we cannot cache entire responses.&lt;/p&gt;

&lt;p&gt;As most of our APIs are running in a Kubernetes cluster, you might say &lt;em&gt;‚Äúuse auto-scaling!‚Äù&lt;/em&gt;, and you‚Äôd be kind of right. We are using auto-scaling. But reactive auto-scaling, based on traffic or load metrics, is not fast enough to handle huge spikes in traffic ‚Äì like big football matches can cause. For this, we have developed a &lt;a href=&quot;/2022/02/03/prescaling.html&quot;&gt;pre-scaling mechanism&lt;/a&gt;, and even &lt;a href=&quot;/2022/09/01/kubernetes-prescaling-we-open-source-our-solution.html&quot;&gt;open-sourced it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But we didn‚Äôt want to take any chances‚Ä¶&lt;/p&gt;

&lt;h1 id=&quot;disabling-all-personalization&quot;&gt;&lt;a href=&quot;#disabling-all-personalization&quot;&gt;Disabling all personalization?&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;First, a word about an idea we used three years ago: disabling all personalization. It‚Äôs quite easy to implement: ensure BFF doesn‚Äôt do any personalization work, and return a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache-control&lt;/code&gt; HTTP header so the CDN in front of the BFF backend application caches layouts and returns them to all users.&lt;/p&gt;

&lt;p&gt;With BFF only generating a few dozen responses every minute, we solved all possible problems with load or scaling and traffic spikes. But this also means cutting many features for end-users, and not displaying personalized ads.&lt;/p&gt;

&lt;p&gt;Our customers want to display personalized contents and ads, and users want to get all features from the platform. So, we decided not to enable this mechanism this year.&lt;/p&gt;

&lt;h1 id=&quot;doing-more-work-in-front-of-the-backend-app&quot;&gt;&lt;a href=&quot;#doing-more-work-in-front-of-the-backend-app&quot;&gt;Doing more work‚Ä¶ in front of the backend app!&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Several months before the Euro competition, one of our Principal Engineers had done a few prototypes with &lt;a href=&quot;https://www.fastly.com/products/edge-compute&quot;&gt;Fastly‚Äôs compute and datastores at-edge&lt;/a&gt;, convinced being able to do more things &lt;em&gt;before the apps&lt;/em&gt; would one day prove useful. Well‚Ä¶ We brought back this idea to focus. And our BFF application was already using Fastly as its CDN, what a coincidence ;-)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fastly allows one to run &lt;em&gt;compute&lt;/em&gt; at-edge, on the CDN points-of-presence. Basically, you write code in Go/Rust/Javascript and compile it to WASM.&lt;/li&gt;
  &lt;li&gt;It provides several datastores. The one we used here is called &lt;em&gt;KVStore&lt;/em&gt; ‚Äì a basic key-value store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We reworked our architecture this way:&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
flowchart LR
    user1[User 1]
    user2[User 2]
    user3[User 3]

    subgraph In Front Of BFF
        new(NEW)
        datastore[(Datastore)]
        
        new -.-&amp;gt; datastore
    end

    user1 --&amp;gt; new
    user2 --&amp;gt; new
    user3 --&amp;gt; new

    new -- cache --&amp;gt; bff

    bff((BFF))

    bff --&amp;gt; api1
    bff --&amp;gt; api2
    bff --&amp;gt; api3
    bff --&amp;gt; api4
    bff --&amp;gt; api5

    api1[API-1]
    api2[API-2]
    api3[API-3]
    api4[API-4]
    api5[API-5]
&lt;/div&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 2: doing work in front of the BFF.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Our goal was to implement a lightweight personalization layer in front of our backend BFF application. The backend application would then only need to return non-personalized layouts ‚Äì and those would be cacheable.&lt;/p&gt;

&lt;p&gt;Note: as we have many frontend applications and did not want (and did not have enough time) to update all of them, we searched for a solution that would only require changes somewhere on the backend side.&lt;/p&gt;

&lt;p&gt;This personalization layer would read some basic data &lt;em&gt;(does the current user have a subscription? Did they consent to tracking and analytics?)&lt;/em&gt; from a datastore-at-edge and use them to inject identifiers in the cached-non-personalized layout before returning it.&lt;/p&gt;

&lt;p&gt;As BFF was already using a Fastly VCL service as its CDN and a VCL service cannot also do compute, we decided to insert a compute service between the VCL one and the backend, only for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/live/&lt;/code&gt; route. As time was limited and we wanted to confirm how this would work with real users, we chose to implement this approach only for one route and one layout, the one that would be called the most: the layout used to start a live stream.&lt;/p&gt;

&lt;p&gt;This means our CDN architecture was looking like this:&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
flowchart LR
    users[Users]
    users --&amp;gt; fastlyVCL

    subgraph Fastly CDN
        fastlyVCL[Fastly&lt;br /&gt;VCL]

        fastlyVCL -- /live --&amp;gt; fastlyCompute
        fastlyCompute[Fastly&lt;br /&gt;Compute]

        datastore[(Datastore)]
        fastlyCompute -.-&amp;gt; datastore
    end

    fastlyVCL -- /* --&amp;gt; bff
    fastlyCompute -- &quot;read&lt;br /&gt;(with cache)&quot; --&amp;gt; bff

    bff((BFF))
&lt;/div&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 3: chaining a VCL and a compute service.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Before starting to actually implement this, we talked with our contacts at Fastly, to confirm this approach made sense to them and their systems would be able to handle the load and traffic spikes we were expecting. They validated the concept, and noted we should shard our data over several KVStores, as each KVStore is limited to 1000 writes/second and 5000 reads/second ‚Äì good catch!&lt;/p&gt;

&lt;p&gt;We then started implementing this approach, first with our compute-at-edge code doing static replacements, then with loading random data from the KVStores, and finally with loading the real data. Between each step, we ran synthetic load-tests, to ensure everything was running smoothly.&lt;/p&gt;

&lt;p&gt;Also, we ensured from day-1 we would not have to throw all this &lt;em&gt;‚Äúdo more work in front of BFF‚Äù&lt;/em&gt; approach away, if Fastly was not able to handle our needs. We had a fallback in mind: deploying this inside our Kubernetes cluster as a Go application and storing data in DynamoDB. Most of the code would still have worked.&lt;/p&gt;

&lt;h1 id=&quot;getting-the-data-to-the-datastore-at-edge&quot;&gt;&lt;a href=&quot;#getting-the-data-to-the-datastore-at-edge&quot;&gt;Getting the data to the datastore-at-edge&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Reading data from KVStores and using it to personalize the live layout being out of the way, it was time to think about how to get data into those KVStores.&lt;/p&gt;

&lt;p&gt;We had to synchronize pieces of data from two different backend APIs to the at-edge KVStores. First is our ‚Äúusers‚Äù API, for GDPR consents. And the second is our ‚Äúsubscription‚Äù API. Both store their data in DynamoDB.&lt;/p&gt;

&lt;p&gt;Several months before, one of our Principal Engineers had done a few demos and prototypes showing how to use DynamoDB Streams and Lambda &lt;em&gt;the right way&lt;/em&gt; and proving asynchronous is not necessarily &lt;em&gt;slow&lt;/em&gt;. This helped not start from scratch here, having confidence working with DDB Streams and Lambda would be OK, and providing some code foundations.&lt;/p&gt;

&lt;p&gt;So, in both ‚Äúusers‚Äù and ‚Äúsubscriptions‚Äù projects, we added a DynamoDB Stream on the tables used to store the relevant data. Those streams are read from a couple of Lambda functions &lt;em&gt;(with retries, batches bisect, dead-letters queues‚Ä¶ all natively handled by AWS)&lt;/em&gt;. And those functions call Fastly‚Äôs KVStore API to insert/update/delete data there. We did not forget to deal with the 1000 RPS per KVStore limit.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
flowchart LR
    subgraph &quot;API-2 (AWS)&quot;
        api2[API-2]
        ddb2[(DynamoDB)]
        api2 --&amp;gt; ddb2
        ddb2 -- DDB&lt;br /&gt;Stream --&amp;gt; lambda2
        lambda2(Lambda)
    end

    subgraph &quot;API-4 (AWS)&quot;
        api4[API-4]
        ddb4[(DynamoDB)]
        api4 --&amp;gt; ddb4
        ddb4 -- DDB&lt;br /&gt;Stream --&amp;gt; lambda4
        lambda4(Lambda)
    end

    lambda2 --&amp;gt; datastore
    lambda4 --&amp;gt; datastore

    subgraph &quot;Fastly CDN&quot;
        datastore[(Datastore)]
    end
&lt;/div&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 4: pushing data asynchronously to Fastly‚Äôs KVStores.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;With this mechanism, data in the KVstores is updated after 1 or 2 seconds &lt;em&gt;(we could speed things up a little by not using batching when reading from DynamoDB Streams)&lt;/em&gt;, which is fine for this use-case.&lt;/p&gt;

&lt;p&gt;In addition to this synchronization mechanism, we also implemented a full import process, used to initialize data for all users and subscriptions ‚Äì and to fix a few edge-cases with odd data we didn‚Äôt anticipate.&lt;/p&gt;

&lt;h1 id=&quot;better-resiliency&quot;&gt;&lt;a href=&quot;#better-resiliency&quot;&gt;Better resiliency&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Looking at the architecture schema shared before, one of our Principal Engineers noticed if the BFF backend component is down &lt;em&gt;(possibly because of an overload caused by too many users browsing the catalog)&lt;/em&gt;, it will not return non-personalized layouts. And Compute, at-edge, will not be able to do its personalization work.&lt;/p&gt;

&lt;p&gt;So, we chose to asynchronously pre-generate the non-personalized layouts, and store them on Amazon S3. S3 would then be used as origin by Fastly Compute.&lt;/p&gt;

&lt;div class=&quot;mermaid&quot;&gt;
flowchart LR
    users[Users]
    users --&amp;gt; fastlyVCL

    subgraph Fastly CDN
        fastlyVCL[Fastly&lt;br /&gt;VCL]

        fastlyVCL -- /live --&amp;gt; fastlyCompute
        fastlyCompute[Fastly&lt;br /&gt;Compute]

        datastore[(Datastore)]
        fastlyCompute -.-&amp;gt; datastore
    end

    fastlyCompute -- &quot;read&lt;br /&gt;(with cache)&quot; --&amp;gt; s3
    s3[(S3 Bucket)]

    fastlyVCL -- /* --&amp;gt; bff
    
    bff((BFF))
    bff -- &quot;Generate static&lt;br /&gt;files every X minutes&quot; --&amp;gt; s3
&lt;/div&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 5: storing non-personalized layouts on Amazon S3.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Of course, doing this requires a bit more development work. We‚Äôve had to setup a background cronjob to generate static layouts and store them on S3. But, keeping in mind our &lt;em&gt;‚Äúusers must be able to start a stream‚Äù&lt;/em&gt; goal, we estimated the potential gain on resiliency was worth it. Also, we already had a process to generate static layouts and push them to S3, so it wasn‚Äôt &lt;em&gt;that much&lt;/em&gt; additional work.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;/2024/08/07/euro-resiliency-special-event-page.html&quot;&gt;Special Event Page&lt;/a&gt; helped ensure users would not have to actually call most our backend APIs at all between the homepage and starting a live stream.&lt;/p&gt;

&lt;h1 id=&quot;load-testing-and-real-life&quot;&gt;&lt;a href=&quot;#load-testing-and-real-life&quot;&gt;Load-testing and real life&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;We carefully load-tested this solution, every step of the way while implementing it. Once fully implemented, we load-tested it again and again, to ensure it would handle as much traffic as we were expecting to get during high-stakes matches.&lt;/p&gt;

&lt;p&gt;Doing those load-tests and analyzing their results with our contacts at Fastly helped us identify three points we quickly fixed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;At first, our KVStores‚Äô primary location was in the US. Fastly reconfigured our account to have them primarily located in the EU, gaining several dozen milliseconds of latency each time new users would do their first read.&lt;/li&gt;
  &lt;li&gt;We compiled our Golang code to WASM with both Tinygo and Biggo. One produces WASM that used more CPU, and the other produces WASM that used more RAM. In the end, we followed Fastly‚Äôs recommendations, considering they know better than us what resource could be a bottleneck for their platform.&lt;/li&gt;
  &lt;li&gt;The first time we ran tests in our production environment, results were not great. Far worse than in our staging environment, in fact. Well, we had not paid for the Compute option in our Fastly‚Äôs production account yet, and it was configured with lower rate-limits than in staging üòÉ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During these load-tests as well as during real events later, we monitored a few basic metrics: number of calls per second, CPU and RAM usage, latency and error-rate.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-compute-at-edge/compute-at-edge-monitoring-fastly-censored.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 6: monitoring Fastly‚Äôs Compute during a load-test.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The high number of requests-per second we reached during our load-tests proved Fastly Compute is a viable approach for this workload, and for some others we are already thinking about migrating.&lt;/p&gt;

&lt;p&gt;On our backend‚Äôs application side, we also checked the number of calls per second was going down while it was going up on Compute at-edge. In practice, it went down to 0 for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/live/&lt;/code&gt; route, and remained stable or even went up for other routes, as there were more users browsing the catalog.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-11-compute-at-edge/compute-at-edge-monitoring-backends-censored.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;center&gt;&lt;ins&gt;&lt;strong&gt;Schema 7: Backend (Kubernetes) and Fastly Compute for /live/, before and during a match.&lt;/strong&gt;&lt;/ins&gt;&lt;/center&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;With this approach to generating personalized layouts at-edge for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/live/&lt;/code&gt; route, users of our platform have been able to enjoy the competition without any hiccup!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We personalized millions of live layout on the CDN at-edge, using Fastly Compute, enabling both users and customers to experience pretty much all features of the platform.&lt;/li&gt;
  &lt;li&gt;Our backend BFF and other APIs have not been overloaded. They have been fully operational to serve requests for users browsing the catalog or starting videos on demand.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And this proved edge computing is a viable option to implement some features of our platform. More than this, though, it proved we can separate our BFF software into several smaller parts, which is one of the major ideas we will implement next year while re-architecturing it.&lt;/p&gt;

&lt;p&gt;What are the next steps, then?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First, use Compute at-edge to serve a couple other highly-solicited routes.&lt;/li&gt;
  &lt;li&gt;And, for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/live/&lt;/code&gt; route, implement a few use-cases that were not required for this competition, in order to use Fastly Compute for this route all the time!&lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;p_martin&quot;]</name></author><category term="edge" /><category term="fastly" /><category term="cloud" /><category term="devops" /><category term="2024" /><summary type="html">During the UEFA Euro football cup in June and July 2024, M6 broadcasted several matches. Of course, this competition was available, live, on M6+. For every user joining right from the first second and or for all users hearing their neighbors shouting and wanting to re-watch the action, starting a live video stream had to work!</summary></entry><entry><title type="html">We love speed 2024 ‚ù§Ô∏è</title><link href="https://tech.bedrockstreaming.com/2024/10/29/we-love-speed-2024.html" rel="alternate" type="text/html" title="We love speed 2024 ‚ù§Ô∏è" /><published>2024-10-29T00:00:00+00:00</published><updated>2024-10-29T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/10/29/we-love-speed-2024</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/10/29/we-love-speed-2024.html">&lt;p&gt;Nous avons eu la chance de participer √† la conf√©rence We love speed, une conf√©rence annuelle ax√©e sur la
performance du web. C‚Äôest un domaine qui nous passionne et nous sommes tr√®s content d‚Äôavoir pu y assister.
Le th√®me de cette √©dition, c‚Äôest l‚ÄôINP. En effet, cette m√©trique de performance a √©t√© ajout√©e aux core web vitals par
&lt;a href=&quot;https://developers.google.com/search/blog/2023/05/introducing-inp?hl=fr&quot;&gt;Google &lt;em&gt;r√©cemment&lt;/em&gt;&lt;/a&gt;.
L‚Äôobjectif de cette m√©trique est de refl√©ter l‚Äôexp√©rience utilisateur en mesurant la r√©activit√© d‚Äôune application.
Elle observe le temps entre une action utilisateur et une r√©ponse visuelle de notre interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/team_picture.jpeg&quot; alt=&quot;L&apos;√©quipe frontend √† la we love speed&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;htmx-le-nouvel-atout-pour-vos-projets-ssr---ewen-quimerch&quot;&gt;HTMX, le nouvel atout pour vos projets SSR - &lt;a href=&quot;https://ewen.quimerch.com/&quot;&gt;Ewen Quimerc‚Äòh&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Lors de ce talk, nous avons d√©couvert un outil tr√®s int√©ressant. Il s‚Äôagit de HTMX¬†: une biblioth√®que Javascript qui
permet d‚Äôajouter des fonctionnalit√©s de type SPA (Single Page Application) √† une application web classique et de fa√ßon
non intrusive. Par exemple, on peut surcharger les liens &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; pour qu‚Äôils chargent une nouvelle page en AJAX gr√¢ce √† un
attribut ajout√© au HTML. Ce mode de fonctionnement est tr√®s int√©ressant, car il permet de garder une application web
classique avec tous ses comportements le temps que HTMX se charge. C‚Äôest-a-dire que si HTMX venait √† ne pas d√©marrer,
votre application web se comporterait de la m√™me mani√®re, mais sans les am√©liorations de temps d‚Äôinteraction.&lt;/p&gt;

&lt;p&gt;HTMX surcharge la mani√®re dont vos liens et images vont √™tre charg√©s par le navigateur.
Ainsi, lors de la prochaine interaction, ce dernier sera d√©j√† pr√™t √† servir les ressources.
Le principe de HTMX consiste √† ajouter des balises HTML sp√©cifiques dans le DOM qu‚Äôil va lire et en d√©duire les
comportements √† son chargement.
Cette manipulation est appel√©e le ‚ÄúDOM morphing‚Äù. Gr√¢ce √† ce processus le temps de chargement est r√©duit et on √©vite
l‚Äôeffet ‚Äúblink‚Äù (page blanche lors du chargement de la page).
Il est √† noter que ces comportements ne sont qu‚Äôun embellissement propos√© par HTMX, il est tout √† fait possible
d‚Äôajouter par exemple l‚Äôattribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preload&lt;/code&gt; sur une balise &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; pour demander le chargement en avance du lien par le
navigateur.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;div style=&quot;display: flex&quot;&gt;
&lt;img src=&quot;/images/avatar/j_nginn.jpeg&quot; alt=&quot;Julie&quot; style=&quot;padding: 0;border-radius: 50%; height: 70px; margin: 10px&quot; /&gt;
Comme nous utilisons React pour notre application, l&apos;utilisation de HTMX n&apos;est pas vraiment utile.
Il est d√©j√† possible avec React de pr√©charger les ressources en avance. Mais √ßa reste un outil int√©ressant...
&lt;/div&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;div style=&quot;display: flex&quot;&gt;
...effectivement, HTMX semble √™tre int√©ressant, mais on se retrouve √† ajouter
beaucoup d&apos;attributs dans le HTML. √áa peut le rendre le markup moins lisible. Et en plus, √ßa donne l&apos;impression de recoder les comportements du navigateur.
&lt;img src=&quot;/images/avatar/j_poissonnet.jpg&quot; alt=&quot;Jules&quot; style=&quot;padding: 0;border-radius: 50%; height: 70px; margin: 10px&quot; /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;react--next-vs-inp---jean-pierre-vincent&quot;&gt;React / Next vs INP - &lt;a href=&quot;https://www.linkedin.com/in/jeanpierrevincent/&quot;&gt;Jean-Pierre Vincent&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Le deuxi√®me talk a une place particuli√®re dans notre c≈ìur ‚ù§Ô∏è puisqu‚Äôil a √©t√© donn√© par notre cher Jean-Pierre Vincent,
qui a audit√© les performances du web de Bedrock, il y a deux ans.
Lors de ce talk, Jean-Pierre nous a donn√© la feuille de route pour √©viter au mieux la d√©ferlante de Javascript que vos
utilisateurs re√ßoivent au chargement de votre site.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/js_tsunami.jpeg&quot; alt=&quot;JS Tsunami storming your users&quot; /&gt;&lt;/p&gt;

&lt;p&gt;L‚ÄôINP (Interaction to Next Paint) est une m√©trique qui mesure le temps entre une interaction utilisateur et le prochain
rendu du navigateur. L‚Äôid√©e g√©n√©rale est de pouvoir mesurer l‚Äôincapacit√© du navigateur √† r√©agir. Apr√®s avoir r√©cup√©r√©
des mesures, il est bon de se rappeler qu‚Äôil y a un biais de selection pour les donn√©es de Crux. Pour rappel, Crux est
une base de donn√©es qui contient des m√©triques de performance de sites web collect√©es par Google.
En effet, il n‚Äôest calcul√© que sur les appareils Google (c‚Äôest le principe). Une fois qu‚Äôon a r√©colt√© des m√©triques de
performance de nos utilisateurs, si on veut travailler sur notre site web et avoir une bonne id√©e du ressenti de nos
utilisateurs, l‚Äôid√©al est de tester avec un v√©ritable Samsung S8 par exemple. Le S8 est un appareil sur lequel on a
beaucoup de donn√©es et qui repr√©sente √† l‚Äôheure actuelle une bonne repr√©sentation des capacit√©s de l‚Äôutilisateur moyen.
L‚ÄôINP est une m√©trique qui peut √™tre influenc√©e par des interactions qui ne sont pas pr√©vues par les devs. Par exemple,
on a √©t√© √©tonn√©s de constater que lorsque les temps de chargement sont un poil trop longs √† leur go√ªt, les utilisateurs
se mettent √† cliquer partout ü§∑ C‚Äôest pourquoi il est important de se baser sur des donn√©es r√©elles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/inp_charge.jpeg&quot; alt=&quot;INP est bouscul√© par la charge de js!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Parmi les bonnes pratiques qu‚Äôon peut appliquer d√®s maintenant, et qui je dois le dire m‚Äôa paru un peu contre-intuitif :
faire passer Babel sur les node_modules.
En fait, du point de vue d‚Äôun d√©veloppeur, on peut se dire que cela va augmenter les temps de build drastiquement, et on
aurait s√ªrement raison. Mais en fait, il faut voir le b√©n√©fice qu‚Äôil y a derri√®re. Si on personnalise les r√®gles Babel
afin qu‚Äôelles correspondent aux navigateurs de nos utilisateurs, on √©vite des transformations inutiles qui
augmenteraient le poids de nos fichiers Javascript.&lt;/p&gt;

&lt;p&gt;Une nouvelle fonctionnalit√© de React appel√©e RSC (React Server Components) permet de combiner le rendu c√¥t√© serveur avec
l‚Äôinteractivit√© c√¥t√© client.
Les RSC aident √† r√©duire la taille du Javascript dans le navigateur ce qui permet d‚Äôam√©liorer le temps d‚Äôinteraction et
donc l‚Äôexp√©rience utilisateur. Vous l‚Äôaurez compris, c‚Äôest l‚Äôennemi n¬∞1 de Jean-Pierre (et de vos navigateurs) !
Le principe est de rendre les composants c√¥t√© serveur et de faire en sorte que ces derniers ne rendent que du HTML, qui
ne sera pas hydrat√© c√¥t√© client.
L‚Äô√©tape de r√©hydratation est une √©tape importante et trop souvent sous-estim√©e. Il s‚Äôagit d‚Äôune nouveaut√© de React qui
est prometteuse et qui est d√©j√† pr√©sente dans Next.js.&lt;/p&gt;

&lt;p&gt;Pour nous montrer un exemple concret d‚Äôabus de JavaScript : il a montr√© du code Bedrock üòÖ.
Il s‚Äôagit d‚Äôun FlameGraph du rendu de notre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Footer /&amp;gt;&lt;/code&gt; c√¥t√© app web. Il y a une quantit√© cons√©quente de JS car nous
faisions ce qu‚Äôon appelle du CSS-in-JS.
Vous l‚Äôavez devin√©, c‚Äôest la partie ‚Äúin-JS‚Äù qui pose un probl√®me. Cela signifie que pour appliquer du style sur notre
site, c‚Äôest le Javascript qui s‚Äôen charge. Or dans un composant, comme le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Footer /&amp;gt;&lt;/code&gt;, il y a beaucoup d‚Äô√©l√©ments et
chacun va avoir besoin de son propre style. Si l‚Äôid√©e de colocaliser le CSS dans le JS n‚Äôest pas nocive en soi, le plus
gros probl√®me √©tait l‚Äôutilisation de &lt;a href=&quot;https://styled-components.com/&quot;&gt;Styled-Components&lt;/a&gt; qui calcule le style au moment
du rendu, le rendant donc plus long. FYI¬†: Entre temps, nous avons chez Bedrock entam√© une migration pour quitter
Styled-Components au profit de &lt;a href=&quot;https://linaria.dev/&quot;&gt;Linaria&lt;/a&gt; pour le projet web
et &lt;a href=&quot;https://vanilla-extract.style/&quot;&gt;Vanilla Extract&lt;/a&gt; pour le projet smart TV.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/flamgraph.jpeg&quot; alt=&quot;Flamegraph du Footer de Bedrock&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Autre information qui nous concerne chez Bedrock, au moment d‚Äô√©crire ces lignes, nous sommes en train de mettre en
production la migration de React 17 vers React 18 sur le projet web.
D‚Äôapr√®s les retours d‚Äôexp√©rience de Jean-Pierre, cette version de React aura un impact positif sur l‚ÄôINP car il permet
de faire moins de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Enfin, Jean-Pierre nous laisse avec un ultime conseil pour que nos applications web soient p√©rennes : ‚ÄúMonitore (au
moins une fois dans ta vie) l‚Äôorigine des INP avec un vrai utilisateur.‚Äù&lt;/p&gt;

&lt;blockquote&gt;
  &lt;div style=&quot;display: flex&quot;&gt;
&lt;img src=&quot;/images/avatar/j_nginn.jpeg&quot; alt=&quot;Julie&quot; style=&quot;padding: 0;border-radius: 50%; height: 70px; margin: 10px&quot; /&gt;
J&apos;ai bien aim√© ce talk ! J&apos;ai trouv√© que sa pr√©sentation √©tait tr√®s accessible, il a su vulgariser des concepts et rendre un sujet fastidieux (la performance) int√©ressant üëè
&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;d√©bogage-des-performances-√†-laide-des-devtools--mise-en-pratique-approfondie---umar-hansa&quot;&gt;D√©bogage des performances √† l‚Äôaide des DevTools : Mise en pratique approfondie - &lt;a href=&quot;https://umaar.com/&quot;&gt;Umar Hansa&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Avoir un ≈ìil sur ses performances est essentiel pour avancer dans la bonne direction et s‚Äôassurer qu‚Äôon
fournit √† nos utilisateurs une exp√©rience optimale. Fort heureusement pour nous les devs, on est bien lotis avec de tr√®s
bons outils. Il suffit d‚Äôouvrir les Chrome DevTools pour s‚Äôen rendre compte. Ce talk nous a pr√©sent√© comment bien
utiliser les DevTools pour mesurer les performances de nos applications web et se mettre √† la place de
nos utilisateurs. Par exemple, on peut brider son r√©seau et son CPU pour simuler une connexion 3G et un CPU lent. Dans
cette pr√©sentation, on nous a quand m√™me rappel√© que les DevTools ne sont pas une solution miracle, il est important de
tester sur de vrais devices pour le ressenti.&lt;/p&gt;

&lt;p&gt;Pour ce qui est de l‚Äôinterpr√©tation des donn√©es, une myriade d‚Äôoutils est √† notre disposition pour nous aider √†
comprendre ce que nous voyons. Par exemple, on peut ajouter des annotations dans le flamegraph comme des labels, des
diagrammes ou encore des plages de temps. On peut aussi mettre en place des custom tracks pour suivre des √©v√©nements
sp√©cifiques. Au sein de notre application, on peut utiliser l‚ÄôAPI User Timing pour ajouter des points de rep√®re dans
notre code et ainsi mieux comprendre ce qui se passe au d√©clenchement d‚Äô√©v√©nements sp√©cifiques.&lt;/p&gt;

&lt;h2 id=&quot;web-performance-testing---estela-franco&quot;&gt;Web Performance Testing - &lt;a href=&quot;https://x.com/guaca&quot;&gt;Estela Franco&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Nous avons √©galement eu un talk sur l‚Äôint√©gration de Lighthouse, un outil de Google pour mesurer la performance de nos
applications web, dans une CI. Cela permet de d√©tecter les probl√®mes de performance avant qu‚Äôils ne soient d√©ploy√©s en
production. Il est possible de mettre des warnings, voire des erreurs emp√™chant de merger, si l‚Äôapplication ne respecte
pas les standards que nous nous sommes fix√©s. L‚Äôid√©e est de s‚Äôassurer que la performance de
notre application web est toujours au top et ne se d√©grade pas dans le temps.
&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/Key%20Takeaways.jpeg&quot; alt=&quot;Key takeaways from the talk&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;div style=&quot;display: flex&quot;&gt;
&lt;img src=&quot;/images/avatar/j_nginn.jpeg&quot; alt=&quot;Julie&quot; style=&quot;padding: 0;border-radius: 50%; height: 70px; margin: 10px&quot; /&gt;
On envisage de l&apos;ajouter au projet smart TV, mais plus pour g√©n√©rer un rapport de performance quotidien plut√¥t que de le faire pour chaque push ou merge. 
&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;comment-les-navigateurs-chargent-vraiment-les-pages-web---robin-marx&quot;&gt;Comment les navigateurs chargent VRAIMENT les pages web - &lt;a href=&quot;https://x.com/programmingart&quot;&gt;Robin Marx&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Dans ce qui est probablement le talk le plus technique de la journ√©e, on nous a expliqu√© comment les navigateurs
chargent les diff√©rentes ressources n√©cessaires √† l‚Äôaffichage d‚Äôune page web. Plus sp√©cifiquement, on nous a expliqu√©
comment les navigateurs interpr√®tent le HTML pour d√©terminer quelles ressources charger en priorit√©.&lt;/p&gt;

&lt;p&gt;Le talk √©tait tr√®s int√©ressant, mais la conclusion est un peu frustrante : il est pour le moment impossible de pr√©voir
l‚Äôordre de chargement des ressources par le navigateur √† partir du m√™me HTML. En effet, les navigateurs ont des
comportements diff√©rents entre eux et m√™me par version ü§Ø. Chrome a, par exemple, un comportement tr√®s diff√©rent cette
ann√©e
par rapport √† deux ans en arri√®re.&lt;/p&gt;

&lt;p&gt;M√™me si on est tent√© de vouloir contr√¥ler le chargement des ressources, il est important de se rappeler que le
navigateur
est tr√®s bien optimis√© pour charger les ressources de mani√®re efficace. Il est donc pr√©f√©rable de laisser le navigateur
faire son travail plut√¥t que de vouloir le contr√¥ler. L‚Äôattribut &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preload&lt;/code&gt; est un bon exemple de ce que l‚Äôon peut faire
pour aider le navigateur √† charger les ressources de mani√®re plus efficace. Il faut cependant l‚Äôutiliser avec parcimonie
et de mani√®re chirurgicale pour ne pas interf√©rer avec le travail du navigateur.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/preload_surgical.jpeg&quot; alt=&quot;Preload with surgical precision&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mais-que-fait-la-police----eroan-boyer&quot;&gt;Mais que fait la police ? - &lt;a href=&quot;https://x.com/eroan&quot;&gt;Eroan Boyer&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Pour finir, on a eu un talk sur les polices de caract√®res. Elles sont essentielles pour l‚Äôidentit√© visuelle de nos
applications web, mais elles peuvent aussi √™tre une source de probl√®mes de performance. En effet, les polices de
caract√®res peuvent √™tre tr√®s lourdes et ralentir le chargement de nos pages. Il est donc important de bien les choisir
et de les optimiser pour garantir une bonne performance. Il existe plusieurs techniques pour optimiser les polices,
notamment en r√©alisant un subset de la police pour ne t√©l√©charger que les glyphes dont on a besoin. (En fran√ßais, on a
besoin que de 165 glyphes, compar√© √† 528 pour le latin).
Il existe des outils pour nous aider √† r√©aliser ces subsets
comme¬†: &lt;a href=&quot;https://everythingfonts.com/subsetter&quot;&gt;Font Subsetter&lt;/a&gt;, &lt;a href=&quot;https://fonttools.readthedocs.io/&quot;&gt;fontTools&lt;/a&gt; ou
&lt;a href=&quot;https://www.zachleat.com/web/glyphhanger/&quot;&gt;Glyphanger&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;div style=&quot;display: flex&quot;&gt;
Attention √† ne pas abuser des subsets, car cela peut entra√Æner des probl√®mes de lisibilit√© du texte. Le fameux tü†âfu .
&lt;img src=&quot;/images/avatar/j_poissonnet.jpg&quot; alt=&quot;Jules&quot; style=&quot;padding: 0;border-radius: 50%; height: 70px; margin: 10px&quot; /&gt;
&lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-29-we-love-speed-2024/tofu.jpeg&quot; alt=&quot;Say no to tofu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il est aussi possible de minimiser le nombre de fichiers en utilisant des polices variables. Un bon exemple est la
police Roboto Flex, qui est customisable et permet ainsi de pouvoir r√©duire le nombre de fichiers n√©cessaires √† charger.
Il est l√† aussi, possible de s√©lectionner les variations que l‚Äôon souhaite pour r√©duire encore plus le poids de la
police.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Cette ann√©e, l‚Äôaccent a √©t√© mis sur l‚ÄôINP et la mani√®re de l‚Äôam√©liorer. Il est important de garder en t√™te que l‚ÄôINP est
une m√©trique qui mesure l‚Äôexp√©rience utilisateur, il est donc essentiel de la garder √† l‚Äô≈ìil. Il est bon de
rappeler que la performance est plus une habitude √† prendre qu‚Äôun constat √† r√©aliser. Une application performante, c‚Äôest
une exp√©rience utilisateur am√©lior√©e et des utilisateurs satisfaits !&lt;/p&gt;

&lt;p&gt;De notre c√¥t√©, nous sommes rentr√©s avec quelques id√©es √† mettre en place dans nos projets √† Bedrock, notamment¬†:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Etudier la possibilit√© d‚Äôajouter des React Server Components pour r√©duire le poids de notre JS&lt;/li&gt;
  &lt;li&gt;Mettre en place des tests de performance dans notre CI avec Lighthouse CI&lt;/li&gt;
  &lt;li&gt;V√©rifier que nos polices de caract√®res sont bien optimis√©es pour la performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Notre √©quipe est ressortie de cette conf√©rence ravie et avec de nouvelles id√©es qui vont surement nous suivre sur nos
projets personnels aussi. La We love speed ‚ù§Ô∏è est une conf√©rence √† ne pas manquer pour tous les passionn√©s de
performance web, on vous recommande chaudement d‚Äôy assister si vous en avez l‚Äôoccasion !&lt;/p&gt;</content><author><name>[&quot;j_nginn&quot;, &quot;j_poissonnet&quot;]</name></author><category term="performance" /><category term="conference" /><category term="webperf" /><category term="javascript" /><category term="react" /><category term="web" /><category term="frontend" /><summary type="html">Nous avons eu la chance de participer √† la conf√©rence We love speed, une conf√©rence annuelle ax√©e sur la performance du web. C‚Äôest un domaine qui nous passionne et nous sommes tr√®s content d‚Äôavoir pu y assister. Le th√®me de cette √©dition, c‚Äôest l‚ÄôINP. En effet, cette m√©trique de performance a √©t√© ajout√©e aux core web vitals par Google r√©cemment. L‚Äôobjectif de cette m√©trique est de refl√©ter l‚Äôexp√©rience utilisateur en mesurant la r√©activit√© d‚Äôune application. Elle observe le temps entre une action utilisateur et une r√©ponse visuelle de notre interface.</summary></entry><entry><title type="html">Enhancing Production Monitoring with New Relic</title><link href="https://tech.bedrockstreaming.com/2024/10/03/enhancing-production-monitoring-with-newrelic.html" rel="alternate" type="text/html" title="Enhancing Production Monitoring with New Relic" /><published>2024-10-03T00:00:00+00:00</published><updated>2024-10-03T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/10/03/enhancing-production-monitoring-with-newrelic</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/10/03/enhancing-production-monitoring-with-newrelic.html">&lt;p&gt;At &lt;em&gt;Bedrock&lt;/em&gt;, we develop a streaming solution tailored for European media companies. Our application is a customizable white-label product used by millions across Europe. Bedrock‚Äôs clients have high expectations for stability, early incident detection, quick resolution, and effective communication during those times. Naturally, our goal is to deliver a stable product, and we dedicate significant effort toward this objective.&lt;/p&gt;

&lt;p&gt;However, about two and a half years ago, our mobile team faced serious challenges in monitoring production. The tagging systems were pushing events into a tool that developers were not kin to use. The graphs were not intuitive and difficult to generate, making them hard to interpret. Each team across the company was managing its own monitoring practices. Monitoring was largely manual.&lt;br /&gt;
Too many problems were brought to the attention of the team by a complaint of our client to the support team. We knew we had to make a change.&lt;/p&gt;

&lt;p&gt;Several organization-wide measures were implemented (like tools to streamline incident reporting and improved communication processes with our clients), but on the tech side, we also needed to play our part.&lt;/p&gt;

&lt;h2 id=&quot;setting-our-goals-and-expectations&quot;&gt;Setting Our Goals and Expectations&lt;/h2&gt;

&lt;p&gt;We began by defining our goals:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Confidence in Releases: We needed certainty that what we shipped was functioning as expected.&lt;/li&gt;
  &lt;li&gt;Standardized Practices: It was crucial to align monitoring practices and tagging plans across teams.&lt;/li&gt;
  &lt;li&gt;Early Problem Detection: Our goal was to identify issues as early as possible.&lt;/li&gt;
  &lt;li&gt;Quick Data for Support Teams: We aimed to swiftly provide support with relevant metrics, such as the number of users impacted and the duration of incidents.&lt;/li&gt;
  &lt;li&gt;Developer Adoption: The selected tool had to be user-friendly, offering easy graph creation, visually appealing layouts, straightforward querying, and an ergonomic interface.&lt;/li&gt;
  &lt;li&gt;Automated Alerts: We needed a system that could automatically alert us of potential issues.&lt;/li&gt;
  &lt;li&gt;Configuration Portability: Regularly exporting our dashboards and alerts configuration was key, ensuring we could redeploy the setup if needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bedrock chose New Relic. It‚Äôs important to note that this is not the only monitoring tool available, and we‚Äôre not claiming that others can‚Äôt meet our needs (we didn‚Äôt explore them deeply enough to say). What we do know is that New Relic has been widely adopted across our tech teams and has proven to be an effective solution to reach our requirements.&lt;/p&gt;

&lt;h2 id=&quot;our-implementation-path&quot;&gt;Our Implementation Path&lt;/h2&gt;

&lt;p&gt;Here‚Äôs the approach we took:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shared Documentation: We created unified documentation for technical tagging plans across front-end teams, organized by domain and feature.&lt;/li&gt;
  &lt;li&gt;Common Dashboards: We developed shared dashboards for the Android and iOS teams, organized by domain (e.g., one for the Player, one for the Core, one for User Life Cycle, and one for iOS-specific features).&lt;/li&gt;
  &lt;li&gt;Automated Notifications: A Slack notification system was set up to alert teams whenever the documentation changes, ensuring everyone stays informed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;advanced-queries-with-new-relic-insights&quot;&gt;Advanced Queries with New Relic Insights&lt;/h2&gt;

&lt;p&gt;New Relic Insights, powered by NRQL (New Relic Query Language), allows developers to create powerful queries to extract specific information. Below, we illustrate how various NRQL queries translate into different types of graphs and charts on our dashboard:&lt;/p&gt;

&lt;h3 id=&quot;example-1-count-query-with-line-chart&quot;&gt;Example 1: Count Query with Line chart&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; SELECT count(*) 
 FROM Actions 
 WHERE actionName = &apos;LoginAction&apos; 
 FACET status, authenticationMethod 
 TIMESERIES auto 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This query counts the number of occurrences of the ‚ÄòLoginAction‚Äô event, faceted by the status and authenticationMethod fields. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TIMESERIES&lt;/code&gt; auto clause visualizes this count over time, showing trends or spikes in login activity.&lt;/p&gt;

&lt;p&gt;How It Renders: The line chart displays the count of login actions over time, with different lines for each combination of status and authentication method (Google, Apple, Email). This allows us to track how login activity changes over time and to compare different types of logins or statuses.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-03-enhancing-production-monitoring-with-newrelic/barchart.png&quot; alt=&quot;Bar chart rendering&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;example-2-count-query-with-pie-chart&quot;&gt;Example 2: Count Query with Pie chart&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; SELECT count(*), WHERE status = &apos;error&apos; 
 FROM Actions 
 WHERE actionName = &apos;LoginAction&apos; 
 FACET authenticationMethod, errorCode 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This query counts the number of login actions that resulted in errors, faceting by authenticationMethod (Google, Apple, Email) and errorCode. It helps identify which authentication methods and error codes are most common.&lt;/p&gt;

&lt;p&gt;How It Renders: The pie chart visualizes the distribution of login errors across different authentication methods and error codes. Each slice represents the proportion of errors associated with a particular method or error code, making it easy to see which are most problematic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-03-enhancing-production-monitoring-with-newrelic/piechart.png&quot; alt=&quot;Pie chart rendering&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;example-3-percentage-query-with-billboard-chart&quot;&gt;Example 3: Percentage Query with Billboard chart&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; SELECT 100 - percentage(count(*), WHERE status = &apos;error&apos;)  
 as `Successful login` 
 FROM Actions 
 WHERE actionName = &apos;LoginAction&apos; 
 SINCE 2 hours ago 
 COMPARE WITH 1 day ago  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This query calculates the percentage of successful login actions (i.e., those that did not result in errors) within the last two hours, compared to the same period one day ago. It helps track success rates and identify any improvements or declines in login performance.&lt;/p&gt;

&lt;p&gt;How It Renders: The billboard chart prominently displays the percentage of successful logins as a large, bold number. The comparison with the previous day is also displayed, allowing for quick assessment of whether the success rate has improved or worsened.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-03-enhancing-production-monitoring-with-newrelic/billboardchart.png&quot; alt=&quot;Billboard chart rendering&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;example-4-funnel-query&quot;&gt;Example 4: Funnel Query&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   SELECT funnel(sessionId AS session, 
   WHERE name = &apos;EmailValidationStatus&apos; AND isVerified IS false AS &apos;email not verified&apos;, 
   WHERE name = &apos;EmailNotVerifiedPageOpe&apos; AS &apos;email validation page opened&apos;), 
   WHERE name = &apos;LayoutPageOpen‚Äô AS &apos;one layout event is called &apos;) 
   FROM Actions 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This funnel query tracks user sessions through key steps in an email verification process. It identifies users with unverified emails and checks if they opened the email validation page. This helps monitor conversion rates and potential drop-offs in the user journey.&lt;/p&gt;

&lt;p&gt;How It Renders: The funnel chart visualizes the sequence of user actions, showing the number of users at each step of the email verification process. This makes it easy to see where users drop off and which steps might need improvement.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-10-03-enhancing-production-monitoring-with-newrelic/funnelchart.png&quot; alt=&quot;Funnel chart rendering&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuring-alerts-with-new-relic&quot;&gt;Configuring Alerts with New Relic&lt;/h2&gt;

&lt;p&gt;When setting up New Relic alerts, we used both static and anomaly thresholds based on the feature‚Äôs behaviour:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Static Thresholds: Applied to features with predictable, consistent performance, where specific limits are well-defined.&lt;br /&gt;
For example, we used static thresholds for the Login/Register and Consent features, where behaviour is stable and deviations are easily identifiable.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Anomaly Detection: Used for features with dynamic patterns where a fixed threshold isn‚Äôt suitable. 
We applied anomaly detection for example to the Payment feature since transaction patterns can vary significantly based on many factors.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This combination allows us to accurately monitor both stable and variable features.&lt;/p&gt;

&lt;h3 id=&quot;alert-policies&quot;&gt;Alert Policies&lt;/h3&gt;

&lt;p&gt;An alert policy determines who should be notified when an alert is triggered. It defines notification channels, user groups, and actions to take. To create an alert policy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to ‚ÄúAlerts &amp;amp; AI‚Äù in your New Relic dashboard.&lt;/li&gt;
  &lt;li&gt;Create a new alert policy and define the actions to take when an alert is triggered.&lt;/li&gt;
  &lt;li&gt;Associate the policy with the channels or emails that should receive the alert notifications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;alert-conditions&quot;&gt;Alert Conditions&lt;/h3&gt;

&lt;p&gt;Alert conditions define the thresholds at which an alert should be triggered. To configure an alert condition:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In your New Relic dashboard, go to ‚ÄúAlerts &amp;amp; AI.‚Äù&lt;/li&gt;
  &lt;li&gt;Create a new alert condition by specifying criteria such as response time or error rate.&lt;/li&gt;
  &lt;li&gt;Define the thresholds and conditions necessary to trigger the alert. You can use anomaly detection or static thresholds depending on your feature needs.&lt;/li&gt;
  &lt;li&gt;Associate this condition with the specific alert policy you have defined.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-of-alerts-with-terraform&quot;&gt;Code of alerts with Terraform&lt;/h3&gt;

&lt;p&gt;Here‚Äôs a simple example of Terraform code to configure an alert condition that triggers when a spike in login errors (critical or warning) is detected:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  resource &quot;newrelic_nrql_alert_condition&quot; &quot;authentication_login_error&quot; { 
  account_id                   = &quot;account_id&quot; 
  policy_id                    = &quot;policy_id&quot; 
  type                         = &quot;static&quot; 
  name                         = &quot;authentication_login_error&quot; 
  description                  = &quot;This alert fires when the % of login errors gets too high in a given time&quot; 
  enabled                      = true 
  violation_time_limit_seconds = 259200 

  nrql { 
    query = &quot;SELECT percentage(count(*), WHERE status = &apos;error&apos;) * IF(count(*)&amp;lt;100, 0, 1) FROM Actions WHERE actionName = &apos;LoginAction&apos;&quot; 
  } 

  critical { 
    operator              = &quot;above&quot; 
    threshold             = 10 
    threshold_duration    = 3600 
    threshold_occurrences = &quot;all&quot; 
    
  } 

  warning { 
    operator              = &quot;above&quot; 
    threshold             = 8 
    threshold_duration    = 3600 
    threshold_occurrences = &quot;all&quot; 

  } 

  fill_option        = &quot;none&quot; 
  aggregation_window = 3600 
  aggregation_method = &quot;event_flow&quot; 
  aggregation_delay  = 600 
} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explanation:&lt;/p&gt;

&lt;p&gt;This Terraform script configures an NRQL static alert condition for monitoring login errors. The alert triggers if the percentage of login errors exceeds a threshold. The NRQL query calculates the error percentage and multiplies it by 0 if the event count is less than 100 (to avoid false positives from low activity). The critical condition triggers if the error rate is above 10% for at least 1 hour. The warning condition triggers if the error rate is above 8% for the same duration.  The script also sets up an aggregation window and delay to smooth out any short-lived spikes. Once this condition is met, an alert is sent to the Slack channel configured in the previous steps.&lt;/p&gt;

&lt;h2 id=&quot;brighter-outlook-with-enhanced-monitoring&quot;&gt;Brighter Outlook with Enhanced Monitoring&lt;/h2&gt;

&lt;p&gt;Now, with our new monitoring solution in place, we‚Äôre seeing a significant improvement in how we handle critical issues. Alerts are delivered instantly, allowing us to respond to problems as they arise. Even when we receive warnings, we can act proactively to prevent potential issues from escalating.&lt;/p&gt;

&lt;p&gt;This immediate and precise alerting system ensures that our dedicated teams whether they handle backend issues or other areas are promptly informed and can address concerns before they impact our users. This proactive approach not only enhances our overall performance but also improves our operational efficiency.&lt;/p&gt;

&lt;p&gt;Overall, this solution has proven to be more effective and practical for our project, enabling us to maintain higher levels of stability and deliver a better experience for our clients. We‚Äôre confident that this improvement will continue to support our success and growth moving forward.&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://newrelic.com/blog/how-to-relic/steal-this-dashboard&quot;&gt;Steal this dashboard&lt;/a&gt;&lt;/p&gt;</content><author><name>[&quot;m_benali&quot;, &quot;m_julieron&quot;]</name></author><category term="monitoring" /><category term="production" /><category term="newrelic" /><category term="shared practice" /><category term="alerting" /><summary type="html">At Bedrock, we develop a streaming solution tailored for European media companies. Our application is a customizable white-label product used by millions across Europe. Bedrock‚Äôs clients have high expectations for stability, early incident detection, quick resolution, and effective communication during those times. Naturally, our goal is to deliver a stable product, and we dedicate significant effort toward this objective.</summary></entry><entry><title type="html">How to manage hundreds of view templates?</title><link href="https://tech.bedrockstreaming.com/2024/08/22/how-to-manage-hundreds-of-templates.html" rel="alternate" type="text/html" title="How to manage hundreds of view templates?" /><published>2024-08-22T00:00:00+00:00</published><updated>2024-08-22T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2024/08/22/how-to-manage-hundreds-of-templates</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2024/08/22/how-to-manage-hundreds-of-templates.html">&lt;p&gt;Let‚Äôs dive together into the depths of a large scale template versioning for a white label streaming application.&lt;/p&gt;

&lt;h2 id=&quot;the-context&quot;&gt;The context&lt;/h2&gt;

&lt;p&gt;Today, at &lt;strong&gt;Bedrock&lt;/strong&gt;, we are providing a streaming service on:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;11 common &lt;strong&gt;CTV&lt;/strong&gt; platforms: Tizen, Philips, WebOS, Hisense, Panasonic, Orange, Xbox, PS4, Orsay, Smart Alliance, WhaleOS&lt;/li&gt;
  &lt;li&gt;6 &lt;strong&gt;Android&lt;/strong&gt; platforms: mobile, AndroidTV, Bytel, Free, SFR, FireTV&lt;/li&gt;
  &lt;li&gt;2 &lt;strong&gt;Apple&lt;/strong&gt; platforms: iOS / tvOS&lt;/li&gt;
  &lt;li&gt;1 &lt;strong&gt;Web&lt;/strong&gt; platform&lt;/li&gt;
  &lt;li&gt;a lot of specific devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these platforms has their own guidelines and usage (interaction, screen sizes, etc) and is managed by a dedicated team in our organization. They also have their own native &lt;strong&gt;design components&lt;/strong&gt; which our implementations rely on to offer the best possible experience.&lt;/p&gt;

&lt;p&gt;Bedrock has several clients (M6+, Videoland and others), that all have their dedicated application on each platform. But they also have their own design expectations and branding guidelines.&lt;br /&gt;
We provide them with a &lt;strong&gt;design system&lt;/strong&gt;: a set of visual assets they can use to render pages. These components follow the atomic design model, which means that each layer is a composition of the previous one. Here is the list of the layers with their name and some items that belong to it:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;14 &lt;strong&gt;tokens&lt;/strong&gt;: base element that defines the brand (ex: Colors, FontSystem, Radius, Shadow, Breakpoints, Treatments‚Ä¶)&lt;/li&gt;
  &lt;li&gt;9 &lt;strong&gt;atoms&lt;/strong&gt;: simplest design item that cannot be decomposed (ex: Icons, Avatar, CheckBox, ProgressBar, ServiceIcon, Separator‚Ä¶)&lt;/li&gt;
  &lt;li&gt;62 &lt;strong&gt;molecules&lt;/strong&gt;: group of atoms that forms a visual unity (ex: Card, Poster, HorizontalCard, Button, CTA, Portrait, Totem‚Ä¶)&lt;/li&gt;
  &lt;li&gt;12 &lt;strong&gt;organisms&lt;/strong&gt;: complex visual item or part of the interface (ex: Jumbotron, Hero, Solo, Banner‚Ä¶)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hereunder are some sample screens composed of design system components for different customers:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/home-m6plus.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/home-videoland.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/home-rtlhu.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This results in approximately one hundred design elements per client. However, not all components are always specific, and an &lt;strong&gt;inheritance&lt;/strong&gt; system is in place to allow clients to reuse default atoms, molecules, or organisms while applying the tokens corresponding to their brand.&lt;/p&gt;

&lt;p&gt;The objectives and expectations regarding the design vary greatly among clients, resulting in &lt;strong&gt;numerous graphical element evolutions&lt;/strong&gt;. Managing the creation and progression of these elements through different processes is a major challenge in tracking designs across each platform. These demands sometimes lead to &lt;strong&gt;different integrations&lt;/strong&gt;. Whether or not the default design is inherited is crucial information to avoid manually comparing the app designs with documentation, which can lead to misunderstandings and wasted time during validation and approval processes.&lt;br /&gt;
To achieve all these objectives, we need to be able to carefully follow the evolution of the design system on each plateform.&lt;/p&gt;

&lt;h2 id=&quot;one-versioning-to-rule-them-all&quot;&gt;One versioning to rule them all&lt;/h2&gt;

&lt;p&gt;Therefore, implementing a versioning system became essential to continue enriching and evolving our client‚Äôs design systems.&lt;br /&gt;
To ensure its interest and effectiveness, this system had to address several issues:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Be specific&lt;/strong&gt; per platform and per client: evolution progress does not occur at the same pace across all platforms. This also allows for comparing design progress between platforms.&lt;/li&gt;
  &lt;li&gt;Allow &lt;strong&gt;visualizing the inheritance&lt;/strong&gt; between the default design system and the client‚Äôs specific part on the same platform. We also wanted the ability to add comments on implementation details.&lt;/li&gt;
  &lt;li&gt;Be &lt;strong&gt;directly accessible&lt;/strong&gt; with each build to stay in touch with the application it represents. On mobile, many builds are generated daily, making it difficult to track the arrival of new features.&lt;/li&gt;
  &lt;li&gt;Stay &lt;strong&gt;up-to-date&lt;/strong&gt; with the constant evolutions of the design system to maintain the source of truth.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Exemple of a Design System release note:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/design-release-note.png&quot; alt=&quot;Release note of the design system&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Initially, the design team started by versioning its releases and all available components, which are accessible to technical teams in our online design documentation (hosted on &lt;a href=&quot;https://zeroheight.com/&quot;&gt;zeroheight&lt;/a&gt;). This versioning is &lt;strong&gt;common to all platforms&lt;/strong&gt; and all clients if there are no specificities for the component in question. Ultimately, versioning helps product and technical teams track the delivery progress of new designs. The version number follows these rules:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Code status&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Stage&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Rule&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;First release&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;New collection&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Documentation update without impact on the anatomy of design element&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Documentation update&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Increment the third digit&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.0.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;New backward-compatible feature&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Minor release&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Increment the 2nd digit and reset the third&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.1.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Change on element that breaks backward compatibility&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Major release&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Increment the first digit and reset the second and the third&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.0.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Each frontend team were then responsible for implementing an equivalent versioning system representing the state of their platform. This was done through a &lt;strong&gt;feature team&lt;/strong&gt; including all front-end teams, design system managers, and the product team. This organization brought numerous benefits:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Facilitating the &lt;strong&gt;synchronization&lt;/strong&gt; and homogeneity of product templates&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sharing&lt;/strong&gt; development challenges&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Limiting&lt;/strong&gt; versioning differences between all fronts&lt;/li&gt;
  &lt;li&gt;Sharing &lt;strong&gt;industrialization&lt;/strong&gt; ideas&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;case-study-android-versioning-challenges&quot;&gt;Case study: Android versioning challenges&lt;/h2&gt;

&lt;p&gt;For Android, we sometimes have different component implementations between mobile and TV, evolving at different paces. This required &lt;strong&gt;two separate versionings&lt;/strong&gt; to represent them. Moreover, we currently use comments to track the migration to Google‚Äôs new view system (Compose), which is happening alongside graphical evolutions.&lt;br /&gt;
Each client has its &lt;strong&gt;versioning file&lt;/strong&gt; containing all the components available on the targeted platform. Regarding component inheritance from the default design system, there are two possibilities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The component is &lt;strong&gt;inherited&lt;/strong&gt; and thus has no specificities and no version in the client‚Äôs versioning file, using the generic Bedrock customer version&lt;/li&gt;
  &lt;li&gt;It has its &lt;strong&gt;own implementation&lt;/strong&gt; and its associated version&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Default Versioning file&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Customer Versioning file&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/versioning-file-default.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/versioning-file-customer.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;From these &lt;strong&gt;versioning files&lt;/strong&gt;, we have been able to generate &lt;strong&gt;reports&lt;/strong&gt; for each platform containing only the available graphical elements and their version, whether inherited or not. To track their growing number, we opted for automatic generation of these reports with each build using a Gradle Plugin integrated on our continuous deployment and integration (CI/CD): &lt;a href=&quot;https://bitrise.io/&quot;&gt;Bitrise&lt;/a&gt;. Now, they are generated using a &lt;a href=&quot;https://www.mkdocs.org/&quot;&gt;Mkdocs&lt;/a&gt; plugin to be published online automatically with our technical documentation.&lt;/p&gt;

&lt;p&gt;Automatically generated template versioning report for M6+:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2024-08-22-how-to-manage-hundreds-of-templates/template-versioning-report.png&quot; alt=&quot;Template versioning report for a customer&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Design system versioning reports offer a &lt;strong&gt;quick and exhaustive overview&lt;/strong&gt; of the design system at any given moment for any of our customers and simplifies the QA teams validation work. It is now an essential tool for tracking design progress across all supported platforms.&lt;/p&gt;

&lt;p&gt;However, improvements are always possible:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Currently, developers are responsible for &lt;strong&gt;updating the versioning file&lt;/strong&gt; when adding or modifying graphical elements, which can lead to errors and omissions. To avoid this, we would like to link the concrete implementation of the component and its version in the versioning file. But as we are still using the android legacy view system, component can be a class but also some xml style or theme or even resource files. This should be easier after the migration to the new Android view system Compose.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Access through Bitrise&lt;/strong&gt; is not ideal. We currently centralize all generated builds (using CI as well) in &lt;a href=&quot;https://www.airtable.com/&quot;&gt;Airtable&lt;/a&gt;. A link would be preferable and more visible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These last improvements will perhaps be the subject of a follow-up to this article. Thank you for reading, we hope you found some useful information that can help you to better follow the graphical evolution of your project. Do not hesitate to contact us if you have some questions or suggestions.&lt;/p&gt;</content><author><name>[&quot;d_cuny&quot;, &quot;m_oudji&quot;]</name></author><category term="android" /><category term="versioning" /><category term="design" /><category term="atomic design" /><category term="design system" /><summary type="html">Let‚Äôs dive together into the depths of a large scale template versioning for a white label streaming application.</summary></entry></feed>