<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://tech.bedrockstreaming.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tech.bedrockstreaming.com/" rel="alternate" type="text/html" /><updated>2023-03-30T09:13:45+00:00</updated><id>https://tech.bedrockstreaming.com/feed.xml</id><title type="html">Bedrock Tech Blog</title><subtitle>Blog technique de Bedrock</subtitle><entry><title type="html">De Node.js 10 √† Node.js 18, nous avons rattrap√© 8 ans de retard et de dette technique</title><link href="https://tech.bedrockstreaming.com/2023/03/25/de-node-js-10-a-node-js-18-nous-avons-rattrape-8-ans-de-retard-et-de-dette-technique-et-seule-une-approche-progressive-et-incrementale-etait-viable.html" rel="alternate" type="text/html" title="De Node.js 10 √† Node.js 18, nous avons rattrap√© 8 ans de retard et de dette technique" /><published>2023-03-25T00:00:00+00:00</published><updated>2023-03-25T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/03/25/de-node-js-10-a-node-js-18-nous-avons-rattrape-8-ans-de-retard-et-de-dette-technique-%E2%80%94-et-seule-une-approche-progressive-et-incrementale-etait-viable</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/03/25/de-node-js-10-a-node-js-18-nous-avons-rattrape-8-ans-de-retard-et-de-dette-technique-et-seule-une-approche-progressive-et-incrementale-etait-viable.html">&lt;p&gt;Difficile de faire √©voluer des applications et am√©liorer une stack si l‚Äôensemble est bas√© sur une version obsol√®te de Node.js‚Ä¶ Dans cet article, nous verrons comment nous avons r√©ussi √† migrer vers une version r√©cente et maintenue de Node.js gr√¢ce √† une approche progressive et incr√©mentale.&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#contexte-g√©n√©ral-et-fonctionnel&quot; id=&quot;markdown-toc-contexte-g√©n√©ral-et-fonctionnel&quot;&gt;Contexte g√©n√©ral et fonctionnel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contexte-technique&quot; id=&quot;markdown-toc-contexte-technique&quot;&gt;Contexte technique&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#objectif&quot; id=&quot;markdown-toc-objectif&quot;&gt;Objectif&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#une-premi√®re-strat√©gie-probl√©matique--la-m√©thode-rhinoc√©ros-&quot; id=&quot;markdown-toc-une-premi√®re-strat√©gie-probl√©matique--la-m√©thode-rhinoc√©ros-&quot;&gt;Une premi√®re strat√©gie probl√©matique : la m√©thode ‚Äúrhinoc√©ros‚Äù ü¶è&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#la-strat√©gie-gagnante--une-migration-progressive-&quot; id=&quot;markdown-toc-la-strat√©gie-gagnante--une-migration-progressive-&quot;&gt;La strat√©gie gagnante : une migration progressive üì∂&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#motivation&quot; id=&quot;markdown-toc-motivation&quot;&gt;Motivation&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#plan-daction&quot; id=&quot;markdown-toc-plan-daction&quot;&gt;Plan d‚Äôaction&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#difficult√©s-rencontr√©es&quot; id=&quot;markdown-toc-difficult√©s-rencontr√©es&quot;&gt;Difficult√©s rencontr√©es&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#non-d√©coupage-des-√©tapes-de-migration&quot; id=&quot;markdown-toc-non-d√©coupage-des-√©tapes-de-migration&quot;&gt;Non d√©coupage des √©tapes de migration&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#m√©connaissance-de-typescript&quot; id=&quot;markdown-toc-m√©connaissance-de-typescript&quot;&gt;M√©connaissance de Typescript&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#suppression-pr√©cipit√©e-de-librairies-obsol√®tes&quot; id=&quot;markdown-toc-suppression-pr√©cipit√©e-de-librairies-obsol√®tes&quot;&gt;Suppression pr√©cipit√©e de librairies obsol√®tes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#non-anticipation-de-la-complexit√©-li√©e-√†-certaines-d√©pendances&quot; id=&quot;markdown-toc-non-anticipation-de-la-complexit√©-li√©e-√†-certaines-d√©pendances&quot;&gt;Non anticipation de la complexit√© li√©e √† certaines d√©pendances&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#entretien-des-applications-legacy-en-m√™me-temps&quot; id=&quot;markdown-toc-entretien-des-applications-legacy-en-m√™me-temps&quot;&gt;Entretien des applications legacy en m√™me temps&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#autres-avantages&quot; id=&quot;markdown-toc-autres-avantages&quot;&gt;Autres avantages&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#uniformisation-des-technologies-au-sein-de-la-soci√©t√©&quot; id=&quot;markdown-toc-uniformisation-des-technologies-au-sein-de-la-soci√©t√©&quot;&gt;Uniformisation des technologies au sein de la soci√©t√©&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#attractivit√©-et-r√©tention-des-d√©veloppeurs&quot; id=&quot;markdown-toc-attractivit√©-et-r√©tention-des-d√©veloppeurs&quot;&gt;Attractivit√© et r√©tention des d√©veloppeurs&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot; id=&quot;markdown-toc-conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;contexte-g√©n√©ral-et-fonctionnel&quot;&gt;Contexte g√©n√©ral et fonctionnel&lt;/h1&gt;

&lt;p&gt;Bedrock streaming est une co-entreprise (joint-venture) cr√©√©e en 2020 par M6 Group et RTL Group, permettant √† 7 diffuseurs et soci√©t√©s de m√©dias dans 5 pays d‚ÄôEurope de divertir 45 millions d‚Äôutilisateurs chaque jour, sur tous les √©crans.&lt;/p&gt;

&lt;p&gt;Pour g√©rer tous leurs utilisateurs ainsi que leurs contenus, notamment vid√©os, les clients de Bedrock Streaming acc√®dent chacun √† une constellation d‚Äôapplications au sein d‚Äôun back-office centralis√© (appel√© BO par la suite).&lt;/p&gt;

&lt;h1 id=&quot;contexte-technique&quot;&gt;Contexte technique&lt;/h1&gt;

&lt;p&gt;De part sa conception initiale, le BO est une application monorepo. Elle fournit (√† elle-m√™me donc), des donn√©es via une API Symfony 4 (PHP 7.4), consomm√©es uniquement par :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;des applications Vue.js 1 et Vue.js 2 g√©r√©es par la team backend (qui historiquement maintient le frontend de quelques applications) ;&lt;/li&gt;
  &lt;li&gt;des applications Vue.js 2 g√©r√©es par la team frontend.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Le tout, dans un environnement &lt;a href=&quot;https://github.com/nodejs/Release/blob/main/schedule.json#L50&quot;&gt;Node.js 10&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;objectif&quot;&gt;Objectif&lt;/h1&gt;

&lt;p&gt;Node.js 10 est arriv√© en fin de vie le 30 avril 2021. Il n‚Äôest donc plus maintenu, que ce soit en terme de fonctionnalit√©s ou en terme de s√©curit√©. Naturellement, toutes les d√©pendances JS migrent progressivement vers un support des versions de Node.js sup√©rieures, et abandonnent le support de cette version 10 devenue obsol√®te.&lt;/p&gt;

&lt;p&gt;Il s‚Äôagit donc de migrer la version de Node.js vers une version sup√©rieure, dans l‚Äôid√©al LTS afin de se pr√©munir d‚Äôune obsolescence pr√©matur√©e. Dans un premier temps, Node.js 12.&lt;/p&gt;

&lt;p&gt;Voici plusieurs raisons qui poussent √† migrer Node.js :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nouvelles fonctionnalit√©s (e.g. nouvelle impl√©mentation pour l‚ÄôES6 Module Support exp√©rimental, source : &lt;a href=&quot;https://nodejs.medium.com/announcing-a-new-experimental-modules-1be8d2d6c2ff&quot;&gt;https://nodejs.medium.com/announcing-a-new-experimental-modules-1be8d2d6c2ff&lt;/a&gt; ) ;&lt;/li&gt;
  &lt;li&gt;Abandon de fonctionnalit√©s d√©faillantes (e.g. via d√©pr√©ciation) ;&lt;/li&gt;
  &lt;li&gt;Performance (e.g. mise √† jour de V8 engine, source : &lt;a href=&quot;https://nodejs.medium.com/introducing-node-js-12-76c41a1b3f3f&quot;&gt;https://nodejs.medium.com/introducing-node-js-12-76c41a1b3f3f&lt;/a&gt; ) ;&lt;/li&gt;
  &lt;li&gt;S√©curit√© (e.g. mise √† jour de TLS, source : &lt;a href=&quot;https://nodejs.medium.com/introducing-node-js-12-76c41a1b3f3f&quot;&gt;https://nodejs.medium.com/introducing-node-js-12-76c41a1b3f3f&lt;/a&gt; ) ;&lt;/li&gt;
  &lt;li&gt;√âvolutions des d√©pendances externes. (e.g. Cypress qui abandonne les versions de Node.js non maintenues et qui requiert Node.js 14, 16 ou 18+, source : &lt;a href=&quot;https://docs.cypress.io/guides/references/changelog#12-0-0&quot;&gt;https://docs.cypress.io/guides/references/changelog#12-0-0&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;une-premi√®re-strat√©gie-probl√©matique--la-m√©thode-rhinoc√©ros-&quot;&gt;Une premi√®re strat√©gie probl√©matique : la m√©thode ‚Äúrhinoc√©ros‚Äù ü¶è&lt;/h1&gt;

&lt;p&gt;La d√©cision a √©t√© prise de migrer le repository de Node.js 10 vers Node.js 12 en d√©but d‚Äôann√©e 2021.&lt;/p&gt;

&lt;p&gt;Empiriquement, cette m√©thode a montr√© plusieurs limites :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;m√™me si la compilation semblait bien se d√©rouler, des erreurs apparaissaient au moment de l‚Äôaffichage de l‚ÄôUI ‚û° Il semblait donc n√©cessaire de parcourir l‚Äôint√©gralit√© des √©crans afin de d√©celer toutes les anomalies possibles ‚û° Le travail de la QA √©tait alors cons√©quent ;&lt;/li&gt;
  &lt;li&gt;m√™me lorsqu‚Äôune anomalie est corrig√©e, une nouvelle peut apparaitre ‚û° Il fallait re-parcourir les √©crans concern√©s (par exemple, apr√®s avoir corrig√© une anomalie qui emp√™che l‚Äôapparition d‚Äôune modale, de nouvelles anomalies peuvent √™tre d√©cel√©es au niveau des fonctionnalit√©s que permet cette modale) ‚û° Le travail de la QA augmentait de fa√ßon exponentielle au fil des corrections d‚Äôanomalies ;&lt;/li&gt;
  &lt;li&gt;des dizaines voire centaines de d√©pendances dans le projet √©taient d√©pendantes de Node.js 10 sans √™tre encore compatibles avec Node.js 12 ‚û° Il s‚Äôagissait donc de faire le point sur celles-ci, pour trouver des √©quivalents compatibles.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apr√®s plusieurs mois, bien que bon nombre d‚Äôanomalies avaient pu √™tre corrig√©es, la situation stagnait et la fin ne semblait pas plus proche qu‚Äôau d√©but.&lt;/p&gt;

&lt;p&gt;Les raisons de l‚Äô√©chec :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;L‚Äôanciennet√© de certaines applications. Certaines d‚Äôentre elles avaient plus de 8 ans d‚Äôexistence. En n‚Äôayant subi que quelques corrections seulement. Les connaissances fonctionnelles et techniques s‚Äô√©taient donc estomp√©es naturellement, en raison d‚Äôune absence de documentation (autant fonctionnelle que technique). Il s‚Äôagit l√† des dettes fonctionnelle et technique. Lorsqu‚Äôelles sont l√†, elles sont relativement simples √† identifier. Mais c‚Äôest d√©j√† trop tard‚Ä¶ ;&lt;/li&gt;
  &lt;li&gt;L‚Äôabsence de mise √† jour des technologies. Certaines technologies devenues obsol√®tes (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jQuery 1.9&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vue.js 1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bootstrap 2.3&lt;/code&gt;) imposait non plus un refactor li√© √† une migration, mais une v√©ritable refonte ;&lt;/li&gt;
  &lt;li&gt;L‚Äôabsence de tests. La couverture de tests √©tait alors faible voire nulle. Migrer sans r√©gression relevait alors d‚Äôune chance non maitrisable ;&lt;/li&gt;
  &lt;li&gt;La fa√ßon dont la migration a √©t√© lanc√©e √©tait trop t√©m√©raire : c‚Äôest la m√©thode rhinoc√©ros.
    &lt;ul&gt;
      &lt;li&gt;cr√©ation d‚Äôune nouvelle branche (et d‚Äôune PR pour cette branche)&lt;/li&gt;
      &lt;li&gt;suppression de Node.js 10 et installation de Node.js 12&lt;/li&gt;
      &lt;li&gt;correction de toutes les anomalies qui apparaissent !&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ce fonctionnement peut marcher pour des p√©rim√®tres techniques plus petits ou du moins dont les contours sont pr√©cis√©ment marqu√©s ;&lt;/p&gt;

&lt;p&gt;L‚Äôorganisation en √©quipe devenait compliqu√©e. Au fur et √† mesure des d√©couvertes des anomalies au sein d‚Äôune seule et unique PR, il devenait difficile de suivre tous les sujets, sans d√©coupage pr√©cis et rigoureux.&lt;/p&gt;

&lt;p&gt;Face √† cette situation, dont les d√©veloppeurs et testeurs ne semblaient plus voir le bout, il a √©t√© d√©cid√© d‚Äôemployer une autre strat√©gie.&lt;/p&gt;

&lt;h1 id=&quot;la-strat√©gie-gagnante--une-migration-progressive-&quot;&gt;La strat√©gie gagnante : une migration progressive üì∂&lt;/h1&gt;

&lt;p&gt;De part un essoufflement des d√©veloppeurs et une nouvelle √©nergie insuffl√©e par des d√©parts et arriv√©es dans l‚Äô√©quipe, une nouvelle strat√©gie a √©merg√©. Face √† l‚Äô√©chec de la premi√®re, il a √©t√© propos√© plus simplement de partir sur des bases saines, afin de migrer les applications sur des fondations plus solides car maitris√©es.&lt;/p&gt;

&lt;p&gt;Plus techniquement, cela s‚Äôest traduit par :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cr√©ation d‚Äôun nouveau r√©pertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;modern-apps/&lt;/code&gt; dans le monorepo.&lt;/li&gt;
  &lt;li&gt;Mise en place d‚Äôune architecture bas√©e sur Node.js 16 (Oui oui, Node.js 16 directement ! Il s‚Äôagissait de la version LTS en cours en date de d√©but 2022.) dans ce r√©pertoire seulement.&lt;/li&gt;
  &lt;li&gt;Migration des applications du BO, une par une, vers une stack plus moderne. En date de d√©but 2023, cette migration est toujours en cours.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;La motivation √©tait principalement port√©e par :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;une volont√© forte d‚Äôabandonner des outils et technologies vieillissantes voire obsol√®tes ;&lt;/li&gt;
  &lt;li&gt;une pression engendr√©e par l‚Äô√©volution rapide des technologies :
    &lt;ul&gt;
      &lt;li&gt;Node.js sort une version LTS tous les ans ;&lt;/li&gt;
      &lt;li&gt;Vue.js 3 venait de sortir et l‚Äôeffort des d√©veloppeurs du framework allait se porter plut√¥t sur cette version que sur la version 2.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;une pression engendr√©e par les autres √©quipes de la soci√©t√© qui, elles, √©taient √† jour (pour certaines), dont celle qui proposait des outils JS et TS dont l‚Äô√©quipe pourrait avoir l‚Äôusage, comme par exemple une librairie de configuration pour &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eslint&lt;/code&gt; coupl√© √† &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vue&lt;/code&gt; ;&lt;/li&gt;
  &lt;li&gt;une excitation li√©e √† l‚Äôutilisation d‚Äôune stack r√©cente et de &lt;em&gt;cutting-edge tools&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;plan-daction&quot;&gt;Plan d‚Äôaction&lt;/h2&gt;

&lt;p&gt;Cette page blanche a n√©cessit√© un plan d‚Äôaction que voici :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cr√©ation d‚Äôune application simplissime en guise de PoC, afin de montrer la viabilit√© d‚Äôun travail sous Node.js 16 dans une sous-partie du projet en parall√®le d‚Äôun travail toujours actif sous Node.js 10 dans le reste du projet.&lt;/li&gt;
  &lt;li&gt;Mise en place d‚Äôune certaines DX vis-√†-vis des linters et formatters notamment (ainsi que d‚Äôextensions d‚ÄôIDE), par l‚Äôapplication de r√®gles simples mais strictes, qui √©vitent aux d√©veloppeurs les t√¢ches sans plus-value, comme ajuster manuellement l‚Äôindentation ou ajouter les points-virgules.&lt;/li&gt;
  &lt;li&gt;Migration des librairies internes au monorepo.&lt;/li&gt;
  &lt;li&gt;Migration du design system, ainsi que des outils aff√©rents (Storybook).&lt;/li&gt;
  &lt;li&gt;Migration d‚Äôune premi√®re application, la plus simple possible. L‚Äôobjectif √©tait alors de se rendre compte tr√®s concr√®tement des √©tapes de migration d‚Äôune application, afin d‚Äôen tirer une documentation exploitable pour les futures applications. Il en est ressorti que la majeure partie du travail consistait √† refactor le code avec les nouvelles technologies choisies, en l‚Äôoccurrence :
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vue.js 3&lt;/code&gt; et sa &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Composition API&lt;/code&gt; (framework JS),&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vite&lt;/code&gt; (serveur de dev et de build),&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pinia&lt;/code&gt; (global state management),&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vitest&lt;/code&gt; (framework de test unitaire),&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cypress&lt;/code&gt; dans ses derni√®res versions (framework de test end-to-end)&lt;/li&gt;
      &lt;li&gt;aussi et surtout &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Typescript&lt;/code&gt; (langage de programmation, sur-couche √† JS).&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Migration du processus de build et d‚Äôint√©gration aux templates backend (via notamment une extension Twig impl√©ment√©e par nos soins, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ViteAppExtension.php&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Mise en place d‚Äôune CI pour ces nouvelles applications, calqu√©e sur celle des anciennes applications : linting, tests pour celles qui en avaient, d√©ploiement en preview, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;En quelques mois seulement, il a √©t√© possible d‚Äôobtenir un r√©sultat concret. Le r√©pertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;modern-apps/&lt;/code&gt; a √©t√© initi√© en f√©vrier 2022, et d√®s avril de la m√™me ann√©e, une premi√®re application migr√©e √©tait livr√©e en production. Et cela, avec un seul d√©veloppeur √† plein temps sur le sujet.&lt;/p&gt;

&lt;h1 id=&quot;difficult√©s-rencontr√©es&quot;&gt;Difficult√©s rencontr√©es&lt;/h1&gt;

&lt;p&gt;Cette seconde strat√©gie n‚Äôa bien s√ªr pas √©t√© sans encombre. Voici les principales difficult√©s rencontr√©es, dont l‚Äô√©quipe a su se pr√©munir au fil du temps.&lt;/p&gt;

&lt;h2 id=&quot;non-d√©coupage-des-√©tapes-de-migration&quot;&gt;Non d√©coupage des √©tapes de migration&lt;/h2&gt;

&lt;p&gt;Lors de la migration d‚Äôune des premi√®res applications dont la complexit√© √©tait l√©g√®rement sup√©rieure aux pr√©c√©dentes, nous nous sommes retrouv√©s embourb√©s dans une multitude de bugs techniques et fonctionnels. En effet, migrer implique plusieurs changements qui n‚Äôont pas n√©cessairement de rapport les uns avec les autres :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ajouter des types TS&lt;/li&gt;
  &lt;li&gt;migrer la librairie de Global State Management de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vuex&lt;/code&gt; vers &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinia&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;migrer la Global API de Vue (de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new Vue()&lt;/code&gt; vers &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;createApp()&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;migrer de l‚Äô&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Options API&lt;/code&gt; vers la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Composition API&lt;/code&gt; de Vue&lt;/li&gt;
  &lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si tous ces changements sont op√©r√©s en m√™me temps, comment r√©agir lors de l‚Äôapparition d‚Äôune anomalie ? Comment traquer efficacement cette anomalie ?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Solution adopt√©e&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Nous avons d√©cid√© de d√©couper plus finement nos d√©veloppements. Une PR doit concerner un p√©rim√®tre r√©duit et bien d√©fini. Par exemple, la PR de migration de la librairie de Global State Management ne doit comporter que des modifications √† ce sujet, et doit fournir une application fonctionnelle dont les tests passent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;m√©connaissance-de-typescript&quot;&gt;M√©connaissance de Typescript&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source : &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;https://www.typescriptlang.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ce langage de programmation, bien que son adoption parmi les d√©veloppeurs JS explose, s‚Äôest av√©r√© une compl√®te nouveaut√© dans l‚Äô√©quipe. Il peut √™tre tentant d‚Äô√©crire des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;any&lt;/code&gt; partout, ou de supprimer le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strict mode&lt;/code&gt;‚Ä¶&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Solution adopt√©e&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Nous avons d√©cid√© d‚Äôint√©grer TS progressivement sans se mettre trop de pression quant √† l‚Äôint√©gralit√© du typage de nos applications. Typescript permet justement cette int√©gration progressive aux projets.&lt;/p&gt;

  &lt;p&gt;Un tr√®s gros progr√®s a aussi √©t√© r√©alis√© gr√¢ce √† la g√©n√©ration automatique des types TS √† partir de l‚ÄôAPI (gr√¢ce √† l‚Äô&lt;em&gt;introspection system&lt;/em&gt; de GraphQL). Les donn√©es re√ßues du backend se voyaient alors avoir une structure directement exploitable dans le frontend.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;suppression-pr√©cipit√©e-de-librairies-obsol√®tes&quot;&gt;Suppression pr√©cipit√©e de librairies obsol√®tes&lt;/h2&gt;

&lt;p&gt;Lors du d√©coupage des √©tapes de migration, une probl√©matique est apparue. Par exemple, si nous souhaitons migrer de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vuex&lt;/code&gt; vers &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinia&lt;/code&gt; dans un second temps, comment faire pour que l‚Äôapplication reste fonctionnelle avec &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vuex&lt;/code&gt; dans le premier temps ?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Solution adopt√©e&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Nous avons d√©cid√© de conserver certaines librairies, le temps de la migration des applications. Il peut √™tre tentant de vouloir supprimer imm√©diatement ce qui nous semble obsol√®te, mais ces √©l√©ments ne seront vraiment obsol√®tes que lorsque toutes les applications seront migr√©es ; mais pas le temps qu‚Äôelles le soient.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;non-anticipation-de-la-complexit√©-li√©e-√†-certaines-d√©pendances&quot;&gt;Non anticipation de la complexit√© li√©e √† certaines d√©pendances&lt;/h2&gt;

&lt;p&gt;Bien que cet aspect n‚Äô√©tait pas une surprise, certaines librairies ont apport√© plus de difficult√©s que d‚Äôautres lors de la migration. Par exemple, l‚Äôint√©gration de Vue 3 et la Composition API impliquait la mont√©e de version de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vee-validate&lt;/code&gt;, un librairie de validation de formulaire. Il s‚Äôest av√©r√© que l‚Äôimpl√©mentation impos√©e √©tait radicalement diff√©rente de la version pr√©c√©dente (compatible avec Vue 2 et l‚ÄôOptions API), moins intuitive et plus complexe.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Solution adopt√©e&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Ce cas de figure n‚Äôest pas vraiment impressionnant car nous nous y attendions. Nous avons d√©cid√© dans un premier temps d‚Äôeffectuer une certaine veille technique, afin de remettre en cause le choix initial de cette librairie. Il s‚Äôest av√©r√© que nous l‚Äôavons conserv√©e, ce qui amenait dans un second temps une mont√©e en comp√©tence quant √† l‚Äôutilisation de celle-ci, en vue de son int√©gration.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;entretien-des-applications-legacy-en-m√™me-temps&quot;&gt;Entretien des applications legacy en m√™me temps&lt;/h2&gt;

&lt;p&gt;Une application donn√©e pouvait se retrouver d‚Äôune part en cours de migration, et d‚Äôautre part devoir recevoir une √©volution ou une correction d‚Äôanomalie.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Solution adopt√©e&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Le choix et l‚Äôordre des applications √† migrer a √©t√© choisi en fonction des priorit√©s en cours. Nous avons choisi de migrer en premier les applications qui ne subissaient que tr√®s peu de modifications. Par la suite, et encore aujourd‚Äôhui, nous livrons en production rapidement chaque application migr√©e, afin de ne pas avoir √† maintenir plusieurs versions en m√™me temps (la version legacy √©tant tout de m√™me conserv√©e le temps de s‚Äôassurer que la version moderne tourne correctement en production aupr√®s des clients). Dans les tr√®s rares cas o√π une application en cours de migration devait recevoir une √©volution ou une correction d‚Äôanomalie, nous la traitions dans les 2 versions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;autres-avantages&quot;&gt;Autres avantages&lt;/h1&gt;

&lt;h2 id=&quot;uniformisation-des-technologies-au-sein-de-la-soci√©t√©&quot;&gt;Uniformisation des technologies au sein de la soci√©t√©&lt;/h2&gt;

&lt;p&gt;Au sein de Bedrock, le back-office n‚Äôest pas la seule application. Il existe aussi des applications frontend sur les m√™mes technologies pour adresser l‚Äô√©cran web ou les t√©l√©visions connect√©es. Bien que le framework utilis√© pour celles-ci soit React.js et non Vue.js, l‚Äôoutillage peut √™tre uniformis√© entre les projets et les √©quipes. La migration a permis de pr√©parer le terrain pour mettre en place ces outils : TypeScript, PNPM, etc.&lt;/p&gt;

&lt;h2 id=&quot;attractivit√©-et-r√©tention-des-d√©veloppeurs&quot;&gt;Attractivit√© et r√©tention des d√©veloppeurs&lt;/h2&gt;

&lt;p&gt;Cette migration g√©n√©rale permet de mettre en place une stack r√©solument plus moderne et d‚Äôutiliser des outils et technologies plus r√©cents. N‚Äôest-ce pas l√† un argument fort pour attirer des nouveaux d√©veloppeurs et retenir ceux d√©j√† en place ? Dans l‚Äô√©quipe, plusieurs personnes ont √©mis des doutes sur leur volont√© de rester dans la soci√©t√© si la d√©cision de migrer, et donc d‚Äôint√©grer des technologies plus √† jour, n‚Äôavait pas √©t√© prise. En date de d√©but 2023, il fait peu de doutes que les projets en Vue 3 sont plus attractifs que les projets en Vue 2‚Ä¶&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;En fin de compte, cette approche progressive et incr√©mentale, toujours en cours, permet de maintenir dans un r√©pertoire bien d√©fini une stack r√©cente dont les mises √† jour sont simples car petites. Par exemple, nous avons r√©cemment migr√© de Node.js 16 vers Node.js 18‚Ä¶ en quelques jours !&lt;/p&gt;

&lt;p&gt;Cette grande aventure, toujours en cours, nous a permis de vraiment prendre conscience qu‚Äôil faut entretenir certes les applications mais aussi les versions des frameworks et outils ! Utiliser un nouvel outil ou une nouvelle technologie est un choix fort qu‚Äôil faut √™tre capable d‚Äôassumer dans le temps.&lt;/p&gt;

&lt;p&gt;Il peut paraitre frustrant d‚Äôentretenir des outils, sans gagner en performance ni en productivit√© mais seulement pour ne pas devenir obsol√®te. Mettre l‚Äôaccent sur ces points, tout en sachant bien jauger jusqu‚Äôo√π doivent aller ces upgrades, est la marque d‚Äôun certain professionnalisme.&lt;/p&gt;

&lt;p&gt;Il est vrai que dans l‚Äôimm√©diat, la valeur ajout√©e pour le client est mod√©r√©e : les gains restent tr√®s techniques, notamment en termes de stabilit√© et de performances. Ce n‚Äôest que plus tard que les gains se feront concr√®tement sentir : plus d‚Äôefficacit√© et de productivit√© pour les √©volutions, et plus de fiabilit√©.&lt;/p&gt;

&lt;p&gt;Il est aussi important de savoir reconnaitre qu‚Äôune technologie utilis√©e (parfois avec fiert√© √† ses d√©buts) est devenue obsol√®te, et qu‚Äôil faut s‚Äôen d√©barrasser pendant qu‚Äôil est encore temps.&lt;/p&gt;</content><author><name>Timoth√© Crespy</name></author><category term="node" /><category term="Node.js" /><category term="vue" /><category term="Vue.js" /><category term="vuex" /><category term="pinia" /><category term="vite" /><category term="Vite.js" /><category term="Vitest" /><category term="TypeScript" /><category term="developer retention" /><category term="migration" /><summary type="html">Difficile de faire √©voluer des applications et am√©liorer une stack si l‚Äôensemble est bas√© sur une version obsol√®te de Node.js‚Ä¶ Dans cet article, nous verrons comment nous avons r√©ussi √† migrer vers une version r√©cente et maintenue de Node.js gr√¢ce √† une approche progressive et incr√©mentale.</summary></entry><entry><title type="html">La gamification contre le legacy</title><link href="https://tech.bedrockstreaming.com/2023/03/20/La-gamification-contre-le-legacy.html" rel="alternate" type="text/html" title="La gamification contre le legacy" /><published>2023-03-20T00:00:00+00:00</published><updated>2023-03-20T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/03/20/La-gamification-contre-le-legacy</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/03/20/La-gamification-contre-le-legacy.html">&lt;h2 id=&quot;ce-que-vous-ne-voulez-pas-voir-dans-vos-backlogs&quot;&gt;Ce que vous ne voulez pas voir dans vos backlogs‚Ä¶&lt;/h2&gt;

&lt;p&gt;Elles sont l√†, tapies dans l‚Äôombre de la colonne ‚ÄúTo do‚Äù de vos backlogs, attendant que leur heure vienne. √Ä chaque &lt;a href=&quot;https://blog.myagilepartner.fr/index.php/2017/01/17/la-product-backlog-refinement/&quot;&gt;backlog refinement&lt;/a&gt;, vous vous demandez s‚Äôil ne faut pas tout simplement les annuler, puisque personne ne les prend en charge‚Ä¶ De quoi parle-t-on ? De ces user stories qui existent dans le backlog de chaque √©quipe technique, pour traiter ‚Äúun jour‚Äù un sujet legacy. Ces petits aides-m√©moire de sujets ‚Äú√† ne pas oublier‚Äù qui nous poursuivent mais ne sont que peu souvent trait√©s, faute de priorisation.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Un exemple de backlog legacy&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-Target.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Un exemple de backlog legacy&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Clean de code mort, mont√©es de versions de layers Terraform, projets de refactoring jamais d√©but√©s‚Ä¶ autant de sujets p√©nibles √† traiter qui n√©cessitent du temps‚Ä¶ et de la r√©silience. Parce que bien souvent, d√©buter l‚Äôun de ces sujets revient √† s‚Äôattaquer √† toutes les d√©pendances li√©es, √† g√©rer tous les impacts. Et parce qu‚Äôil s‚Äôagit aussi de t√¢ches redondantes, non-automatisables, n‚Äôapportant quasiment aucune valeur business imm√©diatement mesurable.. Du ‚Äúrun‚Äù, pur et simple. Dans le Slack de Bedrock, il y a un emoji tout trouv√© pour ce type de t√¢che : &lt;img alt=&quot;Gif exprimant la souffrance&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/souffrir.gif&quot; height=&quot;30&quot; width=&quot;30&quot; style=&quot;padding: 0&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bien s√ªr, on parvient parfois √† d√©gager du temps pour s‚Äôatteler √† ces user stories. Mais il faut souvent plus d‚Äôun sprint pour en venir √† bout, et l‚Äô√©quipe en charge de leur r√©alisation peut rapidement se d√©courager devant l‚Äôampleur et le caract√®re r√©p√©titif de la t√¢che.&lt;/p&gt;

&lt;p&gt;Nos √©quipes Ops et DevOps sont responsables de 23 repositories Terraform. Lorsqu‚Äôil a √©t√© n√©cessaire d‚Äôupgrader tous nos layers en version 1.x, nous nous sommes d‚Äôabord donn√© pour consigne que chaque personne qui tombait sur un layer obsol√®te devait le mettre √† jour avant de poursuivre son travail. Oui mais voil√†, mettre √† jour un layer √ßa ne se fait pas en deux minutes, et bien souvent on refuse d‚Äôabandonner ce sur quoi on travaillait jusqu‚Äôalors pour mettre √† jour sa version de Terraform. La consigne a alors √©volu√© : pour chaque layer √† mettre √† jour, on cr√©√© une US en colonne ‚Äúto do‚Äù‚Ä¶ Vous voyez o√π l‚Äôon veut en venir ? üòè&lt;/p&gt;

&lt;p&gt;Pour tenter de venir √† bout de ces sujets legacy que l‚Äôon tra√Æne comme des boulets, nous avons mis en place depuis octobre 2022 les ‚ÄúJeudis du fun‚Äù, dont l‚Äôorganisation est prise en charge par la facilitatrice agile et la Project Manager Officer (PMO) du service Infrastructure (autrices de cet article).&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Logo de la 1√®re √©dition du ‚Äújeudi du fun‚Äù&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-logo.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Logo de la 1√®re √©dition du ‚Äújeudi du fun‚Äù&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;√©radiquer-en-gamifiant-challengeant-sentraidant&quot;&gt;√âradiquer en gamifiant, challengeant, s‚Äôentraidant.&lt;/h2&gt;

&lt;p&gt;L‚Äôid√©e est simple : faire travailler ensemble, sur une journ√©e, les cinq √©quipes de la verticale (trois √©quipes de SysAdmins et deux √©quipes DevOps) pour faire avancer un sujet legacy. Au cours de cette journ√©e, les profils et les membres d‚Äô√©quipe seront mix√©s, afin de ne pas travailler avec les m√™mes coll√®gues qu‚Äôau quotidien. Leads, principal engineer, seniors et juniors : tout le monde participe √† la corv√©e !&lt;/p&gt;

&lt;p&gt;Il est difficile de convoquer 25 personnes sur une journ√©e en leur disant que la journ√©e est banalis√©e pour traiter des t√¢ches p√©nibles. Elles viendraient √† reculons. Deux axes ont √©t√© choisis pour faire de ces journ√©es des journ√©es ‚Äúparticuli√®res‚Äù :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Gamifier&lt;/strong&gt; certains moments cl√©s de la journ√©e : la d√©couverte du sujet, la composition des √©quipes, la remise en jambe du d√©but d‚Äôapr√®s-midi‚Ä¶&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Challenger&lt;/strong&gt; les participants pour ne pas simplement leur demander de traiter du legacy, mais bien d‚Äô√™tre la &lt;em&gt;meilleure&lt;/em&gt; √©quipe pour traiter du legacy. Celle qui ira le plus loin, qui en fera le plus.&lt;/li&gt;
  &lt;li&gt;(Un troisi√®me axe, plus convivial, est choisi pour la fin de journ√©e : partager un verre tous ensemble.)&lt;/li&gt;
&lt;/ul&gt;

&lt;center&gt;&lt;img alt=&quot;Le jeu de d√©couverte du sujet de la 3√®me √©dition : Ansible&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-jeu.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Le jeu de d√©couverte du sujet de la 3√®me √©dition : Ansible&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Lors de la 1√®re √©dition, en octobre 2022, nous avons propos√© aux √©quipes un grand th√®me : le repository ‚ÄúSysAdmin/Terraform‚Äù, centre n√©vralgique du travail de l‚ÄôInfra. Il y a beaucoup √† faire : les fameux upgrades de layers, du refactoring de code pour industrialiser nos process, des PRs ouvertes et rest√©es en suspens depuis de nombreux mois‚Ä¶ chacun peut y trouver son compte. Chacune des six √©quipes compos√©es ce jour-l√† disposait de dix minutes pour d√©finir √† quel chantier elle s‚Äôattaquerait durant la journ√©e. A l‚Äôissue de ces dix minutes, le repr√©sentant de l‚Äô√©quipe devait pr√©senter aux autres le sujet choisi et l‚Äôindicateur qui permettrait de juger si le travail a √©t√© accompli ou non, en fin de journ√©e. L‚Äô√©quipe ayant propos√© le sujet le plus ambitieux s‚Äôest vue attribuer des points bonus, rentrant en compte pour le calcul du score final.&lt;/p&gt;

&lt;p&gt;Pour la seconde √©dition le mois suivant, le sujet √©tait impos√© : toutes les √©quipes avaient pour objectif de mieux s√©curiser les secrets contenus dans le code Bedrock. L‚Äô√©quipe qui en traiterait le plus grand nombre l‚Äôemporterait.&lt;/p&gt;

&lt;p&gt;Lors de la derni√®re √©dition, en f√©vrier dernier, la comp√©tition reposait √©galement sur le nombre de points gagn√©s par chaque √©quipe en fin de journ√©e. Nous avons attribu√© un nombre de points √† chaque t√¢che pouvant √™tre trait√©e dans la journ√©e, en fonction de sa complexit√© et/ou de sa priorit√©. Chaque √©quipe pouvait s‚Äôorganiser librement : choisir plusieurs petites t√¢ches ou deux plus importantes‚Ä¶&lt;/p&gt;

&lt;p&gt;Bien s√ªr, pour que la comp√©tition soit totale, chaque √©dition du jeudi du fun se termine par une remise de prix : distribution de goodies, de cartes ‚Äúbonus‚Äù ou ‚Äúmalus‚Äù valables dans nos ‚Äúvrais‚Äù sprints, de gourmandises‚Ä¶ il faut que la r√©compense soit r√©elle pour que les participants se prennent au jeu.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Exemple de lot pouvant √™tre remport√© lors du ‚ÄúJeudi du fun‚Äù&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-carte.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Exemple de lot pouvant √™tre remport√© lors du ‚ÄúJeudi du fun‚Äù&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Le risque avec la comp√©tition, c‚Äôest de se laisser d√©border : gagner co√ªte que co√ªte, ajouter des points √† son compteur en faisant du ‚Äúquick &amp;amp; dirty‚Äù. Jusqu‚Äô√† pr√©sent, la comp√©tition dans la verticale Infra est rest√©e bon enfant : les √©quipes se d√©fient entre elles tout au long de la journ√©e, des points ‚Äúbonus‚Äù sont r√©clam√©s aux organisatrices au moindre pr√©texte‚Ä¶ mais personne ne perd de vue l‚Äôobjectif principal : venir √† bout du sujet.&lt;/p&gt;

&lt;p&gt;Les Jeudis du Fun reposent donc sur le challenge et le jeu. Mais nous avions sous-estim√© un autre axe nous permettant de faire de ces journ√©es un succ√®s : l‚Äôentraide. A chaque √©dition, les retours les plus enthousiastes portent sur le fait de passer une journ√©e √† travailler en cross-team. SysAdmins et DevOps apprennent les uns des autres, les juniors ont l‚Äôoccasion de former des leads‚Ä¶ et chacun √©largit son spectre de comp√©tences. Au-del√† du fait de venir √† bout de sujets legacy, l‚Äô√©mulation engendr√©e par ces journ√©es justifie √† elle-seule leur organisation.&lt;/p&gt;

&lt;p&gt;Et puis, quitte √† faire des jeudis du fun des journ√©es particuli√®res, autant y aller franchement : certains membres de nos √©quipes n‚Äôh√©sitent pas √† venir d√©guis√©s pour ajouter une dose de fun. Vous avez crois√© une licorne, Pikachu ou un plombier dans l‚Äôopen space de Bedrock ? Aucun doute, c‚Äô√©tait un jeudi ! Un dress code a m√™me √©t√© d√©fini lors de l‚Äô√©dition de f√©vrier 2023.&lt;/p&gt;

&lt;h2 id=&quot;it√©rer-et-corriger-nos-erreurs-√†-chaque-√©dition&quot;&gt;It√©rer, et corriger nos erreurs √† chaque √©dition&lt;/h2&gt;

&lt;p&gt;Trois √©ditions du ‚Äújeudi du fun‚Äù ont √©t√© organis√©es jusqu‚Äô√† pr√©sent. √Ä la fin de chaque √©dition, les organisatrices recueillent le feed-back des participantes et participants, afin de corriger ce qui doit l‚Äô√™tre et de capitaliser sur ce qui a march√©. Voici le premier bilan que nous pouvons en tirer.&lt;/p&gt;

&lt;h3 id=&quot;de-limportance-du-choix-du-sujet&quot;&gt;&lt;em&gt;De l‚Äôimportance du choix du sujet&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Le succ√®s de la journ√©e repose sur le choix du sujet. En choisissant un sujet f√©d√©rateur, comme lors de notre premi√®re √©dition, et en laissant le soin √† chaque √©quipe de d√©finir quel chantier elle souhaitait mener, nous partions gagnantes. Le repo Sysadmin/Terraform sur lequel nous avons travaill√© lors de cette journ√©e est un point de douleur pour l‚Äôensemble de nos √©quipes : chacun des participants a compris l‚Äôint√©r√™t de jouer le jeu et de retrousser ses manches. Les √©quipes ont m√™me eu du mal √† cl√¥turer la journ√©e, car elles voulaient finir ce qu‚Äôelles avaient commenc√©.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Au cours de la 1√®re journ√©e du ‚ÄúJeudi du fun‚Äù&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-slack.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Au cours de la 1√®re journ√©e du ‚ÄúJeudi du fun‚Äù&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Lors de la seconde √©dition en revanche, le sujet de cette √©dition a mis la journ√©e en p√©ril. Nous avions demand√© aux √©quipes d‚Äôajouter un niveau de s√©curit√© √† l‚Äôensemble des secrets contenus dans la codebase de Bedrock. Cela a suscit√© quelques difficult√©s :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Tout d‚Äôabord, il s‚Äôagissait de trouver une m√©thode pour identifier tous les secrets concern√©s. Toutes les √©quipes du jeudi du fun ont alors planch√© sur ce sujet, en utilisant des m√©thodes et outils diff√©rents. Au final, nous ne sommes parvenus que tardivement (2h apr√®s le lancement de la journ√©e) √† nous mettre d‚Äôaccord sur une m√©thodologie. Autant de temps perdu que nous aurions pu consacrer au c≈ìur du sujet, la s√©curisation des secrets.&lt;/li&gt;
  &lt;li&gt;En nous attaquant √† l‚Äôensemble des secrets de Bedrock, nous touchions forc√©ment √† des repositories projets dont nous ne sommes pas les &lt;em&gt;code owners.&lt;/em&gt; Ce n‚Äôest pas une v√©ritable difficult√© en soi, puisqu‚Äôau quotidien, nous intervenons fr√©quemment dans ces repos projets pour accompagner les √©quipes devs. En revanche, l‚Äôajout d‚Äôun niveau de s√©curit√© suppl√©mentaire sur des secrets implique de pouvoir tester, puis de merger nos modifications. Impossible de r√©aliser ces actions sans les √©quipes back et front responsables des projets, ou sans impacter leur travail. Notre p√©rim√®tre d‚Äôintervention lors de cette journ√©e √† √©t√© consid√©rablement limit√©.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La complexit√© du sujet et le constat de notre incapacit√© √† avancer lors de cette journ√©e ont rapidement conduit √† un d√©couragement des troupes. Nous sommes tout de m√™me ressortis de cette √©dition avec des points positifs :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une meilleure visibilit√© sur le p√©rim√®tre de s√©curisation √† couvrir, en d√©finissant le nombre de secrets concern√©s,&lt;/li&gt;
  &lt;li&gt;Un workflow visant √† d√©tecter √† l‚Äôavenir tout nouveau secret concern√©&lt;/li&gt;
  &lt;li&gt;‚Ä¶ et la n√©cessit√© de mieux d√©finir les guidelines pour le choix du sujet !&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;entendu-pendant-la-2nde-√©dition-du-jeudi-du-fun-&quot;&gt;Entendu pendant la 2nde √©dition du jeudi du fun üòÖ&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;üëßüèª : ‚ÄúAlors, qu‚Äôest-ce que tu fais de beau ?‚Äù&lt;/p&gt;

  &lt;p&gt;üë¶ : ‚ÄúJe souffre‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ces guidelines nous ont aid√© √† d√©finir le choix de la th√©matique de la 3√®me √©dition du jeudi du fun. Le sujet devait r√©pondre √† ces crit√®res :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;√ätre r√©alisable en une journ√©e,&lt;/li&gt;
  &lt;li&gt;Permettre de terminer / acc√©l√©rer un projet ou d‚Äô√©radiquer du legacy,&lt;/li&gt;
  &lt;li&gt;√ätre dans le p√©rim√®tre dont l‚Äôinfra est le code owner,&lt;/li&gt;
  &lt;li&gt;Et √™tre ‚Äúmorcelable‚Äù en sous-p√©rim√®tres, un pour chaque √©quipe.&lt;/li&gt;
  &lt;li&gt;Enfin, l‚Äôavanc√©e du sujet doit √™tre mesurable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour l‚Äô√©dition de f√©vrier 2023, nous avons donc ‚Äújou√©‚Äù avec la migration Ansible en cours de r√©alisation dans l‚Äôune de nos √©quipes de SysAdmins. 45 r√¥les Ansible restaient √† migrer vers notre nouveau template Ansible, utilis√© pour d√©ployer nos machines on-prem : il y a du travail pour tout le monde, c‚Äôest parti !&lt;/p&gt;

&lt;h3 id=&quot;et-finalement-est-ce-que-√ßa-marche-&quot;&gt;Et finalement, est-ce que √ßa marche ?&lt;/h3&gt;

&lt;p&gt;Apr√®s trois √©ditions, il nous semble n√©cessaire de prendre un peu de recul pour analyser si ces journ√©es portent leur fruit. Les √©quipes sont ravies de travailler ensemble, certes, mais l‚Äôobjectif principal est-il rempli ? Les jeudis du fun permettent-ils de venir √† bout de sujets legacy ?&lt;/p&gt;

&lt;p&gt;La premi√®re √©dition a fortement contribu√© √† √©radiquer du legacy : nous avons mis √† jour la quasi-totalit√© des layers Terraform, nous avons merg√© ou ferm√© l‚Äôenti√®ret√© des PRs, et nous avons initi√© des travaux de rework. Cependant, nous n‚Äôavions pas d√©fini d‚Äôindicateurs de r√©ussite assez fiables lors de cette premi√®re it√©ration pour quantifier r√©ellement le travail accompli. Si toute la Verticale partage le sentiment d‚Äôavoir avanc√© lors de cette journ√©e, nous ne savons pas le mesurer finement.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Capture d‚Äô√©cran du repo sysadmin/terraform au cours de la 1√®re √©dition du ‚ÄúJeudi du fun‚Äù&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-git.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Capture d‚Äô√©cran du repo sysadmin/terraform au cours de la 1√®re √©dition du ‚ÄúJeudi du fun‚Äù&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Pour pallier cette difficult√©, nous avions d√©fini un indicateur de suivi tr√®s simple pour la seconde √©dition du jeudi du fun : nombre de secrets √† traiter / nombre de secrets trait√©s. Ainsi, nous savons que, lors de cette (difficile) journ√©e, nous avons trait√© environ un quart du p√©rim√®tre.&lt;/p&gt;

&lt;p&gt;Au lancement de la 3√®me √©dition du jeudi du fun, nous avions 45 r√¥les √† migrer vers notre nouveau template Ansible. √Ä l‚Äôissue de cette journ√©e, l‚Äô√©quipe responsable du sujet n‚Äôen avait plus que 10 √† traiter. La mutualisation de nos forces a port√© ses fruits !&lt;/p&gt;

&lt;p&gt;Insuffisants lors de la premi√®re √©dition, les indicateurs de suivi mis en place dans les √©ditions suivantes sont cruciaux pour √©valuer le ROI de ces journ√©es de travail ‚Äúparticuli√®res‚Äù.&lt;/p&gt;

&lt;h2 id=&quot;les-coulisses-du-jeudi-du-fun&quot;&gt;Les coulisses du jeudi du fun&lt;/h2&gt;

&lt;p&gt;Les jeudis du fun sont organis√©s par deux personnes au sein de la verticale infra. Si les s√©ances de pr√©paration de cette journ√©e (qui d√©butent environ 3 semaines avant la tenue de l‚Äô√©v√©nement) sont source de beaucoup de rires, il n‚Äôemp√™che qu‚Äôelles doivent √©galement r√©pondre √† certaines probl√©matiques.&lt;/p&gt;

&lt;h3 id=&quot;sadapter-aux-habitudes-de-travail-de-chacun&quot;&gt;&lt;em&gt;S‚Äôadapter aux habitudes de travail de chacun&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;En premier lieu, nous devons organiser une journ√©e √† laquelle tous les membres de nos √©quipes puissent prendre part, qu‚Äôils soient au bureau ou en t√©l√©travail. Tous les moments de la journ√©e doivent tenir compte de cet √©l√©ment, qu‚Äôil s‚Äôagisse des phases de travail en petits groupes, des sessions en pl√©ni√®re (25 personnes) comme le lancement de la journ√©e, la remise des prix ou les diff√©rents jeux qui ponctuent ces jeudis.&lt;/p&gt;

&lt;p&gt;Les phases de travail en √©quipe sont les plus simples √† g√©rer : nos √©quipes ont d√©j√† l‚Äôhabitude au quotidien de travailler avec des coll√®gues √† distance. Tout le monde se connecte sur une room de visioconf√©rence, et le tour est jou√©.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Team mixte pr√©sentiel / distanciel lors du 1er ‚Äújeudi du fun‚Äù&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-team-hybride.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Team mixte pr√©sentiel / distanciel lors du 1er ‚Äújeudi du fun‚Äù&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Les moments en pl√©ni√®re sont en revanche plus d√©licats √† g√©rer, car le brouhaha d‚Äôune vingtaine de personnes rassembl√©es dans une m√™me pi√®ce reste difficilement audible pour les personnes √† distance. Un prochain challenge pourrait √™tre d‚Äôorganiser un jeudi du fun 100% distanciel.&lt;/p&gt;

&lt;p&gt;Il est √©galement n√©cessaire de tenir compte de la fa√ßon de travailler de chacun : si certaines personnes sont capables de travailler en faisant fi du bruit d‚Äôun open space, d‚Äôautres ont besoin de plus de calme. √Ä chaque √©dition, nous tentons d‚Äôorganiser le jeudi du fun sous diff√©rentes formes, pour tenir compte des besoins de chacun, mais nous n‚Äôavons pas encore trouv√© la solution id√©ale.&lt;/p&gt;

&lt;p&gt;Lors de la premi√®re √©dition, nous √©tions tous rassembl√©s dans le m√™me open space, sans dispositif particulier pour les personnes ayant besoin d‚Äôun environnement silencieux, et cette journ√©e leur a √©t√© difficile √† supporter. De nombreuses autres √©quipes de Bedrock avec qui nous partageons d‚Äôhabitude cet open space √©taient en d√©placement ce jour-l√†, ce qui a n√©anmoins permis de limiter nos nuisances sonores √† notre seule verticale.&lt;/p&gt;

&lt;p&gt;Pour la seconde √©dition, nous avions r√©serv√© un open space dans les locaux de Bedrock pour ne pas prendre le risque de d√©ranger les autres √©quipes : l‚Äôambiance y a √©t√© d‚Äôautant plus conviviale mais n‚Äôa apport√© aucun mieux aux personnes ayant besoin de tranquillit√© pour travailler.&lt;/p&gt;

&lt;p&gt;Lors de notre derni√®re √©dition, nous avons tent√© une approche hybride : la plupart des √©quipes √©taient rassembl√©es dans un m√™me open space, et pour les personnes ayant besoin de s‚Äôisoler, une salle de r√©union avait √©t√© r√©serv√©e pour l‚Äôoccasion. Il semble que cette organisation a apport√© un mieux pour les personnes souffrant du bruit avec un √©cueil cependant : elles √©taient isol√©es des autres √©quipes tout au long de la journ√©e, et le jeudi du fun repose (aussi) sur l‚Äô√©mulation collective‚Ä¶&lt;/p&gt;

&lt;h3 id=&quot;les-autres-limites-de-lorganisation&quot;&gt;&lt;em&gt;Les autres limites de l‚Äôorganisation&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Au fil des √©ditions, nous avons rencontr√©, en tant qu‚Äôorganisatrices, deux autres limites.&lt;/p&gt;

&lt;p&gt;La premi√®re touche au choix du sujet. Si la d√©finition de la th√©matique de la premi√®re journ√©e a √©t√© √©vidente car le repository sysadmin/terraform est source de complaintes quotidiennes, tr√®s vite, nous avons eu besoin d‚Äôaide pour d√©finir les sujets des √©ditions suivantes.  &lt;br /&gt;
En effet, il est difficile pour nous d‚Äôappr√©hender un sujet dans sa globalit√© : y aura-t‚Äôil du travail pour chaque √©quipe ? Le sujet est-il accessible pour tous nos profils, sans mont√©e en comp√©tence pr√©alable ? Quelles sont concr√®tement les actions √† conduire pour venir √† bout d‚Äôun sujet ? Pour pallier √† ce probl√®me, nous avons r√©alis√© un tour de passe-passe : l‚Äô√©quipe qui remporte le jeudi du fun gagne le droit de d√©finir avec nous le sujet de l‚Äô√©dition suivante. Et √ßa fonctionne ! Les gagnants participent avec plaisir au choix du prochain sujet &lt;del&gt;de torture&lt;/del&gt; de fun !&lt;/p&gt;

&lt;p&gt;La seconde limite concerne la r√©currence de l‚Äô√©v√©nement. Initialement, nous avions pr√©vu d‚Äôorganiser un jeudi du fun par mois, pour venir √† bout rapidement de nos sujets legacy. Apr√®s les deux premi√®res √©ditions (organis√©es en octobre et novembre 2022), nous nous sommes aper√ßues que nous perdrions le fun de cette journ√©e si elle revenait trop fr√©quemment. Pour que cet √©v√©nement reste une journ√©e de travail particuli√®re √† laquelle les personnes participent avec plaisir, nous avons fait le choix d‚Äôopter pour un format trimestriel.&lt;/p&gt;

&lt;h2 id=&quot;next-steps-et-prochains-d√©fis&quot;&gt;Next steps et prochains d√©fis&lt;/h2&gt;

&lt;p&gt;D‚Äôautres am√©liorations restent √† apporter, notamment autour de la gestion du reste √† faire. Comment finir correctement les travaux initi√©s dans cette journ√©e, afin de ne pas cr√©er de nouvelles user stories legacy ? Ce point est tout aussi important que celui sur le travail accompli au cours de ces journ√©es. Entamer un rework et le laisser en chantier g√©n√®re au moins autant de frustration que le manque de temps pour traiter du legacy.&lt;/p&gt;

&lt;p&gt;N√©anmoins, apr√®s trois √©ditions du jeudi du fun, il nous semblait important de partager notre exp√©rience, ne serait-ce que pour convaincre des √©quipes de devs de Bedrock de venir jouer avec nous lors d‚Äôune prochaine √©dition !&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;Les participants du Jeudi du fun&quot; src=&quot;/images/posts/2023-03-16-la-gamification-contre-le-legacy/Article-team.png&quot; /&gt;&lt;/center&gt;
&lt;center&gt;Les participants du Jeudi du fun&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Pour vous donner un aper√ßu de comment se d√©roulent ces fameux jeudis, voici &lt;em&gt;grosso modo&lt;/em&gt; le programme d‚Äôune journ√©e :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 9h00 Petit d√©jeuner convivial (car c‚Äôest tr√®s important de commencer une telle journ√©e en prenant des forces)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 9h30 &lt;strong&gt;D√©but officiel de la journ√©e&lt;/strong&gt; : on se retrouve en pl√©ni√®re, dans une grande salle de r√©union, avec tous les participants et on (r√©)explique le contexte de la journ√©e ainsi que le programme. 
On commence avec un petit jeu (5 minutes maximum) qui sert √† deviner le sujet du jour. Les sujets sont toujours gard√©s secrets jusqu‚Äôau lancement de la journ√©e, ce qui donne lieu √† toutes sortes d‚Äôhypoth√®ses les jours qui pr√©c√®dent (‚ÄúOui, oui, bien s√ªr on va recoder toute notre plateforme dans un autre langage jeudi‚Äù).On fait monter la pression !  &lt;br /&gt;
L‚Äôobjectif de ce premier jeu est d‚Äô√©nergiser un maximum nos coll√®gues et de leur permettre de commencer √† se projeter sur ce qu‚Äôils vont pouvoir y faire. Le jeu change √† chaque fois, pour garder un effet de surprise. 
Ensuite, vient le temps de r√©v√©ler la constitution des √©quipes qui changent elles aussi √† chaque √©dition afin de permettre √† chaque personne de c√¥toyer de nouveaux coll√®gues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 10h00 Les √©quipes partent travailler sur le sujet du jour, √† leurs postes de travail&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 12h30 - 13h30 D√©jeuner&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 13h30 Jeu de reprise (facultatif) : on se retrouve autour d‚Äôun blind test ou un gartic phone, histoire de passer un bon moment et de se remettre en jambe pour l‚Äôapr√®s-midi. C‚Äôest un court moment de &lt;em&gt;team building&lt;/em&gt; qui est tr√®s appr√©ci√© la plupart du temps (sauf lorsque les √©quipes ne veulent pas perdre un minute pour venir √† bout de leur objectif !)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 14h00 Les √©quipes reprennent le travail initi√© le matin et essayent de finir un maximum de choses&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 17h30 On se retrouve en pl√©ni√®re pour le d√©brief de la journ√©e : on fait le point sur le travail accompli, le d√©compte des points gagn√©s par chaque √©quipe et on fait le fameux podium ainsi que la remise des prix. 
On r√©cup√®re √† chaud les premiers retours des participants.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;‚è∞ 18h00 Le verre de l‚Äôamiti√©&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>[&quot;e_perrin&quot;, &quot;a_ferez&quot;]</name></author><category term="infra" /><category term="legacy" /><category term="retour d&apos;exp√©rience" /><summary type="html">Elles sont l√†, tapies dans l‚Äôombre de la colonne ‚ÄúTo do‚Äù de vos backlogs, attendant que leur heure vienne. √Ä chaque backlog refinement, vous vous demandez s‚Äôil ne faut pas tout simplement les annuler, puisque personne ne les prend en charge‚Ä¶ De quoi parle-t-on ? De ces user stories qui existent dans le backlog‚Ä¶</summary></entry><entry><title type="html">Bedrock Dev Facts #19</title><link href="https://tech.bedrockstreaming.com/2023/03/13/bedrock-dev-facts-19.html" rel="alternate" type="text/html" title="Bedrock Dev Facts #19" /><published>2023-03-13T00:00:00+00:00</published><updated>2023-03-13T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/03/13/bedrock-dev-facts-19</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/03/13/bedrock-dev-facts-19.html">&lt;p&gt;La fin de l‚Äôhiver approche, il est temps de faire un bilan ! Quelles b√™tises le froid aura-t-il apport√©es parmi les devs ? ‚ùÑÔ∏è&lt;/p&gt;

&lt;h1 id=&quot;la-confiance-&quot;&gt;La confiance ü§û&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/dev-facts-19/how-to-test.png&quot; alt=&quot;Image d&apos;une Pull Request indiquant &apos;How to test ? Trust me&apos;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mieux-quun-readme&quot;&gt;Mieux qu‚Äôun readme&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Quand le mec t‚Äôexplique la solution, et finit par :&lt;/p&gt;

  &lt;p&gt;‚ÄúEnfin √ßa c‚Äôest si mon code a bien continu√© d‚Äô√™tre copi√© coll√© partout‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;une-√©thique-moi-&quot;&gt;Une √©thique, moi ?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Moi je peux mettre du code d√©gueulasse un peu partout, c‚Äôest pas un probl√®me !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;le-socrate-des-temps-modernes&quot;&gt;Le Socrate des temps modernes&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;La vie est un Spike&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;on-apprend-de-ses-erreurs&quot;&gt;On apprend de ses erreurs&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Set up a reminder ‚Äú@myself ne jamais dire ‚Äòje finis aujourd‚Äôhui‚Äô‚Äù in this channel at 9h45AM every day.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;en-tout-bien-tout-honneur-Ô∏è&quot;&gt;En tout bien tout honneur ‚ù§Ô∏è&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ah bah go, mets-moi en dur si tu veux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;git-101&quot;&gt;GIT 101&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;J‚Äôen ai connu certains, √† chaque fois qu‚Äôils avaient un conflit sur leur branche, ils supprimaient le repo avant de le re-cloner&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;ten-seconds-before-disaster&quot;&gt;Ten seconds before disaster&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le cache, c‚Äôest nul !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;shoehashole-boolean-&quot;&gt;shoeHasHole: boolean üëü&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;A : ‚Äòtin j‚Äôai un trou dans ma chaussure&lt;/p&gt;

  &lt;p&gt;B : Tu es s√ªr que c‚Äôest pas un false ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;on-a-tous-un-env-de-test-certains-ont-aussi-un-env-de-prod&quot;&gt;On a tous un env de test. Certains ont aussi un env de prod.&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/dev-facts-19/dev-env.png&quot; alt=&quot;Extrait de code d√©finissant la variable DEV_ENV comme √©gal √† prod&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;peur-de-rien-sauf-dune-chose&quot;&gt;Peur de rien, sauf d‚Äôune chose‚Ä¶&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;A : √áa finit en devs qui se reconvertissent Boulanger √ßa.&lt;/p&gt;

  &lt;p&gt;B : Certes, mais l‚Äôinverse est vrai aussi, il arrive que des Boulangers se reconvertissent apr√®s √™tre devenus allergiques √† la Farine.&lt;/p&gt;

  &lt;p&gt;A : C‚Äôest pour √ßa que je ne me reconvertirai pas en Barman‚Ä¶ trop peur‚Ä¶&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;la-confiance-second-√©pisode-&quot;&gt;La confiance, second √©pisode ü§û&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;C‚Äôest pas n‚Äôimporte quoi, juste un peu yolo !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;comme-de-leau-de-roche-trouble-&quot;&gt;Comme de l‚Äôeau de roche trouble !&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Franchement, je trouve √ßa clair ! Mais je comprends pas..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;de-rares-g√©nies-&quot;&gt;De rares g√©nies üí°&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;On est peut-√™tre des lumi√®res, mais √ßa ne veut pas dire qu‚Äôon est tous allum√©s !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;cassage-de-prod-dans-3-2-1&quot;&gt;Cassage de prod dans 3‚Ä¶ 2‚Ä¶ 1‚Ä¶&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;J‚Äôle sens bien l√†. J‚Äôle sens bien bien bien.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;its-not-a-bug-its-a-feature&quot;&gt;It‚Äôs not a bug, it‚Äôs a feature&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;J‚Äôai v√©rifi√©, le bug marchait bien.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;toujours-lire-les-petites-lignes-&quot;&gt;Toujours lire les petites lignes üîé&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tout* marche du coup !&lt;/p&gt;

  &lt;p&gt;(*pour l‚Äôinstant)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;miaou-&quot;&gt;Miaou üê±üìà&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;A : Je th√©orise que le chat ne miaule devant la porte que pour savoir s‚Äôil pourrait passer quand il aura envie.&lt;/p&gt;

  &lt;p&gt;B : Ouah ton chat il fait du monitoring de la porte !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;facile-comme-tout-&quot;&gt;Facile comme tout !&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;TKT ! tu mets ton JSON dans le yaml et √ßa ira !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;une-grande-histoire-damour-√©pisode-1&quot;&gt;Une grande histoire d‚Äôamour, √©pisode 1&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Moi, j‚Äôadore le JSON&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;une-grande-histoire-damour-√©pisode-2&quot;&gt;Une grande histoire d‚Äôamour, √©pisode 2&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le mail et le DNS c‚Äôest ma grande passion&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;partir-comme-un-roi-&quot;&gt;Partir comme un roi üëë&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/dev-facts-19/mic-drop.png&quot; alt=&quot;Image d&apos;une pull request nomm√©e &amp;quot;Wesh je fais ce squash et je touche plus a rien. Mic drop.&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;les-grandes-questions-de-la-vie-&quot;&gt;Les grandes questions de la vie ü•ê&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;D‚Äôailleurs c‚Äôest LinkedIn ou pain au linked ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;lhumour-pour-les-nuls&quot;&gt;L‚Äôhumour pour les nuls&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;A : &lt;em&gt;Pouffe de rire&lt;/em&gt;&lt;/p&gt;

  &lt;p&gt;B : Tout va bien ?&lt;/p&gt;

  &lt;p&gt;A : D√©sol√©, je viens de relire ma vanne&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;les-progr√®s-de-lia-&quot;&gt;Les progr√®s de l‚ÄôIA ü§ñ&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;A : Alors B, c‚Äôest quoi le format de date php de la constante de format ‚Äòc‚Äô ?&lt;/p&gt;

  &lt;p&gt;B : Tu m‚Äôas pris pour chatGPT ou quoi ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;un-stagiaire-en-d√©tresse&quot;&gt;Un stagiaire en d√©tresse&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;TLDR: √Ä l‚Äôaide svp&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;la-s√©curit√©-pour-les-nuls&quot;&gt;La s√©curit√© pour les nuls&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Brian is in the Keychain.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;promis-dans-le-contexte-cest-vrai&quot;&gt;Promis dans le contexte c‚Äôest vrai&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;On doit afficher des ronds, alors c‚Äôest mieux s‚Äôils nous envoient des carr√©s.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;üò≥&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;(Au pire, si on a la main sur une regexp, c‚Äôest d√©j√† plus qu‚Äôil n‚Äôen faut pour me faire r√™ver)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;la-s√©lection-naturelle&quot;&gt;La s√©lection naturelle&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Je suis d‚Äôaccord que l√† il y a un bug, mais c‚Äôest un bug parce que je suis con !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;-1&quot;&gt;üçµ&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Je suis en train de me rappeler de mon weekend, et spoiler mettre du rhum dans son th√© ce n‚Äôest pas une bonne id√©e.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;error--task-completed-successfully&quot;&gt;Error : Task completed successfully&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/dev-facts-19/error-success.png&quot; alt=&quot;Screen de popup d&apos;erreur indiquant &apos;Build failed to complete successfully&apos;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;la-confiance-30-&quot;&gt;La confiance, 3.0 ü§û&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Coucou, aujourd‚Äôhui, je p√®te la reco (en prod), mais c‚Äôest sous contr√¥le.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;un-instant-de-r√©alisme&quot;&gt;Un instant de r√©alisme&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Personnellement, je sais pas ce que je fous en d√©veloppeur !&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;thomas-the-train-&quot;&gt;Thomas the train üöÜ&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/dev-facts-19/tchou-tchou.png&quot; alt=&quot;Message de status Slack indiquant &apos;Working remotely from the tchou tchuou&apos;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;turlututu-chapeau-pointu-&quot;&gt;Turlututu chapeau pointu !&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;On aurait d√ª dire c‚Äôest ‚Äúchapeau perch√©‚Äù.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;mieux-quun-rappel-automatique-&quot;&gt;Mieux qu‚Äôun rappel automatique ü§Ø&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;A : Du coup, tu as envoy√© un mail ?&lt;/p&gt;

  &lt;p&gt;B : Pas encore non ! J‚Äôattendais d‚Äôy penser !&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Bedrock</name></author><category term="devfacts" /><category term="humour" /><summary type="html">La fin de l‚Äôhiver approche, il est temps de faire un bilan ! Quelles b√™tises le froid aura-t-il apport√©es parmi les devs ? ‚ùÑÔ∏è</summary></entry><entry><title type="html">Why is Transit Gateway service not right for us?</title><link href="https://tech.bedrockstreaming.com/2023/03/02/aws_transit_gateway.html" rel="alternate" type="text/html" title="Why is Transit Gateway service not right for us?" /><published>2023-03-02T00:00:00+00:00</published><updated>2023-03-02T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/03/02/aws_transit_gateway</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/03/02/aws_transit_gateway.html">&lt;p&gt;Managing the network of many interconnected AWS accounts can quickly lead to having a messy network architecture.&lt;br /&gt;
Transit Gateway (TGW) service seems to be the way out of this. So how do you know if TGW is right for you?&lt;/p&gt;

&lt;p&gt;This blog post will introduce how the service works and explain why we chose not to carry on with our migration to AWS Transit Gateway.
&lt;!--more--&gt;&lt;/p&gt;
&lt;h2 id=&quot;transit-gateways-backstory&quot;&gt;Transit Gateway‚Äôs backstory&lt;/h2&gt;

&lt;p&gt;Transit Gateway is a network transit hub that connects multiple VPCs and On-Premises sites to allows control traffic between them.&lt;br /&gt;
It was created to provide a new approach of network implementation on AWS and to make network administration smoother.&lt;/p&gt;

&lt;p&gt;VPC peering is a point-to-point connection between 2 VPCs.&lt;br /&gt;
It is a great example of complex network management because it adds a new topology to the network architecture.&lt;br /&gt;
On this diagram you can see an example of VPC peering usage. It‚Äôs not that messy yet but at scale it will be.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-03-02-aws_tgw/tgw.png&quot; alt=&quot;Network architecture without Transit Gateway&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By acting as a ‚Äúcloud router‚Äù, TGW centralizes network connections and takes control of packet forwarding between VPCs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-03-02-aws_tgw/tgw2.png&quot; alt=&quot;Network architecture with Transit Gateway&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VPC peerings are not required anymore, we go back to a simpler star network topology thanks to Transit Gateway which really does address the complexity and restrictions of VPC peerings.&lt;br /&gt;
At that point, TGW seems to be the perfect answer for a simpler network architecture.&lt;/p&gt;

&lt;h2 id=&quot;what-about-tgw-at-bedrock&quot;&gt;What about TGW at Bedrock?&lt;/h2&gt;

&lt;p&gt;We operate more than 20 different AWS accounts for our customers‚Äô platforms. Each account has a VPC with at least 3 private and 3 public subnets. We also manage AWS accounts for internal tools like ECR repositories, monitoring tools and shared s3 buckets. We configured Site-to-Site VPNs from On-Premises infrastructure to all the VPCs in these accounts.&lt;/p&gt;

&lt;p&gt;From the creation of new AWS accounts to deploying the tenants‚Äô platform, onboarding a new customer requires a lot of work and time.&lt;/p&gt;

&lt;p&gt;Configuring VPCs Site-to-Site VPN is one of the steps that requires a lot of work. This is why we were interested in Transit Gateway at first.&lt;/p&gt;

&lt;h3 id=&quot;proof-of-concept&quot;&gt;Proof of concept&lt;/h3&gt;

&lt;p&gt;We created a production like Proof of Concept infrastructure using three AWS accounts, two different regions, multiple VPCs and a single Site-to-Site VPN from TGW to On-Premises firewall.&lt;/p&gt;

&lt;h4 id=&quot;how-did-we-test-tgw&quot;&gt;How did we test TGW?&lt;/h4&gt;

&lt;p&gt;We started by trying to split routing domains.&lt;br /&gt;
Centralizing network connections also means (with correct ACLs or Security Groups) that VPCs can reach all other VPCs. We want to control that.&lt;br /&gt;
Transit Gateway attachments read their routes in the TGW route table they are associated to. This is how we manage routing domains.&lt;br /&gt;
We create a Transit Gateway routing table and create routes for target networks.&lt;br /&gt;
TGW attachments are able to propagate routes in a route table if we want to. But because of routing domains, we can‚Äôt use that option and we have to add routes manually (attachments only read routes in the route table).&lt;/p&gt;

&lt;p&gt;Then we tested Transit Gateway peering.&lt;br /&gt;
TGW is a regional service, this means that we need to have a TGW for each active AWS region. We use TGW peering to interconnect them.&lt;br /&gt;
We expected to have some way to propagate routes dynamically in the Transit Gateway peering route table. But it is not possible.&lt;/p&gt;

&lt;p&gt;The last thing we tested is migrating from VPC Site-to-Site VPN to TGW VPN.&lt;br /&gt;
Because of the amount of VPC Site-to-Site VPN we have, it was important for us to know if we could get a minimal down time on On-Premises to VPC connections when migrating to the Transit Gateway VPN.&lt;br /&gt;
This process requires a lot of time because routes have to be deleted and created manually on each side.&lt;/p&gt;

&lt;p&gt;Even if we noticed some pain points, tests went well. So we decided to initiate the migration to the Transit Gateway service.&lt;/p&gt;

&lt;h3 id=&quot;why-did-we-choose-to-rollback&quot;&gt;Why did we choose to rollback?&lt;/h3&gt;

&lt;p&gt;Everything was okay at first, we successfully migrated two VPC Site-to-Site VPN to our Transit Gateway VPN.&lt;/p&gt;

&lt;p&gt;But then previous pain points became barriers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;creating and managing routing domains is possible, but makes it impossible to use dynamic route propagation&lt;/li&gt;
  &lt;li&gt;there is not option to propagate routes in VPC route table, they all have to be created manually&lt;/li&gt;
  &lt;li&gt;data transfer cost is too high (and multiplied by the number of region on which you deployed TGW if your packets go through all these regions)&lt;/li&gt;
  &lt;li&gt;migrating to Transit Gateway requires a planned maintenance because there is a network downtime&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We took some time to talk about what to do next and concluded that migrating to Transit Gateway will just move the complexity of configuring VPC Site-to-Site VPNs to configuring TGW attachments and routes.&lt;/p&gt;

&lt;p&gt;AWS support did not suggest enough solutions to the problems we faced, so we decided to rollback to VPC Site-to-Site VPNs.&lt;/p&gt;</content><author><name>Christian VAN DER ZWAARD</name></author><category term="on-premise" /><category term="cloud" /><category term="aws" /><category term="network" /><summary type="html">Managing the network of many interconnected AWS accounts can quickly lead to having a messy network architecture. Transit Gateway (TGW) service seems to be the way out of this. So how do you know if TGW is right for you? This blog post will introduce how the service works and explain why we chose not to carry on with our migration to AWS Transit Gateway.</summary></entry><entry><title type="html">Projet XState</title><link href="https://tech.bedrockstreaming.com/2023/02/08/projet-xstate.html" rel="alternate" type="text/html" title="Projet XState" /><published>2023-02-08T00:00:00+00:00</published><updated>2023-02-08T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/02/08/projet-xstate</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/02/08/projet-xstate.html">&lt;p&gt;Dans une application frontend moderne, la gestion d‚Äô√©tat est un √©l√©ment central de son bon fonctionnement. Malgr√© les nombreuses librairies disponibles (Redux, MobX, Recoil‚Ä¶), cette tache reste complexe √† r√©aliser et il est facile de perdre le contr√¥le.&lt;/p&gt;

&lt;p&gt;Dans l‚Äôobjectif de rester maitre de son application, je vous propose de d√©couvrir XState, une librairie reposant sur le concept de machine √† √©tats. Si l‚Äôoutil ne fait pas tout, le concept de machine √† √©tat aide grandement √† concevoir une application r√©siliente.&lt;/p&gt;

&lt;p&gt;Pour pr√©senter au mieux les concepts, la th√©orie sera suivie de pratique au travers d‚Äôun live coding.&lt;/p&gt;</content><author><name>Maxime Blanc</name></author><category term="xstate" /><category term="lyonjs" /><category term="meetup" /><category term="react" /><category term="javascript" /><category term="conference" /><summary type="html">Dans une application frontend moderne, la gestion d‚Äô√©tat est un √©l√©ment central de son bon fonctionnement. Malgr√© les nombreuses librairies disponibles (Redux, MobX, Recoil‚Ä¶), cette tache reste complexe √† r√©aliser et il est facile de perdre le contr√¥le.</summary></entry><entry><title type="html">A journey into connected TVs industrialisation process, Part 1</title><link href="https://tech.bedrockstreaming.com/2023/01/10/bedrock-app-launcher.html" rel="alternate" type="text/html" title="A journey into connected TVs industrialisation process, Part 1" /><published>2023-01-10T00:00:00+00:00</published><updated>2023-01-10T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2023/01/10/bedrock-app-launcher</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2023/01/10/bedrock-app-launcher.html">&lt;p&gt;At Bedrock, we build and run streaming applications on a wide variety of OTT devices (more than 60 different ecosystems). While testing and experimenting is easy on web and mobile devices, even for non-developers, it‚Äôs not as easy for Connected TV (CTV). In this article, you‚Äôll discover how all of our employees can now access testing and pre-release environments on TV devices, with ease and without any technical knowledge.&lt;/p&gt;

&lt;h2 id=&quot;bedrock-tvjs-project&quot;&gt;Bedrock TvJS Project&lt;/h2&gt;

&lt;h3 id=&quot;how-does-it-work-&quot;&gt;How does it work ?&lt;/h3&gt;

&lt;p&gt;To address the growing number of CTVs vendors in the market, we have a one-and-only monorepo project named ‚ÄúTVJS‚Äù. It is a React application which we can deploy almost everywhere almost anywhere with the same code, UI and UX. The magic part? There isn‚Äôt much manufacturer-specific code in that application, most of those particularities are handled by our homemade JS library named PELO (Platform Easy Life Officer). &lt;em&gt;For non-French readers, ‚Äúp√©lo‚Äù is a Lyon/Grenoble city slang to designate ‚Äúsomeone‚Äù.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-01-10-bedrock-app-launcher/pelo-cli.png&quot; alt=&quot;Pelo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In a few words, PELO is a set of libraries showing a unified front API for TV developers, so they don‚Äôt have to keep in mind every TV specific details and custom APIs (like lifecycle, keyboard, storage handling, and more). PELO also provides several CLI tools allowing the use of proprietary manufacturer SDKs, with a common shared API.&lt;/p&gt;

&lt;p&gt;There are at least two ways to deploy a TV application:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A fully packaged solution, where all application files and resources are stored on the TV. Everytime you want to update it, application you have to go through the manufacturer QA process. Doing so, you can develop either a web application that will run through the TV‚Äôs Web Engine, or a native TV application.&lt;/li&gt;
  &lt;li&gt;The hosted solution, where the TV packaged application only redirects to a web application that you are responsible for. It grants much more flexibility, and delivery speed, as deployment and propagation of a new version are almost instantaneous.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We chose the second way as we are addressing a big number of devices and need all the flexibility we can have for deployments ‚Äì and, sadly, for rollbacks too. Therefore, we host and deploy our CTV applications like any other website and we control the TV Browser Engine to navigate to specific domain names.&lt;/p&gt;

&lt;p&gt;Three teams are working on this project, on the same repository:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;a team dedicated to Core features (like catalog, user lifecycle)&lt;/li&gt;
  &lt;li&gt;a team dedicated to Player features (video playback and advertising)&lt;/li&gt;
  &lt;li&gt;and a team supporting legacy devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Developer teams are supported by a QA team. It is responsible for functional quality assurance on Pull Requests and pre-releases. Quality assurance designates any processes to ensure a service meets its quality requirements in terms of experience, stability, ‚Ä¶&lt;/p&gt;

&lt;h3 id=&quot;develop--release-process&quot;&gt;Develop &amp;amp; release process&lt;/h3&gt;

&lt;p&gt;We do our maximum to ensure the best quality of service and experience of what we deliver to our customers and their end-users. We have a strong culture of automated testing &amp;amp; tech reviewing which allows us to deliver almost without a sweat‚Ä¶ Still, at our scale, missing a bug means a bad experience for thousands or millions of people! And that‚Äôs something we won‚Äôt accept without a fight!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;One of Bedrock‚Äôs Values is: ROCK-SOLID, ALWAYS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a consequence, we also have dedicated QA teams testing our work for a subset of device models and versions, before it is being merged to the main codebase, and before going to production as part of a release. They are doing so by connecting TVs to specific environments that are deployed on-demand: previews and staging.&lt;/p&gt;

&lt;p&gt;Let‚Äôs show off a little bit: at the beginning of 2022, thanks to the TVJS project, we were able to deploy production code to 7 manufacturers, and 38 device versions, meaning 266 combinations to check before launching a release into production! And these numbers are ever increasing!&lt;/p&gt;

&lt;h3 id=&quot;my-wish-make-testing-environments-easily-accessible&quot;&gt;My wish: make testing environments easily accessible&lt;/h3&gt;

&lt;p&gt;We love showing-off a bit over the applications we deliver on such a huge number of device models, but that doesn‚Äôt go with ease nor without pain.&lt;/p&gt;

&lt;p&gt;Testing a specific environment on a device was not possible for non-project members (other teams, support, business &amp;amp; product teams, managers ‚Ä¶). Starting a preview or a staging application requires a deep understanding of the project, proprietary SDKs (even with our PELO CLI), shell, Git commands and advanced knowledge of how devices work in Developer Mode. This was a major issue: it causes interruptions for developers, slows delivery down, reduces our Time To Market.&lt;/p&gt;

&lt;p&gt;QA teams assigned to the project know its basics, they can use PELO CLI and proprietary SDKs, but cannot debug issues they may encounter with such tools: they have to ask developers to take actions for them (as this is not their core job). Using those tools is also time-consuming and time is of the essence when running quality checks while preparing a release.&lt;/p&gt;

&lt;p&gt;Many teams also want to start environments by themselves, to test their own developments on back-end services, to investigate when a customer creates a support ticket, ‚Ä¶
The most important of them are Video teams, responsible for video encoding, transcoding and packaging: they are constantly testing new streams and features, and need a way to test their content by themselves, without asking around for a TVJS developer.&lt;/p&gt;

&lt;h2 id=&quot;our-answer-the-launcher-app-&quot;&gt;Our answer: The Launcher App !&lt;/h2&gt;

&lt;h3 id=&quot;what-does-it-do-&quot;&gt;What does it do ?&lt;/h3&gt;

&lt;p&gt;I‚Äôve developed a TV application to quickly and efficiently start a specific environment. Using the TV remote, people can select the wanted environment and be redirected to it instantly, having the app like they would with the specific app installed.&lt;/p&gt;

&lt;p&gt;Typing long texts is painful for TV users. So, when selecting the preview environment, it shows another set of options where users can input a specific PR number. A background process will ask our Github if it knows the PR number, if it is deployed on the selected customer/manufacturer and will pre-fill the branch name. If not specified, it will default back to our master preview that is updated whenever we merge code to the master branch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-01-10-bedrock-app-launcher/launcher-demo.gif&quot; alt=&quot;Launcher demo&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;technical-architecture&quot;&gt;Technical Architecture&lt;/h3&gt;

&lt;p&gt;The launcher is part of the TVJS monorepo, developed using React and re-using modules and packages for UI and Navigation allowing it to have minimum maintenance cost.&lt;/p&gt;

&lt;p&gt;For the first iterations of development of the launcher, I hosted it on AWS Amplify, but the Core team quickly integrated it back to a regular production deployment process we have at Bedrock.&lt;/p&gt;

&lt;p&gt;An automatic process builds the javascript bundle and assets and sends everything to AWS S3. The launcher will then be served through Fastly CDN. We build and deploy a unique launcher per compatible manufacturer on their own domain names (as-of-writing, Samsung Tizen, LG webOS and Hisense). For security reasons, those Fastly services are only accessible from our office networks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-01-10-bedrock-app-launcher/launcher-tech-arch.png&quot; alt=&quot;Launcher technical architecture&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;unreliability-of-launcher-app-installation&quot;&gt;Unreliability of launcher app installation&lt;/h3&gt;

&lt;p&gt;I‚Äôm proud of this launcher and it is already saving loads of time for our QA teams ! They love it, as it helps them focus on their primary role: ensuring service &amp;amp; experience quality. Still, installing the launcher application on every device in our office is a huge amount of work! And, unfortunately, not a persistent one.&lt;/p&gt;

&lt;p&gt;To develop and test apps on live devices, we need to set them in ‚ÄúDeveloper Mode‚Äù. And each manufacturer has its own way, more or less time-consuming. Worse, whenever Developer Mode expires, all applications installed during this time are uninstalled from the device! Which means we have to install the launcher again after a brief period of time.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.samsung.com/smarttv/develop/getting-started/using-sdk/tv-device.html&quot;&gt;Tizen Developer Mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://webostv.developer.lge.com/develop/getting-started/developer-mode-app&quot;&gt;LG webOS Developer Mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That period of time varies. For Samsung Tizen, we‚Äôre not absolutely sure, but it‚Äôs almost a month. For LG webOS, it is 50 hours if you don‚Äôt extend the Developer Mode or if you connect another TV with the same Developer Account.&lt;/p&gt;

&lt;p&gt;Specifically for LG, I did set up a CRON that automatically extends the Developer Mode, but sometimes it is being disconnected without reason‚Ä¶ Or a mishandling by team members can cause the CRON to fail.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-01-10-bedrock-app-launcher/webos-cron.png&quot; alt=&quot;LG webOS CRON configuration to extend Developer Mode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2023-01-10-bedrock-app-launcher/webos-extend-devmode.gif&quot; alt=&quot;Programmatically extending the Developer Mode on LG webOS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Therefore, we aren‚Äôt 100% sure the launcher application will be up and ready on all the office devices when work begins in the morning, which means developers will have to manually re-install the launcher when asked by another Bedrock employee. It generates frustration for both QA and developers as they are wasting precious time to re-install the launcher.&lt;/p&gt;

&lt;p&gt;Don‚Äôt worry though, I already have a couple of ideas to ensure the installation becomes reliable! I‚Äôll talk more about these it in a future article.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Any Bedrock employee can now start an office CTV, use the launcher app, select customer and environment, hit Let‚Äôs Go and access the environment they need to work!&lt;/p&gt;

&lt;p&gt;What we started to measure, and hopefully we‚Äôll have more refined metrics over the next months, is the time QA teams are gaining per day. They needed an average of 15 minutes to start up a TV, set up the Developer Mode, and install the wanted app through CLI. They are validating 5 PRs per day, on 2 different devices at minimum, they almost gain one hour per day. That means our Time To Market is faster, and our QA teams have more time to do exploratory testing as well as refining their tests and writing more automated tests. Something that is not as measurable as time, is the enhanced peace of mind for them to go to work every morning knowing they have a tool designed for them to focus on their core work.&lt;/p&gt;

&lt;p&gt;This has improved the QA team overall velocity! And it makes the whole project more accessible for any employee. However, there is still room for improvement regarding launcher deployment and stability over time, and this is something I will cover in our next article.&lt;/p&gt;

&lt;p&gt;I hope you liked this article and it helped you if you‚Äôre trying to achieve something similar!&lt;/p&gt;</content><author><name>Bedrock</name></author><summary type="html">At Bedrock, we build and run streaming applications on a wide variety of OTT devices (more than 60 different ecosystems). While testing and experimenting is easy on web and mobile devices, even for non-developers, it‚Äôs not as easy for Connected TV (CTV). In this article, you‚Äôll discover how all of our employees can now access testing and pre-release environments on TV devices, with ease and without any technical knowledge.</summary></entry><entry><title type="html">Nos retours sur l‚ÄôHAProxyConf Paris 2022</title><link href="https://tech.bedrockstreaming.com/2022/12/23/haproxyconf-paris-2022.html" rel="alternate" type="text/html" title="Nos retours sur l‚ÄôHAProxyConf Paris 2022" /><published>2022-12-23T00:00:00+00:00</published><updated>2022-12-23T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2022/12/23/haproxyconf-paris-2022</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2022/12/23/haproxyconf-paris-2022.html">&lt;p&gt;Bedrock √©tait pr√©sent lors de la Conf√©rence HAProxy qui se d√©roulait √† Paris en novembre 2022 : en tant que speaker, avec la pr√©sentation de Vincent Gallissot, mais aussi en tant que spectateur. Cet article relate les points forts qui nous ont marqu√©s.&lt;/p&gt;

&lt;p&gt;La pr√©sentation de Vincent Gallissot, Lead Cloud Architect chez Bedrock, mettait en valeur l‚Äôusage d‚ÄôHAProxy en tant que brique essentielle de notre infrastructure. Chez Bedrock, nous d√©veloppons et maintenons une plateforme de streaming qui a √©t√© migr√©e dans le Cloud en 2019. Cette pr√©sentation √©tait grandement inspir√©e de l‚Äôarticle intitul√© &lt;a href=&quot;https://tech.bedrockstreaming.com/2021/12/15/scaling-bedrock-video-delivery-to-50-million-users.html&quot; target=&quot;_blank&quot;&gt;‚ÄúScaling Bedrock video delivery to 50 million users‚Äù&lt;/a&gt;, dans lequel vous trouverez pl√©thore d‚Äôinformations concernant nos utilisations d‚ÄôHAProxy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-12-23-haproxyconf-paris-2022/keynote_conf_2022_bedrockstreaming.jpg&quot; alt=&quot;Vincent Gallissot presentation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sommaire&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#ce-que-des-millions-de-requ√™tes-par-seconde-signifient-en-termes-de-co√ªt-et-d√©conomie-d√©nergie&quot;&gt;Ce que des millions de requ√™tes par seconde signifient en termes de co√ªt et d‚Äô√©conomie d‚Äô√©nergie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#un-outil-pour-les-gouverner-tous&quot;&gt;Un outil pour les gouverner tous&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vous-reprendrez-bien-un-peu-de-p√©taoctets-&quot;&gt;Vous reprendrez bien un peu de p√©taoctets?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ce-que-des-millions-de-requ√™tes-par-seconde-signifient-en-termes-de-co√ªt-et-d√©conomie-d√©nergie&quot;&gt;Ce que des millions de requ√™tes par seconde signifient en termes de co√ªt et d‚Äô√©conomie d‚Äô√©nergie.&lt;/h2&gt;

&lt;p&gt;La keynote d‚Äôouverture avait pour orateur &lt;a href=&quot;https://twitter.com/willytarreau&quot; target=&quot;_blank&quot;&gt;Willy Tarreau&lt;/a&gt;, le Lead Developer d‚ÄôHAProxy.&lt;br /&gt;
Au travers d‚Äôune d√©monstration concr√®te m√©langeant software et hardware, l‚Äôobjectif √©tait de :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;transmettre l‚Äôid√©e qu‚Äôajouter une brique logicielle dans un syst√®me ne le d√©grade pas pour autant, bien au contraire&lt;/li&gt;
  &lt;li&gt;sensibiliser l‚Äôaudience quant √† la consommation d‚Äô√©nergie de nos syst√®mes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;contexte-technique-et-premi√®res-am√©liorations&quot;&gt;Contexte technique et premi√®res am√©liorations&lt;/h3&gt;

&lt;p&gt;Pour ce premier cas d‚Äô√©tude, Willy Tarreau nous pr√©sente le cas d‚Äôun service de vente en ligne.&lt;/p&gt;

&lt;p&gt;La stack technique est compos√©e de PHP / pgSQL (NodeJS + Symfony) et les images sont stock√©es en base de donn√©es. C‚Äôest cette architecture qui sera mise √† l‚Äô√©preuve lors des tests de charge √† venir.&lt;/p&gt;

&lt;p&gt;Dans un premier temps, plusieurs am√©liorations (sans HAProxy) sont propos√©es. Il peut s‚Äôagir d‚Äôun simple rappel, voir d‚Äôun pro-tip d‚Äôarchitecture pour les plus novices : Les images en base de donn√©es, c‚Äôest une mauvaise id√©e.&lt;/p&gt;

&lt;p&gt;En les d√©pla√ßant vers un CDN, le syst√®me peut rapidement et simplement doubler ses performances, la base de donn√©es √©tant un goulot d‚Äô√©tranglement. La taille des pages peut √™tre optimis√©e via l‚Äôactivation de l‚Äôoption http ‚Äúgzip‚Äù. Les informations de sessions sont elles aussi enregistr√©es en base de donn√©es. Afin d‚Äôam√©liorer les performances, il est possible d‚Äôajouter du caching via des outils tels que Memcache.&lt;/p&gt;

&lt;p&gt;Suite √† cela, une premi√®re am√©lioration d‚Äôarchitecture serait d‚Äôajouter un NLB (Network Load Balancer) en amont du syst√®me qui distribuerait les requ√™tes entrantes vers plusieurs unit√©s de calculs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-12-23-haproxyconf-paris-2022/keynote_conf_2022_request_arch.png&quot; alt=&quot;next architecture schematic keynote&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sch√©ma d‚Äôarchitecture, premi√®re version&lt;/p&gt;

&lt;p&gt;Dans le cas pr√©sent, les requ√™tes entrantes sont distribu√©es de fa√ßon al√©atoire entre les diff√©rentes unit√©s de traitement. Chacun de ces backends se connectant √† la m√™me et unique base de donn√©es.&lt;br /&gt;
Le benchmark ci-dessous (efficacit√©, au sens nombre de requ√™tes trait√©es en fonction du nombre d‚Äôunit√©s de calcul), ne montre pas une croissance lin√©aire. Il s‚Äôagit d‚Äôune courbe tendant vers une pente nulle (voir n√©gative pour les plus grosses architectures).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-12-23-haproxyconf-paris-2022/keynote_conf_2022_nlb_stats.png&quot; alt=&quot;stats of nlb with backends&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Graphique repr√©sentant l‚Äôefficacit√© du syst√®me en fonction du nombre de backends&lt;/p&gt;

&lt;h3 id=&quot;comment-expliquer-que-cette-architecture-ne-scale-pas-lin√©airement-&quot;&gt;Comment expliquer que cette architecture ne scale pas lin√©airement ?&lt;/h3&gt;

&lt;p&gt;Malgr√© les am√©liorations apport√©es pour les sessions gr√¢ce au cache, il subsiste encore un probl√®me.&lt;/p&gt;

&lt;p&gt;Le NLB est un composant qui ne fait que r√©partir la charge sans tenir compte de l‚Äôhistorique des requ√™tes. En effet, celui-ci va distribuer la charge d‚Äôentr√©e al√©atoirement vers les backends.&lt;br /&gt;
Chaque backend re√ßoit des requ√™tes provenant de n‚Äôimporte quel utilisateur impliquant alors un cache-miss tr√®s √©lev√© : l‚Äôutilisateur est rarement trouv√© dans le cache, ce qui g√©n√®re une requ√™te suppl√©mentaire en base de donn√©es et d√©grade les performances en plus de consommer inutilement des ressources.&lt;/p&gt;

&lt;h3 id=&quot;et-si-nous-ajoutons-haproxy-√†-notre-syst√®me-&quot;&gt;Et si nous ajoutons HAProxy √† notre syst√®me ?&lt;/h3&gt;

&lt;p&gt;C‚Äôest ici qu‚Äôentre en jeu HAProxy en rempla√ßant le NLB. Pour cela, pas besoin d‚Äôun foudre de guerre en termes de ressources.&lt;/p&gt;

&lt;p&gt;Les tests ont √©t√© effectu√©s sur une machine ARM Breadbee cadenc√©e √† 1 GHz et poss√©dant 64 Mo de RAM. Nous verrons √©galement par la suite qu‚Äôon pourrait m√™me se passer d‚Äôune machine suppl√©mentaire.&lt;/p&gt;

&lt;p&gt;Le but d‚ÄôHAProxy est de sp√©cialiser les caches des backends et plus globalement de forcer les sessions utilisateurs vers les m√™mes backends.&lt;/p&gt;

&lt;p&gt;Pour cela, HAProxy effectue une inspection de la couche 7 du trafic et renvoie toutes les requ√™tes d‚Äôun m√™me utilisateur sur une m√™me machine en r√©duisant ainsi les cache-miss aux seuls cas des nouveaux clients se connectant √† la plateforme. Ainsi, le nombre d‚Äôappels √† la base de donn√©es pour r√©cup√©rer les informations de session est drastiquement r√©duit, la majorit√© d‚Äôentre elles √©tant stock√©es en cache.&lt;/p&gt;

&lt;p&gt;Autre fonctionnalit√© de taille : HAProxy limite le nombre de requ√™tes faites en parall√®le sur un m√™me backend, ce qui limite les locks de processus et les temps d‚Äôattente. Ceci a pour cons√©quence directe de r√©duire la consommation CPU.&lt;/p&gt;

&lt;p&gt;Ces deux am√©liorations permettent √† l‚Äôapplication de scaler de fa√ßon beaucoup plus lin√©aire, tout en r√©duisant les consommations CPU et √©nerg√©tiques inutiles. Globalement, les performances initiales sont largement d√©pass√©es avec deux fois moins de backends.&lt;/p&gt;

&lt;h3 id=&quot;a-partir-de-quand-est-il-int√©ressant-de-franchir-le-pas-&quot;&gt;A partir de quand est-il int√©ressant de franchir le pas ?&lt;/h3&gt;

&lt;p&gt;Maintenant que les b√©n√©fices d‚ÄôHAProxy ont √©t√© pr√©sent√©s, la prochaine √©tape est de se demander : quand est-ce qu‚Äôon se lance ? La question est consid√©r√©e en termes de performance, mais aussi sous un angle p√©cunier.&lt;br /&gt;
Si HAProxy peut √™tre int√©gr√© sans augmenter les co√ªts du syst√®me, c‚Äôest encore mieux.&lt;/p&gt;

&lt;p&gt;Ajouter HAProxy dans un syst√®me compos√© d‚Äôun seul backend n‚Äôapporte pas de b√©n√©fice : il n‚Äôy a pas de load-balancing possible. Avec deux backends, si on divise le besoin de processing par deux, nous n‚Äôavons plus qu‚Äôun seul backend et donc pas de load-balancing possible.&lt;br /&gt;
C‚Äôest en fait √† partir de 4 backends que l‚Äôajout d‚Äôun HAProxy en entr√©e devient int√©ressant :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;en retirant 2 serveurs de nos backends en conservant une puissance √©quivalente (cf les tests ci-dessus)&lt;/li&gt;
  &lt;li&gt;et en recyclant un des deux backends retir√©s en h√¥te pour HAProxy
En fin de compte, pour une m√™me puissance de traitement, un backend est retir√© ce qui permet de r√©duire les co√ªts de fonctionnement. Ce principe s‚Äôapplique √©galement sur un grand nombre de backends.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C‚Äôest l√† que prend tout son sens l‚Äôexpression qui avait √©t√© utilis√©e pour conclure cette keynote : ‚ÄúHAProxy is a free software running on free hardware‚Äù.&lt;/p&gt;

&lt;p&gt;Chez Bedrock, nous appliquons aussi ces diff√©rentes techniques de Consistent Hashing en entr√©e de notre CDN vid√©o. Nos caches vid√©os sont sp√©cialis√©s et chaque utilisateur est redirig√© vers un unique backend lors de la lecture d‚Äôune vid√©o.&lt;br /&gt;
Pour en savoir plus, vous pouvez consulter notre article au sujet du &lt;a href=&quot;https://tech.bedrockstreaming.com/2021/11/18/hsdo.html&quot; target=&quot;_blank&quot;&gt;Consistent Hashing&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;un-outil-pour-les-gouverner-tous&quot;&gt;Un outil pour les gouverner tous&lt;/h2&gt;

&lt;p&gt;Dans notre activit√© en informatique, nous sommes amen√©s √† d√©livrer de plus en plus rapidement des applications, des mises √† jour, etc‚Ä¶ Nous avons donc adopt√© la philosophie DevOps et tout un panel d‚Äôoutils autour de celle-ci afin de s√©curiser, monitorer et automatiser chaque √©tape de nos pipelines de livraison.&lt;/p&gt;

&lt;p&gt;Le cas de figure du load balancing est int√©ressant dans ce type d‚Äôorganisation, il est essentiel d‚Äôexposer de nouvelles applications sur les environnements de production mais √©tant donn√© que la ma√Ætrise de cet outil requiert une compr√©hension du r√©seau, la responsabilit√© incombe souvent √† l‚Äô√©quipe Ops de le g√©rer.&lt;/p&gt;

&lt;h3 id=&quot;vous-souhaitez-mieux-g√©rer-votre-flotte-haproxy-&quot;&gt;Vous souhaitez mieux g√©rer votre flotte HAProxy ?&lt;/h3&gt;

&lt;p&gt;Anjelko Iharos, directeur de l‚Äôing√©nierie √† HAProxy Technologies nous a pr√©sent√© leur nouvel outil d‚Äôautomatisation : HAProxy Fusion Control Plane, packag√© dans la version entreprise de HAProxy.&lt;/p&gt;

&lt;p&gt;Celui-ci va amener une nouvelle interface enrichie afin de g√©rer toutes les instances HAProxy et les outils gravitant autour de ces derni√®res.&lt;/p&gt;

&lt;p&gt;On peut citer :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;La possibilit√© pour les d√©veloppeurs de router eux-m√™me leurs applications sans avoir besoin d‚Äôun Ops dans leurs pipelines de CI via l‚ÄôAPI Fusion.&lt;/li&gt;
  &lt;li&gt;G√©rer les WAF de HAProxy de mani√®re centralis√©e et r√©percuter cette configuration sur un ensemble de clusters/instances.&lt;/li&gt;
  &lt;li&gt;Permettre aux Ops de g√©rer la structure de leurs load balancers, ajouter de nouvelles instances, g√©rer les certificats SSL, le tuning des performances depuis un seul point d‚Äôentr√©e.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;est-ce-r√©silient-&quot;&gt;Est-ce r√©silient ?&lt;/h3&gt;

&lt;p&gt;Fusion Control Plane est livr√© avec tout un set de features int√©ressantes pour assurer sa maintenabilit√© et sa r√©silience :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Une pleine observabilit√© avec une application unifi√©e de r√©cup√©ration de logs, m√©triques et rapports dans la m√™me interface. L‚Äôexport de ces data est possible, notamment pour les transposer dans un dashboard tiers (Grafana, par exemple).&lt;/li&gt;
  &lt;li&gt;Un syst√®me de RBAC permettant de mieux g√©rer les p√©rim√®tres de chacune des √©quipes dans le control plane.&lt;/li&gt;
  &lt;li&gt;La gestion centralis√©e de la configuration, la validation des configurations et le bot management. La partie WAF est packag√©e avec OWASP (communaut√© publiant des recommandations pour la s√©curisation des applications web) ModSecurity Core Rule Set (CRS) pour la d√©tection des vuln√©rabilit√©s. Dans le cadre d‚Äôun cluster un syst√®me de failover automatique avec auto-√©lection du leader (√† la mani√®re de GOSSIP avec Consul).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;une-vue-de-lavenir-&quot;&gt;Une vue de l‚Äôavenir ?&lt;/h3&gt;

&lt;p&gt;Aujourd‚Äôhui, Fusion Control Plane limite son scope √† HAProxy Entreprise et Community Edition, les IngressController ne sont pour le moment pas encore support√©s.&lt;/p&gt;

&lt;p&gt;Il n‚Äôest pas encore pleinement compatible avec les features offertes par AWS (Gestion des ASG et de Route53) mais c‚Äôest en cours de d√©veloppement chez HAProxy Technologies.&lt;/p&gt;

&lt;p&gt;Le produit semble prometteur et int√©ressant. Les possibilit√©s qu‚Äôil nous offre pour laisser la main aux d√©veloppeurs sur la mise en place de routes vers leurs applications c√¥t√© on-premise est vraiment un gros plus, mais il nous manque pour le moment le support de l‚ÄôIngressController HAProxy utilis√© sur nos cluster Kubernetes, ce qui nous emp√™che d‚Äôen profiter au maximum.&lt;/p&gt;

&lt;h2 id=&quot;vous-reprendrez-bien-un-peu-de-p√©taoctets-&quot;&gt;Vous reprendrez bien un peu de p√©taoctets ?&lt;/h2&gt;

&lt;p&gt;Chez Bedrock, un √©l√©ment central de notre m√©tier est de fournir de la vid√©o √† nos utilisateurs. (Incroyable pour une boite qui fait de la VOD hein? üòÄ).&lt;/p&gt;

&lt;p&gt;Pour ce faire nous avons nos propres serveurs CDN h√©berg√©s sur Paris, en compl√©ment des CDN publics comme Cloudfront ou Fastly. Cette ann√©e nous avons servis plusieurs centaines de PB de donn√©es via nos serveurs et nous esp√©rons pouvoir au moins doubler ce trafic l‚Äôann√©e prochaine !&lt;/p&gt;

&lt;p&gt;Notre architecture CDN est constitu√©e d‚Äôun logiciel appel√© LBCDN qui ‚Äúload-balance‚Äù la charge sur les CDN, on-prem et publics, en redirigeant un utilisateur vers un serveur CDN sp√©cifique.&lt;br /&gt;
Nos serveurs en eux-m√™mes sont bas√©s sur Nginx avec une configuration assez simple en direct IO sur de gros SSD.&lt;/p&gt;

&lt;p&gt;La HAproxy conf 2022 nous a pas mal inspir√©s pour r√©pondre √† nos probl√©matiques avec ces deux conf√©rences :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.haproxyconf.com/presentations/boost-your-web-apps-with-haproxy-and-varnish/&quot; target=&quot;_blank&quot;&gt;Boost your web apps with HAProxy and Varnish, by J√©r√©my Lecour CTO of Evolix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.haproxyconf.com/presentations/was-that-really-haproxy/&quot; target=&quot;_blank&quot;&gt;Was That really HAProxy, by Ricardo Nabinger Sanchez performance engineer at Taghos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ces deux pr√©sentations font √©tat d‚Äôune architecture sur les CDN int√©ressante o√π HAProxy est utilis√© pour mettre ‚Äúen sandwich‚Äù l‚Äôoutil (ou les outils) faisant fonction de CDN.
L‚Äôarchitecture pr√©sent√©e semble permettre une configuration bien plus fine que ce que nous avons actuellement avec seulement Nginx.&lt;/p&gt;

&lt;p&gt;Par exemple, sur nos CDN on-prem nous devons aujourd‚Äôhui utiliser une astuce pour que Nginx puisse dynamiquement aller r√©soudre le nom de domaine du backend sur lequel il source ses fichiers. Cela est d√©j√† un peu dommage de ne pas avoir de m√©canisme disponible nativement. De plus, ce m√©canisme est difficile √† coupler avec d‚Äôautres permettant d‚Äôavoir du fail-over par exemple.&lt;/p&gt;

&lt;p&gt;C‚Äôest ici qu‚ÄôHAProxy pourrait intervenir pour r√©soudre notre probl√©matique car il nous permet d‚Äôavoir du fail over et des tests plus fins sur l‚Äô√©tat de sant√© des backends.&lt;/p&gt;

&lt;p&gt;De plus, nous sommes en train de tester une solution de second-tier de CDN qui, du fait de la complexit√© ajout√©e √† notre architecture de CDN, profiterait beaucoup d‚Äôune plus grande finesse de configuration.&lt;/p&gt;

&lt;p&gt;‚ÄúMais attends, tu n‚Äôas parl√© que de HAProxy en backend l√†, tu triches un peu non? C‚Äôest pas un sandwich c‚Äôest une tartine de HAProxy l√†!‚Äù
Tout √† fait, notre cas d‚Äôusage actuel n‚Äôa pas forc√©ment besoin d‚Äôun HAProxy en frontal de Nginx.&lt;/p&gt;

&lt;p&gt;MAIS!&lt;/p&gt;

&lt;p&gt;C‚Äôest l√† que les conf√©rences sont int√©ressantes car elles montrent que l‚Äôon peut mixer les backends.&lt;br /&gt;
Dans la conf√©rence pr√©sent√©e par Ricardo, l‚Äôutilisation de deux backends (Varnish et hyper-cache) sur un m√™me serveur est permise par un HAProxy. Cela permet de profiter de la compl√©mentarit√© de ces services.&lt;br /&gt;
Dans notre cas, nous n‚Äôavons pas besoin de cela mais une autre conf√©rence nous a mis la puce √† l‚Äôoreille : &lt;a href=&quot;https://www.haproxyconf.com/presentations/writing-haproxy-filters-in-rust/&quot; target=&quot;_blank&quot;&gt;Writing HAProxy Filters in Rust&lt;/a&gt;, by Aleksandr Orlenko.&lt;br /&gt;
Cela pourrait nous permettre, avec un HAProxy en frontal, d‚Äôagr√©ger plus finement les mesures de performances du serveur afin d‚Äôoptimiser l‚Äôusage de ses ressources, ou d√©porter une partie du trafic sur un serveur moins charg√©, ou encore de r√©cup√©rer une partie des traitements actuellement effectu√©s par le LBCDN.&lt;/p&gt;

&lt;p&gt;Ajouter cette fonctionnalit√© serait la belle cerise au kirsch au sommet de ce sandwich de HAProxy.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-12-23-haproxyconf-paris-2022/keynote_conf_2022_cake.png&quot; alt=&quot;cake illustration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;‚ÄúIl est bizarre ton sandwich‚Äù&lt;/p&gt;

&lt;p&gt;‚ÄúBon d‚Äôaccord, c‚Äôest plut√¥t un g√¢teau √† √©tages.‚Äù&lt;/p&gt;

&lt;p&gt;‚ÄúOk c‚Äôest mieux, mais je pr√©f√®re les macarons de la HAProxy Conf 2022 quand m√™me.‚Äù&lt;/p&gt;

&lt;h2 id=&quot;a-une-prochaine-fois-&quot;&gt;A une prochaine fois !&lt;/h2&gt;

&lt;p&gt;La HAProxyConf, c‚Äô√©tait deux jours de conf√©rences avec des orateurs venus de tous les coins du globe.&lt;br /&gt;
Une belle occasion pour nous d‚Äôen apprendre plus sur un outil que nous utilisons quotidiennement chez Bedrock.&lt;br /&gt;
Dans cet article, nous n‚Äôavons pas pu faire mention de tout ce qui nous a int√©ress√©. Nous pourrions notamment citer les tr√®s int√©ressantes conf√©rences au sujet de :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Docker et leur utilisation de l‚Äôoutil Keda&lt;/li&gt;
  &lt;li&gt;Ou encore de SoundCloud et leurs mesures anti-DDOS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cette conf√©rence √©tait aussi l‚Äôoccasion d‚Äô√©changer avec l‚Äô√©quipe HAProxy autour de sujets techniques qui nous concernent, de voir que nous utilisions d√©j√† certaines bonnes pratiques, mais aussi que nous avions de quoi nous am√©liorer.&lt;/p&gt;

&lt;p&gt;Suite √† cette conf√©rence, c‚Äôest HAProxy Fusion que nous attendons le plus. Fusion s‚Äôannonce comme l‚Äôoutil id√©al pour manager une flotte d‚ÄôHAProxy. Jusqu‚Äô√† pr√©sent, nous devions utiliser une solution maison &lt;a href=&quot;https://tech.bedrockstreaming.com/2021/11/18/hsdo&quot; target=&quot;_blank&quot;&gt;HSDO&lt;/a&gt;, fonctionnelle, mais tr√®s probablement moins bien int√©gr√©e qu‚Äôun outil directement fourni par HAProxy.&lt;/p&gt;</content><author><name>Bedrock</name></author><category term="haproxy" /><category term="haproxyconf" /><category term="conference" /><summary type="html">Bedrock √©tait pr√©sent lors de la Conf√©rence HAProxy qui se d√©roulait √† Paris en novembre 2022 : en tant que speaker, avec la pr√©sentation de Vincent Gallissot, mais aussi en tant que spectateur. Cet article relate les points forts qui nous ont marqu√©s.</summary></entry><entry><title type="html">How Micro-Services changed our caching architecture</title><link href="https://tech.bedrockstreaming.com/2022/12/23/varnish-operator.html" rel="alternate" type="text/html" title="How Micro-Services changed our caching architecture" /><published>2022-12-23T00:00:00+00:00</published><updated>2022-12-23T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2022/12/23/varnish-operator</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2022/12/23/varnish-operator.html">&lt;p&gt;At Bedrock we use Cloudfront or Fastly for two different reason. To protect our applications from potential Distributed Denial of Service Attack. And to provide a layer of cache in front of our applications. No need to go down to the app for an easily cacheable response.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;before the project&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image0.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;At least that is what we thought in 2018 when we were migrating from on premise to the Cloud.&lt;/p&gt;

&lt;p&gt;At that time we had a Varnish instance caching everything at the border  of our on premise infrastructure. All the applications were running either on virtual machines or on bare metal servers. Those applications were mostly called by the end-user‚Äôs browser. Whenever an application called another application it did it through Varnish.&lt;/p&gt;

&lt;p&gt;This is ideal if applications are mostly called from the outside world. The Varnish instance caches all cacheable content, and it does not cost too much time as it was in the same Data Center.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;historically-before-2018&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image2.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;
In 2023, we think otherwise. We have now a &lt;a href=&quot;https://kops.sigs.k8s.io/&quot;&gt;KOps&lt;/a&gt; managed Kubernetes cluster running on EC2 spot instances in private subnets at AWS. As we migrated to the cloud we also embarked on the journey of splitting monolith into smaller more manageable microservices.&lt;/p&gt;

&lt;p&gt;With less monoliths the Bedrock product is more resilient and easier to scale but it changes the topologies of network calls. Before there were far more calls coming from the internet from end-users browsers. Now with the new architecture coming into place inter-app requests have increased.&lt;/p&gt;

&lt;p&gt;One solution would be to directly call the ingress of the applications, staying inside the cluster but without the benefit of caching as it is handled by the CDN. This would lead to unsustainable increase in CPU usage, and probably very little gain in terms of response time.&lt;/p&gt;

&lt;p&gt;A better solution for us would be to have the caching of CDN inside the cluster. This would enable us to have fast response time and little to no increase in CPU usage.&lt;/p&gt;

&lt;h1 id=&quot;enter-varnish-operator&quot;&gt;Enter Varnish-Operator&lt;/h1&gt;

&lt;p&gt;We tested the project &lt;a href=&quot;https://github.com/IBM/varnish-operator&quot;&gt;IBM/Varnish-Operator&lt;/a&gt;. This project allows us to create Custom Resources for Kubernetes handled by the Varnish-Operator. This object is called a VarnishCluster, the configuration is pretty simple to get started. This enables us to have a caching layer, between the Ingress-Controller and the Application.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;varnishcluster&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image1.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;VarnishCluster also uses Varnish Configuration Language (VCL) which we are pretty familiar with since we use Varnish On-Premise since 2015, and developers use it regularly to configure Fastly distribution.&lt;/p&gt;

&lt;p&gt;By adding cache using VarnishCluster to an application that is not fully cacheable, we almost divided it‚Äôs average response time by two. It is not a surprise as inter api calls used to look like the following graph:&lt;/p&gt;
&lt;center&gt;&lt;img alt=&quot;before-varnishcluster&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image3.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We changed parameters in the application after adding VarnishCluster so that it calls other app inside the cluster like in the following graph:&lt;/p&gt;
&lt;center&gt;&lt;img alt=&quot;after-varnishcluster&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image4.png&quot; /&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;a-few-details&quot;&gt;A few details&lt;/h1&gt;

&lt;p&gt;Before I wrap this up, here are a few details about the implementations.&lt;/p&gt;

&lt;p&gt;As you will be able to read in the Varnish documentation:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;‚ÄúBy default Varnish will use 100 megabytes of malloc(3) storage for caching objects, if you want to cache more than that, you should look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s&lt;/code&gt; argument.‚Äù&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So if you give many Gigs of memory to your Varnish container it won‚Äôt be attributed to the Varnish process. You can set it with the argument &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-s storage=malloc,&amp;lt;Number&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As we use only Spot nodes that can be terminated by AWS at any moment with only 2 minutes notice, we want to give more resilience to our Varnish Clusters pod as cache is stored in RAM memory.
You lose all your cache at each restart of the Varnish Container.&lt;/p&gt;

&lt;p&gt;We configured &lt;a href=&quot;https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity&quot;&gt;podAntiAffinity&lt;/a&gt; between application pods and VarnishClusters‚Äô to avoid scheduling those pods on the same node and be vulnerable to reclaims.&lt;/p&gt;

&lt;p&gt;We added a &lt;a href=&quot;https://kubernetes.io/docs/tasks/run-application/configure-pdb/&quot;&gt;podDisruptionBudget&lt;/a&gt; to avoid losing all our pods at the same time. We also customized the VCL a bit to make Varnish serve stale content in case our application is unreachable.&lt;/p&gt;

&lt;p&gt;We also added a Prometheus Service Monitor to make sure all Varnish metrics would be scraped by &lt;a href=&quot;https://tech.bedrockstreaming.com/2022/09/06/monitoring-at-scale-with-victoriametrics.html&quot;&gt;Victoria Metrics&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;in-the-future&quot;&gt;In the Future&lt;/h1&gt;

&lt;p&gt;In next versions we would like to add the possibility to configure &lt;a href=&quot;https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass&quot;&gt;PriorityClass&lt;/a&gt; of VarnishClusters pod. PriorityClasses are used to order workloads priority.
In a context of scaling and of scarcity of resources, the scheduler will evict pods of lower priority to make room for the pod it is trying to schedule.&lt;/p&gt;

&lt;p&gt;For now our VarnishCluster‚Äôs pods have the PriorityClass by default but it is more critical than any other applications as it holds a cache in its memory.&lt;/p&gt;

&lt;p&gt;Also we do not have logs of Varnish. We would like to be able to stream VarnishLog content into &lt;a href=&quot;https://grafana.com/oss/loki/&quot;&gt;Loki&lt;/a&gt;. This would be super useful to debug and to investigate if we ever encounter bugs or unexpected behaviors.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;center&gt;&lt;img alt=&quot;average-Response-time after apps call through VarnishCluster&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image5.png&quot; /&gt;
&lt;p&gt;Average response time going down, red bar is when we pushed it in production&lt;/p&gt;&lt;/center&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;With the generalization of microservices, Bedrock needed to rethink its architecture to optimize not only for browser to API calls but also for more API to API usage. By adding VarnishCluster in front of our applications and calling them directly from inside the cluster we improved significantly the Bedrock product.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/IBM/varnish-operator&quot;&gt;The Github project&lt;/a&gt; is still young and lacks important features, we hope with this article to help draw attention to this project and potential contributors.&lt;/p&gt;

&lt;center&gt;&lt;img alt=&quot;meme-contribute-pls&quot; src=&quot;/images/posts/2022-12-23-varnish-operator/image6.jpg&quot; /&gt;&lt;/center&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Arthur Zinck</name></author><category term="on-premise" /><category term="cloud" /><category term="cdn" /><category term="varnish" /><category term="aws" /><category term="cloud" /><category term="fastly" /><category term="varnish-operator" /><category term="cloudfront" /><category term="alb" /><summary type="html">At Bedrock we use Cloudfront or Fastly for two different reason. To protect our applications from potential Distributed Denial of Service Attack. And to provide a layer of cache in front of our applications. No need to go down to the app for an easily cacheable response.</summary></entry><entry><title type="html">Ce que nous retenons de la droidcon London 2022</title><link href="https://tech.bedrockstreaming.com/2022/11/22/droidcon-london-2022.html" rel="alternate" type="text/html" title="Ce que nous retenons de la droidcon London 2022" /><published>2022-11-22T00:00:00+00:00</published><updated>2022-11-22T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2022/11/22/droidcon-london-2022</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2022/11/22/droidcon-london-2022.html">&lt;p&gt;La communaut√© Android a apport√© le soleil sur Londres les 27 et 28 octobre 2022. La droidcon London a r√©uni plus de 1400 d√©veloppeurs autour de l‚Äô√©cosyst√®me Android, de ses outils et enjeux actuels. Jetpack Compose, √©videmment, mais aussi Gradle, modularisation, optimisation et autres sujets plus divers ont √©t√© abord√©s lors de ce rendez-vous incontournable pour la communaut√©.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-11-22-droidcon-london/entrance.jpg&quot; alt=&quot;droidcon London 2022 entrance&quot; /&gt;&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#√ßa-compile----rafi-panoyan&quot; id=&quot;markdown-toc-√ßa-compile----rafi-panoyan&quot;&gt;√áa compile ? - Rafi Panoyan&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#vous-reprendrez-bien-un-peu-de-gradle-enterprise-&quot; id=&quot;markdown-toc-vous-reprendrez-bien-un-peu-de-gradle-enterprise-&quot;&gt;Vous reprendrez bien un peu de Gradle Enterprise ?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#dessine-moi-un-module&quot; id=&quot;markdown-toc-dessine-moi-un-module&quot;&gt;&lt;em&gt;Dessine-moi un module&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#trucs-et-astuces&quot; id=&quot;markdown-toc-trucs-et-astuces&quot;&gt;Trucs et astuces&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#design-the-world---damien-cuny&quot; id=&quot;markdown-toc-design-the-world---damien-cuny&quot;&gt;Design the world - Damien Cuny&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#to-compose&quot; id=&quot;markdown-toc-to-compose&quot;&gt;To Compose&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#design-system&quot; id=&quot;markdown-toc-design-system&quot;&gt;Design System&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vers-linfini-et-au-del√†&quot; id=&quot;markdown-toc-vers-linfini-et-au-del√†&quot;&gt;Vers l‚Äôinfini et au-del√†&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#la-gestion-des-erreurs---david-yim&quot; id=&quot;markdown-toc-la-gestion-des-erreurs---david-yim&quot;&gt;&lt;strong&gt;La gestion des erreurs&lt;/strong&gt; - David Yim&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#v√©rification-des-entr√©es&quot; id=&quot;markdown-toc-v√©rification-des-entr√©es&quot;&gt;V√©rification des entr√©es&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#le-type-either&quot; id=&quot;markdown-toc-le-type-either&quot;&gt;Le type Either&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kotlin-result&quot; id=&quot;markdown-toc-kotlin-result&quot;&gt;Kotlin Result&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#conclusion&quot; id=&quot;markdown-toc-conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#√†-la-prochaine-&quot; id=&quot;markdown-toc-√†-la-prochaine-&quot;&gt;√Ä la prochaine !&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;√ßa-compile----rafi-panoyan&quot;&gt;√áa compile ? - Rafi Panoyan&lt;/h2&gt;

&lt;p&gt;Les sujets de compilation ont tenu une place tr√®s importante lors de cette √©dition de la droidcon Londres 2022. 
Qu‚Äôil s‚Äôagisse d‚Äôoptimiser ses temps de compilation, de repenser la cr√©ation de modules et des d√©pendances entre eux, de factoriser les logiques des scripts de compilation, 
nous avons eu une emphase claire sur l‚Äôimportance d‚Äôadresser ces sujets.&lt;/p&gt;

&lt;h3 id=&quot;vous-reprendrez-bien-un-peu-de-gradle-enterprise-&quot;&gt;Vous reprendrez bien un peu de Gradle Enterprise ?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/nellyspageli&quot;&gt;Nelson Osacky&lt;/a&gt;, qui travaille chez Gradle, a pr√©sent√© tous les outils que la formule &lt;a href=&quot;https://gradle.com/&quot;&gt;Gradle Entreprise&lt;/a&gt; met √† disposition des d√©veloppeurs pour analyser en d√©tail les compilations.&lt;/p&gt;

&lt;p&gt;Vous voulez v√©rifier que la compilation incr√©mentale est bien appliqu√©e partout o√π cela est possible ? Un script permet de comparer, dans des conditions reproductibles, 
les entr√©es et sorties de vos builds, et analyse les t√¢ches emp√™chant ce m√©canisme central dans la r√©duction des temps de compilation.&lt;/p&gt;

&lt;p&gt;Vous voulez vous assurer que Gradle est bien capable de retrouver le cache de vos t√¢ches sur un m√™me poste ou bien depuis le cloud ? 
L√† aussi des outils vous permettent d‚Äôidentifier pr√©cisemment les points qui ne tirent pas parti de ces m√©canismes.&lt;/p&gt;

&lt;p&gt;On regrettera que ces outils soient disponibles uniquement pour la formule payante de Gradle. Cependant, les &lt;a href=&quot;https://scans.gradle.com/&quot;&gt;scans Gradle&lt;/a&gt; sont, eux,
gratuits et illimit√©s, et permettent tout de m√™me de mesurer et comparer des compilations et ainsi suivre l‚Äôimpact des diff√©rentes optimisations que vous pourriez apporter.&lt;/p&gt;

&lt;h3 id=&quot;dessine-moi-un-module&quot;&gt;&lt;em&gt;Dessine-moi un module&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;La modularisation ayant un impact sur les temps de compilation, plusieurs conf√©rences ont abord√© ce sujet tr√®s en vogue dans la communaut√© Android.&lt;/p&gt;

&lt;p&gt;Un point de vue int√©ressant de &lt;a href=&quot;https://twitter.com/josef_raska&quot;&gt;Josef Raska&lt;/a&gt; nous invite √† nous poser la question de la pertinence de modulariser selon le contexte. 
Ne pas suivre une tendance mais se poser la question de l‚Äôutilit√© d‚Äôun nouveau module, et encore plus de ses d√©pendances avec les autres modules. 
Voil√† des propos qui invitent √† mesurer concr√®tement l‚Äôimpact du chantier de la modularisation dans nos applications.&lt;/p&gt;

&lt;p&gt;Ainsi, si on peut penser que modulariser permet de r√©duire les temps de compilation (en tirant parti de la parall√©lisation des t√¢ches par exemple), 
un chemin de d√©pendances trop long entre le module initial et la d√©pendance la plus profonde va entra√Æner une augmentation du temps de compilation.&lt;/p&gt;

&lt;p&gt;Vigilance, donc, sur les ‚Äúhubs de d√©pendances‚Äù (ces d√©pendances dont beaucoup de modules ont besoin, et qui ont besoin de beaucoup de modules).&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/images/posts/2022-11-22-droidcon-london/dep-hub.png&quot; alt=&quot;Dependency hub&quot; /&gt;
  &lt;figcaption&gt;1. Hub de d√©pendances&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;hr /&gt;

&lt;p&gt;De la m√™me mani√®re, un chemin de d√©pendances de trop grande profondeur ne permettra pas de tirer parti de la parall√©lisation des t√¢ches de compilation.
Sur le sch√©ma ci-dessous, on peut voir qu‚Äôun chemin de profondeur 4 existe pour aller du module applicatif vers le module le plus bas dans la hi√©rarchie.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/images/posts/2022-11-22-droidcon-london/dep-height.png&quot; alt=&quot;Dependency height&quot; /&gt;
  &lt;figcaption&gt;2. Profondeur de d√©pendances&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;hr /&gt;

&lt;p&gt;Josef Raska propose le sch√©ma suivant avec un d√©coupage API/impl√©mentation afin de r√©duire au maximum cette profondeur, et ainsi compiler plus rapidement.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;/images/posts/2022-11-22-droidcon-london/dep-height-fix.png&quot; alt=&quot;Dependency height fix&quot; /&gt;
  &lt;figcaption&gt;3. Profondeur de d√©pendances r√©duite&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;hr /&gt;

&lt;p&gt;Android Studio et son analyse de d√©pendances peut √™tre tr√®s utile pour v√©rifier et mesurer cela.
Josef Raska a d‚Äôailleurs cr√©√© un plugin Gradle afin de sp√©cifier ces r√®gles √† l‚Äôechelle d‚Äôun projet et de s‚Äôassurer qu‚Äôelles soient respect√©es : &lt;a href=&quot;https://github.com/jraska/modules-graph-assert&quot;&gt;modules-graph-assert&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;trucs-et-astuces&quot;&gt;Trucs et astuces&lt;/h3&gt;

&lt;p&gt;Apr√®s ces conseils tr√®s avis√©s mais structurellement chronophages √† mettre en place (surtout sur de gros projets d√©j√† cr√©√©s), d‚Äôautres conf√©renciers se sont plut√¥t tourn√©s vers les ‚Äúquick-win‚Äù. Des changements peu co√ªteux, aux gains plus modestes mais qui s‚Äôadditionnent, il en existe quelques-uns.&lt;/p&gt;

&lt;p&gt;Ainsi, si Gradle nous permet d‚Äôactiver des fonctionnalit√©s de caching (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.gradle.unsafe.configuration-cache=true&lt;/code&gt; pour gagner du temps lors de la phase de configuration par exemple), il est aussi possible de d√©sactiver des fonctionnalit√©s du plugin Android si elles ne nous sont pas utiles.&lt;/p&gt;

&lt;p&gt;Voici une petite liste des propri√©t√©s qui sont activ√©es par d√©faut, m√™me lorsqu‚Äôelles ne sont pas utilis√©es dans les modules :&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;android {
  buildFeatures {
    buildConfig false
    aidl false
    renderScript false
    resValues false
    shaders false
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si vous n‚Äôutilisez pas les valeurs li√©es √† la configuration de votre compilation, ne g√©n√©rez pas de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BuildConfig&lt;/code&gt;.
Si vous n‚Äôavez pas de resources dans votre module, d√©sactivez la g√©n√©ration de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resValue&lt;/code&gt; !&lt;/p&gt;

&lt;p&gt;Retrouvez ici la liste de ces fonctionnalit√©s, leur utilit√© et leurs valeurs par d√©faut : &lt;a href=&quot;https://developer.android.com/reference/tools/gradle-api/4.1/com/android/build/api/dsl/BuildFeatures&quot;&gt;BuildFeatures&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;design-the-world---damien-cuny&quot;&gt;Design the world - Damien Cuny&lt;/h2&gt;

&lt;p&gt;Il y a un peu plus d‚Äôun an sortait la version 1.0 de &lt;a href=&quot;https://developer.android.com/jetpack/compose&quot;&gt;Jetpack Compose&lt;/a&gt;, le nouveau toolkit d√©claratif pour la cr√©ation d‚Äôinterfaces Android. D‚Äôautre part, le design system &lt;a href=&quot;https://m3.material.io/&quot;&gt;Material Design 3&lt;/a&gt; vient de sortir en version stable et son impl√©mentation &lt;a href=&quot;https://developer.android.com/jetpack/androidx/releases/compose-material&quot;&gt;Compose Material&lt;/a&gt; sont √©galement disponibles.&lt;br /&gt;
Avec tout cela, le design a, cette ann√©e encore, tenu une place de choix dans l‚Äôagenda de cette droidcon 2022 √† Londres.&lt;br /&gt;
Mais comment utiliser tout cela correctement ? Comment s‚Äôen servir pour impl√©menter un design system personnalis√© ? Jusqu‚Äôo√π peut-on aller ?
Autant de questions auxquelles ont tent√© de r√©pondre les nombreuses pr√©sentations sur le sujet.&lt;/p&gt;

&lt;h3 id=&quot;to-compose&quot;&gt;To Compose&lt;/h3&gt;

&lt;p&gt;Compose facilite beaucoup de choses dans l‚Äôimpl√©mentation et le maintien d‚Äôinterfaces sur Android. Cependant, cela n√©cessite de r√©apprendre √† faire certaines choses que l‚Äôon ma√Ætrise d√©j√† avec le syst√®me de &lt;a href=&quot;https://developer.android.com/reference/android/view/View&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;View&lt;/code&gt;&lt;/a&gt;.&lt;br /&gt;
Dessiner dans un canvas en est une, et &lt;a href=&quot;https://twitter.com/hi_man_shoe&quot;&gt;Himanshu Singh&lt;/a&gt; dans sa pr√©sentation &lt;em&gt;‚ÄúComposing in your canvas‚Äù&lt;/em&gt;, nous montre les pi√®ges √† √©viter pour r√©aliser cela avec Compose.&lt;/p&gt;

&lt;p&gt;La recomposition peut √©galement √™tre source de probl√®mes et de latences si Compose est mal utilis√©. Dans sa pr√©sentation &lt;em&gt;‚ÄúUnderstanding recomposition performance pitfalls‚Äù&lt;/em&gt;, &lt;a href=&quot;https://twitter.com/jossiwolf&quot;&gt;Jossi Wolf&lt;/a&gt; et &lt;a href=&quot;https://twitter.com/shikasd_&quot;&gt;Andrei Shikov&lt;/a&gt; nous donnent, √† partir d‚Äôun exemple concret, les meilleures astuces pour l‚Äôutiliser √† bon escient.&lt;/p&gt;

&lt;h3 id=&quot;design-system&quot;&gt;Design System&lt;/h3&gt;

&lt;p&gt;En faisant le parall√®le avec la saga √©pique de JRR Tolkien, &lt;a href=&quot;https://medium.com/@danielbbeleza&quot;&gt;Daniel Beleza&lt;/a&gt;, dans sa pr√©sentation &lt;em&gt;‚ÄúOne design system to rule them all‚Äù&lt;/em&gt;, nous explique comment il a r√©ussi, tout en se passant de &lt;a href=&quot;https://material.io&quot;&gt;Material design&lt;/a&gt;, √† unifier et automatiser son propre design system.&lt;br /&gt;
Cela demande, √©videmment, une collaboration totale de la part de l‚Äô√©quipe de design, mais une fois cette int√©gration faite, les b√©n√©fices et l‚Äôautonomie se ressentent de part et d‚Äôautre.&lt;br /&gt;
Des outils tel que &lt;a href=&quot;https://www.figma.com/&quot;&gt;Figma&lt;/a&gt;, &lt;a href=&quot;https://square.github.io/kotlinpoet/&quot;&gt;Kotlin Poet&lt;/a&gt; ou des plugins Android Studio custom lui ont permis d‚Äôautomatiser ensuite ce processus.&lt;/p&gt;

&lt;p&gt;Material Design est un design system. Il a l‚Äôavantage d‚Äô√™tre bien document√©, uniforme et r√©guli√®rement enrichi. De plus, il est d√©j√† impl√©ment√© dans l‚Äôancien syst√®me de View Android et plus r√©cemment dans Jetpack Compose avec &lt;a href=&quot;https://developer.android.com/jetpack/androidx/releases/compose-material&quot;&gt;Compose Material&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Une des diff√©rences majeures entre Compose et le syst√®me de View sur Android est son d√©coupage. Dans Compose, Material n‚Äôest impl√©ment√© et n‚Äôappara√Æt que dans la partie la plus hautes alors que dans le syst√®me de View, son impl√©mentation est r√©partie dans toutes les couches de la librairie.&lt;br /&gt;
Il est donc assez complexe de se passer de Material avec le syst√®me de View mais cela est compl√©tement envisageable, voire recommand√©, dans certains cas avec Compose.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-11-22-droidcon-london/views-vs-compose.png&quot; alt=&quot;Views VS Compose&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pour illustrer cela &lt;a href=&quot;https://twitter.com/seebrock3r&quot;&gt;Sebastiano Poggi&lt;/a&gt; (la moiti√© de &lt;a href=&quot;https://www.youtube.com/c/CodewiththeItalians&quot;&gt;Coding with the italians&lt;/a&gt;) est venu nous pr√©senter, dans &lt;em&gt;‚ÄúCompose beyond Material‚Äù&lt;/em&gt;, les questions √† se poser avant de se lancer dans son design system et comment le package &lt;a href=&quot;https://developer.android.com/jetpack/androidx/releases/compose-foundation&quot;&gt;Foundation&lt;/a&gt; de Compose peut nous aider.&lt;/p&gt;

&lt;p&gt;Pour terminer il nous donne de nombreux conseils concrets sur l‚Äôimpl√©mentation de composants sans Material. Le principal, rejoint la pr√©sentation d‚Äôintroduction de cette droidcon, &lt;em&gt;‚ÄúThe Silver Bullet Syndrome Director‚Äôs Cut - Complexity Strikes Back!‚Äù&lt;/em&gt;, un bon design system est un design system qui correspond √† nos besoins et qui y r√©pond le plus simplement possible.&lt;/p&gt;

&lt;h3 id=&quot;vers-linfini-et-au-del√†&quot;&gt;Vers l‚Äôinfini et au-del√†&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/chrisbanes&quot;&gt;Chris Bane&lt;/a&gt; et &lt;a href=&quot;https://twitter.com/mrmans0n&quot;&gt;Nacho Lopez&lt;/a&gt; dans leur pr√©sentation &lt;em&gt;‚ÄúBranching out Jetpack Compose‚Äù&lt;/em&gt;, nous ont racont√© comment l‚Äôaventure du passage √† Compose s‚Äôest d√©roul√©e chez Twitter, une des premi√®res apps √† l‚Äôadopter.&lt;br /&gt;
Avec une code base aussi cons√©quente (plus de &lt;strong&gt;1000 modules&lt;/strong&gt;, dont 300 pour le design, r√©partis sur plus de 30 √©quipes), ils ont d√ª progressivement convaincre les √©quipes, les former et les accompagner.&lt;br /&gt;
La question de continuer √† utiliser Material Design s‚Äôest √©galement pos√©e chez eux. Ils l‚Äôont dans un premier temps conserv√© pour faciliter le passage sur Compose, pour finalement le retirer compl√®tement en se basant, eux aussi, sur le package Foundation.&lt;br /&gt;
Leur pr√©sentation r√©sume bien l‚Äôensemble des √©tapes et des questions par lesquelles ils sont pass√©s pour accomplir cette transition.&lt;/p&gt;

&lt;p&gt;Afin de remettre les choses en perspective, &lt;a href=&quot;https://twitter.com/askashdavies&quot;&gt;Ash Davies&lt;/a&gt; nous rappelle que Compose est un simple pattern de d√©veloppement multiplateforme. De ce fait, il peux √™tre appliqu√© √† autre chose qu‚Äô√† de l‚ÄôUI comme le propose Jetpack Compose. Il nous explique dans &lt;em&gt;‚ÄúDemystifying Molecule: Running Your Own Compositions For Fun And Profit‚Äù&lt;/em&gt;, comment l‚Äôappliquer √† la couche domaine d‚Äôun projet pour le ‚ÄúFun‚Äù.&lt;/p&gt;

&lt;h2 id=&quot;la-gestion-des-erreurs---david-yim&quot;&gt;&lt;strong&gt;La gestion des erreurs&lt;/strong&gt; - David Yim&lt;/h2&gt;

&lt;p&gt;La gestion des erreurs a √©t√© le sujet de plusieurs pr√©sentations √† la droidcon. Ces pr√©sentations avaient pour objectif de servir de piq√ªre de rappel sur l‚Äôimportance de bien prendre en compte ce probl√®me concernant tous les d√©veloppeurs. Aujourd‚Äôhui, nous avons tous les outils pour g√©rer facilement nos erreurs. Cependant, par paresse et comme nous pr√©f√©rons penser de mani√®re positive, nous ne pensons souvent qu‚Äôaux cas de succ√®s et les cas d‚Äôerreurs sont souvent brouillons voire ne sont m√™me pas sp√©cifi√©s.&lt;/p&gt;

&lt;p&gt;Les speakers m‚Äôont marqu√© avec un exemple de mauvaise gestion d‚Äôerreur qui a co√ªt√© plusieurs centaines de milliers de dollars. L‚Äôexemple parlait d‚Äôune faille sur le site japonais de 7-Eleven, une cha√Æne de sup√©rettes, dont elle a √©t√© victime. Dans la base de donn√©es de ce projet, les d√©veloppeurs ont ajout√© un champ ‚Äúdate de naissance‚Äù comme nullable. Plus tard, ce champ est devenu non-nullable. Par paresse, le d√©veloppeur qui a rendu ce champ non-nullable a mis par d√©faut un 1er janvier 2019 sur cette date lorsqu‚Äôelle n‚Äô√©tait pas renseign√©e, simplement pour satisfaire son compilateur. Le probl√®me est que ce champ fut plus tard utilis√© dans la fonctionnalit√© de mot de passe oubli√© du site. En utilisant la date par d√©faut du 1er janvier 2019, un hacker a pu r√©cup√©rer des comptes utilisateurs et voler des informations bancaires. Cet exemple m‚Äôa marqu√© par l‚Äôhabitude que nous avons en tant que d√©veloppeur de nous soucier que de satisfaire notre compilateur plut√¥t que de vraiment discuter de solutions r√©fl√©chies √† nos probl√®mes techniques.&lt;/p&gt;

&lt;p&gt;Plusieurs m√©thodes de gestion des erreurs existent et les speakers en ont pr√©sent√©s quelques-unes.&lt;/p&gt;

&lt;h4 id=&quot;v√©rification-des-entr√©es&quot;&gt;V√©rification des entr√©es&lt;/h4&gt;

&lt;p&gt;L‚Äôune des m√©thode pour √™tre certain de ne pas avoir de probl√®me est de v√©rifier les donn√©es que l‚Äôon re√ßoit. Prenons un exemple simple :&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;data class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Rien n‚Äôemp√™che d‚Äôinstancier cette classe de la mani√®re suivante :&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cela peut cr√©er des probl√®mes par le futur, alors qu‚Äôil y a un moyen d‚Äô√©viter cela&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;EMAIL_FORMAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Email format is not correct&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;data class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette m√©thode peut para√Ætre un peu exag√©r√©e dans cet exemple. Mais dans un contexte o√π la classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User&lt;/code&gt; serait utilis√©e par un grand nombre d‚Äô√©quipes et que les r√®gles m√©tier de l‚Äô&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Email&lt;/code&gt; serait complexe, cette m√©thode prendrait tout son sens pour √©viter d‚Äôavoir de mauvaises surprises !&lt;/p&gt;

&lt;h4 id=&quot;le-type-either&quot;&gt;Le type Either&lt;/h4&gt;

&lt;p&gt;Le type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Either&lt;/code&gt; est un moyen de diff√©rencier les cas de succ√®s des cas d‚Äôerreurs. Il est disponible dans la &lt;a href=&quot;https://arrow-kt.io/&quot;&gt;librairie Arrow&lt;/a&gt; ou facilement reproduisible :&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;sealed&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;()&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Nothing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;L‚Äôutilisation de ce type est qu‚Äôil est soit un type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;, soit un type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt;. On peut ainsi d√©finir par exemple que le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; est un cas de succ√®s et que le type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B&lt;/code&gt; est un cas d‚Äôerreur.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;data class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The user is called ${(either as Either.Left&amp;lt;User&amp;gt;).value.name}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Gr√¢ce √† ce type, on peut par exemple savoir si un appel √† une API a r√©ussi ou non, ce qui nous permet de g√©rer plus facilement nos cas d‚Äôerreurs.&lt;/p&gt;

&lt;h4 id=&quot;kotlin-result&quot;&gt;Kotlin Result&lt;/h4&gt;

&lt;p&gt;La classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Result&lt;/code&gt; est similaire au type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Either&lt;/code&gt; et a pour avantage d‚Äô√™tre directement inclue dans Kotlin et que l‚Äôon n‚Äôa pas √† se synchroniser pour savoir si le c√¥t√© gauche est le cas de succ√®s ou d‚Äôerreur.&lt;/p&gt;

&lt;div class=&quot;language-kotlin highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;data class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isSuccess&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The user is called ${result.getOrNull()?.name}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isFailure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exceptionOrNull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;OU&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;onSuccess&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The user is called ${user.name}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;onFailure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Plusieurs m√©thodes existent pour prendre en compte nos cas d‚Äôerreurs. Laquelle est la meilleure ? Eh bien vous vous y attendez s√ªrement, mais √ßa d√©pend ! On choisira une m√©thode ou une autre selon ce qui nous arrange par rapport √† la situation, nos choix d‚Äôoutils techniques ou nos effectifs. L‚Äôimportant √©tant de prendre en compte ces cas d‚Äôerreurs et de ne pas laisser leur r√©solution au hasard. Les cas d‚Äôerreurs ne sont en fait que d‚Äôautres usecases de l‚Äôutilisateur et souvent ne sont pas des edgecase. Ils m√©ritent donc d‚Äô√™tre tout autant r√©fl√©chis et sp√©cifi√©s que les cas de succ√®s !&lt;/p&gt;

&lt;h2 id=&quot;√†-la-prochaine-&quot;&gt;√Ä la prochaine !&lt;/h2&gt;

&lt;p&gt;Il est toujours int√©ressant de mesurer l‚Äôengouement pour tel ou tel sujet dans la communaut√© Android en analysant les pr√©sentations lors des diff√©rentes conf√©rences technologiques.&lt;/p&gt;

&lt;p&gt;Sans aucun doute, cette droidcon √©tait sous le signe de Jetpack Compose, qui b√©n√©ficie d‚Äôun suivi et d‚Äôun engagement fort de Google et de toute la communaut√©.&lt;br /&gt;
Tout l‚Äôenjeu ici est de rester au contact des innovations et de l‚Äô√©volution de la plateforme Android, et Jetpack Compose offre un d√©fi que nous avons commenc√© √† relever chez Bedrock.&lt;/p&gt;

&lt;p&gt;Nous attendons avec impatience de voir o√π va Android, et avons √† coeur de participer √† cette aventure qui nous lie tous !&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2022-11-22-droidcon-london/hall.jpg&quot; alt=&quot;Hall droidcon London 2022&quot; /&gt;&lt;/p&gt;</content><author><name>[&quot;rpanoyan&quot;, &quot;d_yim&quot;, &quot;d_cuny&quot;]</name></author><category term="android" /><category term="droidcon" /><category term="conference" /><summary type="html">La communaut√© Android a apport√© le soleil sur Londres les 27 et 28 octobre 2022. La droidcon London a r√©uni plus de 1400 d√©veloppeurs autour de l‚Äô√©cosyst√®me Android, de ses outils et enjeux actuels. Jetpack Compose, √©videmment, mais aussi Gradle, modularisation, optimisation et autres sujets plus divers ont √©t√© abord√©s lors de ce rendez-vous incontournable pour la communaut√©.</summary></entry><entry><title type="html">How many DynamoDB RCU and WCU should we reserve to achieve maximum cost reductions, when our workloads are changing all the time?</title><link href="https://tech.bedrockstreaming.com/2022/11/22/dynamodb-reservations.html" rel="alternate" type="text/html" title="How many DynamoDB RCU and WCU should we reserve to achieve maximum cost reductions, when our workloads are changing all the time?" /><published>2022-11-22T00:00:00+00:00</published><updated>2022-11-22T00:00:00+00:00</updated><id>https://tech.bedrockstreaming.com/2022/11/22/dynamodb-reservations</id><content type="html" xml:base="https://tech.bedrockstreaming.com/2022/11/22/dynamodb-reservations.html">&lt;p&gt;Many of the microservices in our VOD and Replay platform use DynamoDB as their database.&lt;br /&gt;
Performance is very good if the data is architected for it, scalability is reasonably fast, and the serverless aspect offloads a lot of the administration and hosting work. Whether it‚Äôs performance, resilience or time-to-market, DynamoDB helps us achieve our business goals.&lt;/p&gt;

&lt;p&gt;That said, when we spend several hundred thousand dollars on DynamoDB every year, any optimization is good for us!&lt;/p&gt;

&lt;p&gt;With DynamoDB, committing to a certain capacity for a year can help reduce costs ‚Äì up to 50% savings on that capacity. But how do we know how much to reserve when traffic on our platform varies throughout the day?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#dynamodb-a-not-always-obvious-cost-model&quot;&gt;DynamoDB: a not always obvious cost model!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-many-wcus-and-rcus-do-we-consume&quot;&gt;How many WCUs and RCUs do we consume?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#in-theory-how-much-should-we-reserve-to-achieve-maximum-savings&quot;&gt;In theory: how much should we reserve, to achieve maximum savings?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#in-practice-lets-calculate-how-much-to-reserve&quot;&gt;In practice: let‚Äôs calculate how much to reserve!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#finally-lets-create-those-reservations&quot;&gt;Finally, let‚Äôs create those reservations!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#after-reserving-viewing-the-costs&quot;&gt;After reserving, viewing the costs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dynamodb-a-not-always-obvious-cost-model&quot;&gt;DynamoDB: a not always obvious cost model!&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;#in-practice-lets-calculate-how-much-to-reserve&quot;&gt;To skip all the theory about how DynamoDB is priced and WCUs, RCU, on-demand and provisionned billing modes, click here‚Ä¶&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DynamoDB is serverless&lt;sup id=&quot;fnref:serverless-but-still-some-work&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:serverless-but-still-some-work&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But, as with many AWS services, you have to think for a while before you really understand DynamoDB costs‚Ä¶&lt;/p&gt;

&lt;h3 id=&quot;out-of-scope-costs&quot;&gt;Out of scope costs&lt;/h3&gt;

&lt;p&gt;We pay for the volume of data stored, the volume of data backed up. These costs are outside the scope of this article and I won‚Äôt talk about them again today. They are not zero, however, and can even be a significant part of your bill ‚Äì for example, if you store large data for a long time&lt;sup id=&quot;fnref:dynamodb-standard-ia&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:dynamodb-standard-ia&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; in DynamoDB. Something you probably shouldn‚Äôt do!&lt;/p&gt;

&lt;h3 id=&quot;wcus-and-rcus&quot;&gt;WCUs and RCUs&lt;/h3&gt;

&lt;p&gt;Each DynamoDB table can be configured in either &lt;em&gt;on-demand&lt;/em&gt; or &lt;em&gt;provisioned&lt;/em&gt; billing mode.&lt;/p&gt;

&lt;p&gt;In the second case, we pay for RCUs &lt;em&gt;(Read Capacity Units)&lt;/em&gt; and WCUs &lt;em&gt;(Write Capacity Units)&lt;/em&gt;, depending on the capacity we provision for each table.&lt;br /&gt;
Reservations only matter for these RCUs and WCUs, in purple in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/01-ddb-cost-by-api-operation.png&quot; alt=&quot;Cost by API Operation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Over the past year, our WCU and RCU costs in provisioned mode represent about half of our DynamoDB costs.&lt;br /&gt;
Storage and backups have costs that we consider negligible today.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And, from a financial standpoint, we work with far too many pay-per-request tables&lt;sup id=&quot;fnref:why-so-much-pay-per-request&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:why-so-much-pay-per-request&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; for my taste.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/dynamodb/pricing/&quot;&gt;The documentation&lt;/a&gt; will tell you more, but in very broad terms:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;One WCU is consumed when writing one line of data. Or for each 1 KB block written.&lt;/li&gt;
  &lt;li&gt;One RCU is consumed to read one line of data. Or for each 4 KB block read.&lt;/li&gt;
  &lt;li&gt;In eventually-consistent read mode, only 1/2 RCU is consumed to read one line of data. Or for each 4 KB block.&lt;/li&gt;
  &lt;li&gt;Transactional mode costs twice as much.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can imagine, the first optimization is to store only what is necessary and to request DynamoDB in the way that best meets the needs of the application, including consistency and costs. Developing a data schema that efficiently meets the needs of the application is crucial. I highly recommend you read &lt;a href=&quot;https://www.dynamodbbook.com/&quot;&gt;Alex DeBrie‚Äôs very good ‚ÄúThe DynamoDB Book‚Äù&lt;/a&gt;! Financial optimization based on reservations should ‚Äì and can ‚Äì only come afterwards, when usage patterns have been dealt with.&lt;/p&gt;

&lt;h3 id=&quot;the-on-demand--pay-per-request-mode&quot;&gt;The on-demand / pay-per-request mode&lt;/h3&gt;

&lt;p&gt;In &lt;em&gt;on-demand&lt;/em&gt; mode, we &lt;em&gt;theoretically&lt;/em&gt; don‚Äôt have to worry about scalability, DynamoDB handles it for us&lt;sup id=&quot;fnref:dynamodb-on-demand-scalability&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:dynamodb-on-demand-scalability&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;In this mode, we pay for each RCU and WCU we consume. If we don‚Äôt use DynamoDB, we don‚Äôt pay. If we use DynamoDB, we pay.&lt;br /&gt;
The counterpart is that RCUs and WCUs are more expensive in this mode than in the one presented below.&lt;/p&gt;

&lt;p&gt;This mode is therefore very practical, in my opinion, in two cases:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In an environment where we only perform a few queries from time to time (dev, staging).&lt;/li&gt;
  &lt;li&gt;For tables that are usually not used much, but receive large and sudden peaks of requests at certain times.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This mode is not adapted, especially because costs are too high:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For tables where consumption is stable or varies slowly. Typically, tables for which usage follows our daily traffic wave, which is gentle enough on most applications for a reactive auto-scaling mechanism to meet our needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;provisioned-mode&quot;&gt;Provisioned mode&lt;/h3&gt;

&lt;p&gt;In &lt;em&gt;provisioned&lt;/em&gt; mode, we configure how many RCUs and WCUs we want and we pay for that number of RCUs and WCUs ‚Äì no matter if we consume them or not.&lt;br /&gt;
This billing mode is therefore less flexible than &lt;em&gt;on-demand&lt;/em&gt;. On the other hand, RCUs and WCUs are less expensive.&lt;/p&gt;

&lt;p&gt;In &lt;em&gt;provisioned&lt;/em&gt; mode, we can set up an auto-scaler on the RCUs and WCUs of the tables that need it. It will dynamically reconfigure the provisioned RCUs and WCUs for those tables, to approximate the actual usage. With an auto-scaler, we can pay as close as possible to our actual consumption, at the provisioned price, which is lower than the on-demand one.&lt;br /&gt;
However, scale-out is not instantaneous: it takes several minutes to detect it needs to act, and then up to several minutes &lt;em&gt;(especially on a large table)&lt;/em&gt; to do so. Also, scale-in can only be triggered around once per hour. For more detailed information, read &lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html&quot;&gt;the documentation&lt;/a&gt; and &lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ServiceQuotas.html&quot;&gt;the quota page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This mode is especially recommended, in my opinion and considering our workloads:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;As often as possible, since each RCU and WCU costs much less than in on-demand mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This mode is not suitable:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On tables where consumption varies very abruptly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;in-provisioned-mode-reservations&quot;&gt;In provisioned mode, reservations&lt;/h3&gt;

&lt;p&gt;By agreeing to pay for a certain amount of RCU and WCU for one year &lt;em&gt;(or even three years in some regions)&lt;/em&gt;, these RCU and WCU become even cheaper: up to ~50%&lt;sup id=&quot;fnref:50-percent-savings&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:50-percent-savings&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; cheaper than in default-provisioned mode.&lt;br /&gt;
Reserving capacity is a great way to considerably reduce the cost of read/write operations on DynamoDB!&lt;/p&gt;

&lt;p&gt;Reservations lock us for one year. We will pay for the reserved RCUs and WCUs, whether we use them or not.&lt;br /&gt;
It is therefore important to calculate correctly the reservations to be made.&lt;/p&gt;

&lt;p&gt;Also, we pay a part of the total yearly amount at the beginning of the commitment &lt;em&gt;(= ‚Äúupfront‚Äù)&lt;/em&gt;, which means we must be able to invest a certain amount in advance.&lt;br /&gt;
The other part is spread over all the months of the commitment period.&lt;/p&gt;

&lt;p&gt;As a consequence, the &lt;em&gt;big question&lt;/em&gt;, to which the rest of this document tries to answer, is: &lt;em&gt;‚Äúhow many RCU and WCU should we reserve to keep our costs as low as possible?‚Äù&lt;/em&gt;&lt;br /&gt;
When our consumption varies throughout the day, this calculation is pretty fun¬†;-)&lt;/p&gt;

&lt;p&gt;Reservations are global to an AWS account, or even to all accounts on a consolidated bill&lt;sup id=&quot;fnref:consolidated-billing&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:consolidated-billing&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;‚Üí Reserved pricing is documented on the &lt;a href=&quot;https://aws.amazon.com/dynamodb/pricing/provisioned/&quot;&gt;page of ‚Äúprovisioned‚Äù pricing&lt;/a&gt;.&lt;br /&gt;
‚Üí You can also read &lt;a href=&quot;https://docs.aws.amazon.com/whitepapers/latest/cost-optimization-reservation-models/amazon-dynamodb-reservations.html&quot;&gt;this whitepaper&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;how-many-wcus-and-rcus-do-we-consume&quot;&gt;How many WCUs and RCUs do we consume?&lt;/h2&gt;

&lt;p&gt;For the rest of our reasoning and this article, we only count the consumption in &lt;em&gt;provisioned&lt;/em&gt; mode (and exclude &lt;em&gt;on-demand&lt;/em&gt;), since that‚Äôs where we can play with reservations.&lt;br /&gt;
Also, we count provisioned WCU and RCU and not what is actually consumed ‚Äì so beware of any potential &lt;em&gt;waste&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;On the DynamoDB Web Console home screen, we can see, for an account and a region, how many WCUs and RCUs are provisioned at the current time:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/02-ddb-capacity-used-right-now-in-one-account-and-region.png&quot; alt=&quot;DynamoDB Capacity used, right now, in one account and region&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But these numbers only give a view at a given instant, in a single AWS account and in a single region.&lt;br /&gt;
We deploy our platform across dozens of accounts and multiple regions, with traffic that changes throughout the day, so this is not enough.&lt;/p&gt;

&lt;h3 id=&quot;table-wcusrcus&quot;&gt;Table WCUs/RCUs&lt;/h3&gt;

&lt;p&gt;For a global view of all tables in an account in a region, we can query Cloudwatch Metrics, analyzing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ProvisionedWriteCapacityUnits&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ProvisionedReadCapacityUnits&lt;/code&gt; metrics:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/03-ddb-write-capacity-per-table-cloudwatch-metrics-CENSORED.png&quot; alt=&quot;Write capacity per table, Cloudwatch metrics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Stacked Area view shows, at any given time, the total WCUs (or RCUs) provisioned for all of our tables, in an account and a region.&lt;/p&gt;

&lt;h3 id=&quot;wcurcu-of-gsi&quot;&gt;WCU/RCU of GSI&lt;/h3&gt;

&lt;p&gt;We also need to count the WCUs/RCUs of the Global Secondary Indexes ‚Äì and these are different metrics! Or, at least, the metrics are shown in a different category in the Cloudwatch web console.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/04-ddb-write-capacity-per-gsi-cloudwatch-metrics-CENSORED.png&quot; alt=&quot;Write capacity per GSI, Cloudwatch metrics&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;so-in-total&quot;&gt;So, in total‚Ä¶&lt;/h3&gt;

&lt;p&gt;To get the total, you have to consider this metric for the tables and for the Global Secondary Indexes! In the Cloudwatch console, you have to search in two categories.&lt;br /&gt;
Graphing it all :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/05-ddb-write-capacity-all-cloudwatch-metrics-CENSORED.png&quot; alt=&quot;Total write capacity, Cloudwatch metrics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Of course, this is to be looked at for WCUs, but also for RCUs, following exactly the same principle.&lt;br /&gt;
And, again, we‚Äôre working in multiple accounts and regions.&lt;/p&gt;

&lt;h2 id=&quot;in-theory-how-much-should-we-reserve-to-achieve-maximum-savings&quot;&gt;In theory: how much should we reserve, to achieve maximum savings?&lt;/h2&gt;

&lt;p&gt;Once we know how much capacity we‚Äôre actually using, we can move on to reservations.&lt;/p&gt;

&lt;p&gt;But the calculation would be far too easy if our usage was flat!&lt;br /&gt;
In reality, thanks to auto-scaling, our provisioned capacity follows our usual traffic pattern: a wave.&lt;/p&gt;

&lt;p&gt;And, two things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;if we reserve more than we provision, we‚Äôll waste money.&lt;/li&gt;
  &lt;li&gt;if we reserve less than we provision, we won‚Äôt save as much as we could.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reserve-at-the-bottom-of-the-wave&quot;&gt;Reserve at the bottom of the wave&lt;/h3&gt;

&lt;p&gt;A first idea is to reserve the lowest value we provision throughout the day: what we provision at the bottom of our traffic wave, at night.&lt;/p&gt;

&lt;p&gt;In this case, we are not wasting money, as we always provision 100% or more of our reservation.&lt;br /&gt;
But we are probably minimizing our savings, since we are provisioning more than the reservation, all day long.&lt;/p&gt;

&lt;h3 id=&quot;reserve-at-the-top-of-the-wave&quot;&gt;Reserve at the top of the wave&lt;/h3&gt;

&lt;p&gt;A second idea, kind of the opposite, is to reserve the highest value we provision throughout the day.&lt;br /&gt;
This way, we will never pay the full rate for any WCU/RCU.&lt;/p&gt;

&lt;p&gt;But, in this case, we will be wasting a lot of money, since all day long we will be provisioning less than our reservation.&lt;br /&gt;
This is a &lt;em&gt;bad idea&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;reserve-in-the-middle-thanks-to-careful-calculations&quot;&gt;Reserve ‚Äúin the middle‚Äù, thanks to careful calculations&lt;/h3&gt;

&lt;p&gt;Now, the real solution: calculate the &lt;em&gt;right value&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Less than &lt;em&gt;the highest value&lt;/em&gt;, to minimize waste.&lt;/li&gt;
  &lt;li&gt;And more than &lt;em&gt;the lowest value&lt;/em&gt;, to optimize savings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;in-practice-lets-calculate-how-much-to-reserve&quot;&gt;In practice: let‚Äôs calculate how much to reserve!&lt;/h2&gt;

&lt;p&gt;Manipulating metrics in Cloudwatch, for visualization, may be acceptable, although we rarely do it since we use other stacks for our metrics. And aggregating metrics from multiple accounts should be feasible &lt;em&gt;(we haven‚Äôt tried it)&lt;/em&gt;.&lt;br /&gt;
But for calculations, it is not enough.&lt;/p&gt;

&lt;h3 id=&quot;exporting-metrics&quot;&gt;Exporting metrics&lt;/h3&gt;

&lt;p&gt;As a first step, we exported the metrics visualized above, to be able to manipulate them in another tool ‚Äì in a spreadsheet, for example.&lt;br /&gt;
To export these metrics from Cloudwatch, we can query its API. We need to do this for all accounts and for each table, which is complicated to do manually.&lt;/p&gt;

&lt;p&gt;To simplify the task, we started working with a script that exports this data to a CSV file.&lt;br /&gt;
Specifically, this script exports one data point per hour: the number of WCUs or RCUs actually provisioned during that hour.&lt;/p&gt;

&lt;p&gt;Running this script for a &lt;em&gt;representative week&lt;/em&gt;, we have enough data to calculate the ideal reservations.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;üóìÔ∏è Representative week?&lt;/strong&gt;&lt;br /&gt;
Of course, we have to be careful to choose the week we focus on.&lt;br /&gt;
If we work with data from a week with a huge unexplained peak of traffic, the results of our calculation will fit that week, but not so much to the rest of the year!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;a-google-spreadsheet-calculation&quot;&gt;A Google Spreadsheet calculation&lt;/h3&gt;

&lt;p&gt;Importing this data into a Google Spreadsheet, we get two columns: a date+time and a number of WCUs.&lt;br /&gt;
And this is for each one-hour range during an entire week:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/spreadsheet-01-date-and-conso-english.png&quot; alt=&quot;Date and usage&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;‚ÑπÔ∏è Only twelve hours&lt;/strong&gt;&lt;br /&gt;
Here, I only reproduce twelve rows corresponding to twelve hours, but keep in mind that there are actually 168 rows in my spreadsheet: one row per hour, 24 hours per day, for 7 days.&lt;br /&gt;
Also, the values used for this article are all &lt;em&gt;simulated&lt;/em&gt;, to avoid sharing sensitive information, but they scrupulously respect the shape of our traffic and usage wave.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next step is to integrate the cost of these WCUs.&lt;br /&gt;
Easy anough, we multiply the number of WCUs by the cost of a WCU in Paris, i.e. $0.000772.&lt;br /&gt;
And the sum of the cost of each line gives us the total cost, without reservation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/spreadsheet-02-cost-without-reservation-english.png&quot; alt=&quot;Costs, without any reservation&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-calculations-on-an-assumption&quot;&gt;The calculations, on an assumption&lt;/h3&gt;

&lt;p&gt;Now, let‚Äôs assume, for the time being, that we reserve 25,000 WCUs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The upfront, each hour, is $5.07991.&lt;/li&gt;
  &lt;li&gt;And, each hour, we also have to pay $3.82500 for this capacity, since the upfront is only partial.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;During some hours, when we consume less than 25,000 WCU, we will not pay anything extra.&lt;/li&gt;
  &lt;li&gt;During some other hours, when we consume more than 25,000 WCU, we will have to pay a supplement, at the full provisioned rate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Adding these data, we obtain a different hourly cost, often lower than the one determined above.&lt;br /&gt;
And, therefore, we get a lower total cost as well:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/spreadsheet-03-cout-including-reservations-english.png&quot; alt=&quot;Costs, with reservations&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With this hypothesis of a 25,000 WCU reservation, over these twelve hours, we would pay 135 dollars instead of 229 dollars without reservation.&lt;br /&gt;
We would then realize 40.96% savings!&lt;/p&gt;

&lt;h3 id=&quot;the-calculations-until-we-find-the-right-value&quot;&gt;The calculations, until we find the right value&lt;/h3&gt;

&lt;p&gt;Of course, during the hours when we consume less than 25,000 WCU, we are wasting capacity: we are paying for it, without using it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/spreadsheet-04-waste-english.png&quot; alt=&quot;Wasted reservations&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The goal of the game is to find the &lt;em&gt;right number&lt;/em&gt; of WCUs to reserve: we want to reduce the total cost as much as possible, maximizing the percentage of savings.&lt;/p&gt;

&lt;p&gt;To do so, we try different values for the number of WCUs reserved, until we find the one that maximizes the percentage of savings:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/spreadsheet-05-maximize-percentage-savings-table-english.png&quot; alt=&quot;Maximizing savings percentages (table)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs the same thing as a graph:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/spreadsheet-05-maximize-percentage-savings-graphic-english.png&quot; alt=&quot;Maximizing savings percentages (graph)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here, over these twelve hours, the optimal approach would be to reserve 23,000 WCU.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;üí™ Getting real: an entire week&lt;/strong&gt;&lt;br /&gt;
In reality, we perform exactly the same calculation and we follow this very same logic, on 168 lines of data, corresponding to a &lt;em&gt;representative week&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;easier-calculations&quot;&gt;Easier calculations?&lt;/h3&gt;

&lt;p&gt;The first year we tried to reserve capacity, we quickly wrote a script to collect the data from Cloudwatch and export it as CSV.&lt;/p&gt;

&lt;p&gt;We still haven‚Äôt, after three or four years now, written a program that would perform the calculations based on this data to come up with the &lt;em&gt;right value&lt;/em&gt; for the number of WCUs or RCUs to reserve.&lt;br /&gt;
As a matter of facts, copying and pasting data from the CSV export to a spreadsheet only takes a minute, we reuse the same year after year, and its visual aspect is nice!&lt;/p&gt;

&lt;p&gt;Also, we only do these calculations and reservations twice a year, so we don‚Äôt spend too much time working on this, while still refining more often than once each year.&lt;br /&gt;
Each time, the process takes two of us&lt;sup id=&quot;fnref:pair-reserving&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:pair-reserving&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt; about two hours, or one day per year in total‚Ä¶ And the most time-consuming part is talking to our colleagues who are heavy DynamoDB users, and asking them &lt;em&gt;‚Äúare you planning to reduce the consumption of your project over the coming year?‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;finally-lets-create-those-reservations&quot;&gt;Finally, let‚Äôs create those reservations!&lt;/h2&gt;

&lt;p&gt;We calculated how many WCUs and how many RCUs we should reserve to achieve the best possible savings, hoping the week we chose to base our calculations on was actually a &lt;em&gt;representative week&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;a-commitment-be-careful&quot;&gt;A commitment: be careful‚Ä¶&lt;/h3&gt;

&lt;p&gt;A reservation commits us to pay for a year, whether we use this capacity or not.&lt;/p&gt;

&lt;p&gt;So, it‚Äôs always a good idea to take a moment to validate with our colleagues that they are not planning to use less DynamoDB in the near future.&lt;br /&gt;
Of course, the answer is often partly &lt;em&gt;‚Äúit depends‚Äù&lt;/em&gt;, since usage depends on new projects as well as on the traffic on our platforms, but if we can already anticipate the next planned optimizations, it‚Äôs always a good thing.&lt;/p&gt;

&lt;p&gt;In November 2022, we can only open DynamoDB reservations for one year if we work in the AWS Paris region.&lt;br /&gt;
Other regions &lt;em&gt;(us-east-1 for example) allow&lt;/em&gt; reservations for three years, which means more substantial savings. On the other hand, would we be willing to commit for three years and lose a major advantage of &lt;em&gt;The Cloud&lt;/em&gt;, its flexibility?&lt;/p&gt;

&lt;h3 id=&quot;which-account-to-reserve-on&quot;&gt;Which account to reserve on?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/dynamodb/pricing/provisioned/&quot;&gt;The documentation&lt;/a&gt; says (emphasis mine):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you have multiple accounts linked with consolidated billing, &lt;strong&gt;reserved capacity units purchased&lt;/strong&gt; either &lt;strong&gt;at the payer account level&lt;/strong&gt; or linked account level &lt;strong&gt;are shared with all accounts connected to the payer account&lt;/strong&gt;.&lt;br /&gt;
Reserved capacity is applied first to the account that purchased it and then any unused capacity is applied to other linked accounts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We have configured our AWS accounts to have a single payer account.&lt;br /&gt;
We have decided to make all our reservations in this account and they are applied to the child accounts without discrimination.&lt;br /&gt;
This applies to DynamoDB but also to RDS, EC2, Elasticache‚Ä¶&lt;/p&gt;

&lt;h3 id=&quot;reserving&quot;&gt;Reserving!&lt;/h3&gt;

&lt;p&gt;To reserve, we go through the AWS DynamoDB Web console, in our payer account, in the region where these reservations will be used.&lt;/p&gt;

&lt;p&gt;On this screen, you can see how many WCUs and RCUs we have already reserved.&lt;br /&gt;
Since we make several reservations during the year, the reservations already in progress are to be subtracted from the values calculated above!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/ddb-reservations-history-CENSORED.png&quot; alt=&quot;Reservations history&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To create a new reservation, click on &lt;em&gt;‚ÄúPurchase reserved capacity‚Äù&lt;/em&gt; and fill in the form¬†;-)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/creating-a-reservation-23k.png&quot; alt=&quot;Reserving 23,000 WCU: this is not free!&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;after-reserving-viewing-the-costs&quot;&gt;After reserving, viewing the costs&lt;/h2&gt;

&lt;p&gt;Once the reservations are made, in AWS Cost Explorer, the upfront cost is clearly visible.&lt;br /&gt;
It is charged at once, on the day we opened the reservation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/cost-explorer-after-reservation-01-CENSORED.png&quot; alt=&quot;Cost Explorer, after reserving&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To have a daily view of WCU/RCU costs &lt;em&gt;(reserved + provisioned in addition to reservations)&lt;/em&gt;, remember to fill in &lt;em&gt;‚ÄúShow costs as: Amortized costs‚Äù&lt;/em&gt; to smooth the monthly price of reservations over all days of the month:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/aws/dynamodb-reservations/cost-explorer-after-reservation-02-amortized-CENSORED.png&quot; alt=&quot;Amortized view&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Reservations and one payer account&lt;/strong&gt;&lt;br /&gt;
Since reservations, which cover the bulk of our DynamoDB costs, are made on our payer account, the bulk of our DynamoDB costs go back to this account‚Ä¶ And not to the tenant/environment accounts.&lt;br /&gt;
Good luck tracking costs and allocating them to projects and teams üí™&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We work with DynamoDB a lot, for several dozen microservices, and we face several types of infrastructure costs: on-demand reads/writes, provisioned reads/writes, storage, backups.&lt;br /&gt;
In exchange for a loss of flexibility and through reservations that commit us for a year, AWS allows us to reduce the cost of provisioned reads/writes.&lt;/p&gt;

&lt;p&gt;Determining how much to reserve, in the face of a constantly changing load, is not easy.&lt;br /&gt;
We need to have a certain vision on the evolution of usage, over a year, and must accept to lose flexibility.&lt;br /&gt;
And we need to find the &lt;em&gt;right values&lt;/em&gt; to reserve for read and write capacity.&lt;/p&gt;

&lt;p&gt;With three or four years of hindsight, by making reservations twice a year and by following the method detailed in this article, we realize savings of about 30% to 35% on our read and write capacity in provisioned mode.&lt;br /&gt;
On our scale, this saving represents several tens of thousands of dollars per year ‚Äì which is great, considering we only spend a few hours working on this every six months!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:serverless-but-still-some-work&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;DynamoDB is one of the &lt;em&gt;most serverless&lt;/em&gt; services we use and I like it a lot. Still, there are a few &lt;em&gt;admin&lt;/em&gt; tasks left in our hands. Typically, we have to specify the capacity we need and configure an auto-scaler. We also have to enable encryption, backups, to setup permissions ‚Äì and to check all this is done, for all tables, managed by many teams.¬†&lt;a href=&quot;#fnref:serverless-but-still-some-work&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:dynamodb-standard-ia&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;If you do store a lot of data for a long time in DynamoDB, take a look at &lt;a href=&quot;https://aws.amazon.com/dynamodb/standard-ia/&quot;&gt;Standard-IA&lt;/a&gt;, it might help you reduce costs.¬†&lt;a href=&quot;#fnref:dynamodb-standard-ia&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:why-so-much-pay-per-request&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Why do we use pay-per-request so much? Well, in short, because this mode is more flexible than the provisioned one, and several of our projects are willing to pay much more in exchange for this flexibility.¬†&lt;a href=&quot;#fnref:why-so-much-pay-per-request&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:dynamodb-on-demand-scalability&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;DynamoDB in on-demand mode and scalability: in practice, AWS hides what‚Äôs going on, but doesn‚Äôt scale to infinity instantly either.¬†&lt;a href=&quot;#fnref:dynamodb-on-demand-scalability&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:50-percent-savings&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;50% is kind of the maximum possible saving we can achieve if our usage is flat and we reserve exactly what we provision. Flat usage might be what you see on your applications, but it‚Äôs not how our platform works!¬†&lt;a href=&quot;#fnref:50-percent-savings&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:consolidated-billing&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;At Bedrock, we have a dedicated billing account ‚Äì a &lt;em&gt;‚Äúpayer account‚Äù&lt;/em&gt; ‚Äì that aggregates costs from all our other accounts. Reservations are also shared amongst all (whitelisted) accounts that have a shared payer account.¬†&lt;a href=&quot;#fnref:consolidated-billing&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:pair-reserving&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;For these kind of calculations and reservations, we usually work in pair, as this involves large amounts of money. Lowering risk of doing a costly mistake is quite a good idea.¬†&lt;a href=&quot;#fnref:pair-reserving&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Pascal Martin</name></author><category term="aws" /><category term="dynamodb" /><category term="finops" /><summary type="html">Many of the microservices in our VOD and Replay platform use DynamoDB as their database. Performance is very good if the data is architected for it, scalability is reasonably fast, and the serverless aspect offloads a lot of the administration and hosting work. Whether it‚Äôs performance, resilience or time-to-market, DynamoDB helps us achieve our business goals. That said, when we spend several hundred thousand dollars on DynamoDB every year, any optimization is good for us! With DynamoDB, committing to a certain capacity for a year can help reduce costs ‚Äì up to 50% savings on that capacity. But how do we know how much to reserve when traffic on our platform varies throughout the day?</summary></entry></feed>